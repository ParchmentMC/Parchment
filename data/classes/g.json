{
  "name": "g",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lg;"
    },
    {
      "name": "b",
      "descriptor": "Lg;"
    },
    {
      "name": "c",
      "descriptor": "Lg;"
    },
    {
      "name": "d",
      "descriptor": "Lg;"
    },
    {
      "name": "e",
      "descriptor": "Lg;"
    },
    {
      "name": "f",
      "descriptor": "Lg;"
    },
    {
      "name": "g",
      "descriptor": "F"
    },
    {
      "name": "h",
      "descriptor": "F"
    },
    {
      "name": "i",
      "descriptor": "F"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(FFF)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Ldcn;)V"
    },
    {
      "name": "a",
      "descriptor": "()F"
    },
    {
      "name": "a",
      "descriptor": "(F)Ld;"
    },
    {
      "name": "a",
      "descriptor": "(FF)V"
    },
    {
      "name": "a",
      "descriptor": "(FFF)V"
    },
    {
      "name": "a",
      "descriptor": "(La;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ld;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lg;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lg;F)V"
    },
    {
      "name": "a",
      "descriptor": "(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V"
    },
    {
      "name": "b",
      "descriptor": "()F"
    },
    {
      "name": "b",
      "descriptor": "(F)V"
    },
    {
      "name": "b",
      "descriptor": "(FFF)V"
    },
    {
      "name": "b",
      "descriptor": "(Lg;)V"
    },
    {
      "name": "c",
      "descriptor": "()F"
    },
    {
      "name": "c",
      "descriptor": "(F)Ld;"
    },
    {
      "name": "c",
      "descriptor": "(FFF)V"
    },
    {
      "name": "c",
      "descriptor": "(Lg;)F"
    },
    {
      "name": "d",
      "descriptor": "()Z"
    },
    {
      "name": "d",
      "descriptor": "(Lg;)V"
    },
    {
      "name": "e",
      "descriptor": "()Lg;"
    },
    {
      "name": "equals",
      "descriptor": "(Ljava/lang/Object;)Z"
    },
    {
      "name": "hashCode",
      "descriptor": "()I"
    },
    {
      "name": "toString",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}