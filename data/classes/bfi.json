{
  "name": "bfi",
  "fields": [
    {
      "name": "bS",
      "descriptor": "Ljava/util/function/Predicate;"
    },
    {
      "name": "bT",
      "descriptor": "I"
    },
    {
      "name": "bV",
      "descriptor": "I"
    },
    {
      "name": "bW",
      "descriptor": "I"
    },
    {
      "name": "bX",
      "descriptor": "I"
    },
    {
      "name": "bY",
      "descriptor": "I"
    },
    {
      "name": "bZ",
      "descriptor": "I"
    },
    {
      "name": "cA",
      "descriptor": "F"
    },
    {
      "name": "cB",
      "descriptor": "F"
    },
    {
      "name": "ca",
      "descriptor": "I"
    },
    {
      "name": "cb",
      "descriptor": "I"
    },
    {
      "name": "cc",
      "descriptor": "Z"
    },
    {
      "name": "cd",
      "descriptor": "Lasf;"
    },
    {
      "name": "ce",
      "descriptor": "I",
      "javadoc": [
        "The higher this value, the more likely the horse is to be tamed next time a player rides it."
      ]
    },
    {
      "name": "cf",
      "descriptor": "F"
    },
    {
      "name": "cg",
      "descriptor": "Z"
    },
    {
      "name": "ch",
      "descriptor": "I",
      "javadoc": [
        "Used to determine the sound that the horse should make when it steps"
      ]
    },
    {
      "name": "ci",
      "descriptor": "Lbcz;"
    },
    {
      "name": "cj",
      "descriptor": "Lbte;"
    },
    {
      "name": "ck",
      "descriptor": "Lwf;"
    },
    {
      "name": "cl",
      "descriptor": "Lwf;"
    },
    {
      "name": "cm",
      "descriptor": "I"
    },
    {
      "name": "cn",
      "descriptor": "I"
    },
    {
      "name": "co",
      "descriptor": "I"
    },
    {
      "name": "cp",
      "descriptor": "I"
    },
    {
      "name": "cq",
      "descriptor": "I"
    },
    {
      "name": "cr",
      "descriptor": "I"
    },
    {
      "name": "cs",
      "descriptor": "I"
    },
    {
      "name": "ct",
      "descriptor": "I"
    },
    {
      "name": "cu",
      "descriptor": "I"
    },
    {
      "name": "cv",
      "descriptor": "Z"
    },
    {
      "name": "cw",
      "descriptor": "F"
    },
    {
      "name": "cx",
      "descriptor": "F"
    },
    {
      "name": "cy",
      "descriptor": "F"
    },
    {
      "name": "cz",
      "descriptor": "F"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "A",
      "descriptor": "(F)F"
    },
    {
      "name": "A",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "rearing"
        }
      ]
    },
    {
      "name": "B",
      "descriptor": "(F)F"
    },
    {
      "name": "B",
      "descriptor": "(Z)V",
      "javadoc": [
        "Spawns particles for the horse entity. par1 tells whether to spawn hearts. If it is false, it spawns smoke.\""
      ]
    },
    {
      "name": "J",
      "descriptor": "()I",
      "javadoc": [
        "Get number of ticks, at least during which the living entity will be silent."
      ]
    },
    {
      "name": "a",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "id"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FFLasp;)Z"
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "jumpPower"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILjava/util/function/Predicate;)Lauk;"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latd;)Latd;"
    },
    {
      "name": "a",
      "descriptor": "(Laff;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lart;)V",
      "javadoc": [
        "Called by InventoryBasic.onInventoryChanged() on a array that is never filled."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "invBasic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latd;Lbfi;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbdx;)Z",
      "javadoc": [
        "Returns true if the mob is currently able to mate with the specified mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "otherAnimal"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Lbqp;)Lasa;"
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "difficulty"
        },
        {
          "index": 3,
          "name": "reason"
        },
        {
          "index": 4,
          "name": "spawnData"
        },
        {
          "index": 5,
          "name": "dataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcge;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ldna;Latt;)Ldna;"
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "jumpPower"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lart;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Latt;)Ldna;",
      "parameters": [
        {
          "index": 1,
          "name": "livingEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lauf;Latg;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pose"
        },
        {
          "index": 2,
          "name": "size"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;Lbqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "stack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/util/UUID;)V",
      "parameters": [
        {
          "index": 1,
          "name": "uniqueId"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "b_",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should move as if it were on a ladder (either because it's actually on a ladder, or for AI reasons)"
      ]
    },
    {
      "name": "bd",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should push and be pushed by other entities when colliding."
      ]
    },
    {
      "name": "c",
      "descriptor": "()Z"
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;",
      "parameters": [
        {
          "index": 1,
          "name": "damageSource"
        }
      ]
    },
    {
      "name": "cz",
      "descriptor": "()Latf;",
      "javadoc": [
        "For vehicles, the first passenger is generally considered the controller and \"drives\" the vehicle. For example, Pigs, Horses, and Boats are generally \"steered\" by the controlling passenger."
      ]
    },
    {
      "name": "d",
      "descriptor": "()Z"
    },
    {
      "name": "d",
      "descriptor": "(FF)I",
      "parameters": [
        {
          "index": 1,
          "name": "distance"
        },
        {
          "index": 2,
          "name": "damageMultiplier"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(IZ)V"
    },
    {
      "name": "dX",
      "descriptor": "()V"
    },
    {
      "name": "eo",
      "descriptor": "()F",
      "javadoc": [
        "Returns the volume for the sounds this mob makes."
      ]
    },
    {
      "name": "eq",
      "descriptor": "()Z",
      "javadoc": [
        "Dead and sleeping entities cannot move"
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "playerEntity"
        }
      ]
    },
    {
      "name": "fD",
      "descriptor": "()V"
    },
    {
      "name": "fE",
      "descriptor": "()V"
    },
    {
      "name": "fF",
      "descriptor": "()Z"
    },
    {
      "name": "fG",
      "descriptor": "()Ljava/util/UUID;"
    },
    {
      "name": "fH",
      "descriptor": "()Z"
    },
    {
      "name": "fI",
      "descriptor": "()Z"
    },
    {
      "name": "fJ",
      "descriptor": "()Z"
    },
    {
      "name": "fK",
      "descriptor": "()Z"
    },
    {
      "name": "fL",
      "descriptor": "()I"
    },
    {
      "name": "fM",
      "descriptor": "()V"
    },
    {
      "name": "fN",
      "descriptor": "()V"
    },
    {
      "name": "fO",
      "descriptor": "()D"
    },
    {
      "name": "fP",
      "descriptor": "()Lafd;"
    },
    {
      "name": "fQ",
      "descriptor": "()Lafd;"
    },
    {
      "name": "fR",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "fS",
      "descriptor": "()I"
    },
    {
      "name": "fT",
      "descriptor": "()V"
    },
    {
      "name": "fU",
      "descriptor": "()Z"
    },
    {
      "name": "fV",
      "descriptor": "()V"
    },
    {
      "name": "fW",
      "descriptor": "()V"
    },
    {
      "name": "fX",
      "descriptor": "()Z",
      "javadoc": [
        "Return true if the horse entity ready to mate. (no rider, not riding, tame, adult, not steril...)"
      ]
    },
    {
      "name": "fY",
      "descriptor": "()F",
      "javadoc": [
        "Returns randomized max health"
      ]
    },
    {
      "name": "fZ",
      "descriptor": "()D",
      "javadoc": [
        "Returns randomized jump strength"
      ]
    },
    {
      "name": "fb",
      "descriptor": "()I",
      "javadoc": [
        "Will return how many at most can spawn in a chunk at once."
      ]
    },
    {
      "name": "fc",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if all the conditions for steering the entity are met. For pigs, this is true if it is being ridden by a player and the player is holding a carrot-on-a-stick"
      ]
    },
    {
      "name": "fv",
      "descriptor": "()V"
    },
    {
      "name": "fw",
      "descriptor": "()I"
    },
    {
      "name": "fx",
      "descriptor": "()V"
    },
    {
      "name": "g",
      "descriptor": "(Ldna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "travelVector"
        }
      ]
    },
    {
      "name": "ga",
      "descriptor": "()D",
      "javadoc": [
        "Returns randomized movement speed"
      ]
    },
    {
      "name": "gb",
      "descriptor": "()Z"
    },
    {
      "name": "gc",
      "descriptor": "()Z"
    },
    {
      "name": "h",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Latf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "passenger"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Lbkd;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "(Latt;)Z"
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "(I)Lauk;"
    },
    {
      "name": "m",
      "descriptor": "(Lbqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(Lbqp;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "p",
      "descriptor": "()V"
    },
    {
      "name": "p",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "t",
      "descriptor": "()V"
    },
    {
      "name": "u",
      "descriptor": "(I)Z"
    },
    {
      "name": "u_",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "v",
      "descriptor": "()V"
    },
    {
      "name": "v",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "temper"
        }
      ]
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "w",
      "descriptor": "(I)I"
    },
    {
      "name": "w",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "tamed"
        }
      ]
    },
    {
      "name": "x",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "jumping"
        }
      ]
    },
    {
      "name": "y",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "distance"
        }
      ]
    },
    {
      "name": "y",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "breeding"
        }
      ]
    },
    {
      "name": "z",
      "descriptor": "(F)F"
    },
    {
      "name": "z",
      "descriptor": "(Z)V"
    }
  ]
}