{
  "name": "bbe",
  "fields": [
    {
      "name": "bA",
      "descriptor": "Z"
    },
    {
      "name": "bB",
      "descriptor": "Lbbe;"
    },
    {
      "name": "bC",
      "descriptor": "Lbbe;"
    },
    {
      "name": "bw",
      "descriptor": "Lbon;"
    },
    {
      "name": "bx",
      "descriptor": "Lus;"
    },
    {
      "name": "by",
      "descriptor": "Lus;"
    },
    {
      "name": "bz",
      "descriptor": "Lus;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "A",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDidSpit"
        }
      ]
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "L_",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lapy;)Lapy;",
      "parameters": [
        {
          "index": 1
        },
        {
          "index": 2
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laon;)V",
      "javadoc": [
        "Called by InventoryBasic.onInventoryChanged() on a array that is never filled."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pInvBasic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;F)V",
      "javadoc": [
        "Attack the specified entity using a ranged attack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pTarget"
        },
        {
          "index": 2,
          "name": "pDistanceFactor"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lazz;)Z",
      "javadoc": [
        "Returns true if the mob is currently able to mate with the specified mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pOtherAnimal"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbe;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCaravanHead"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbe;Z)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbkx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pColor"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbsk;Laos;Laqp;Larc;Lmd;)Larc;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(FF)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laag;Lapy;)Lbbe;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pMate"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbbe;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bc",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y offset from the entity's position for any entity riding this one."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbfw;Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "cf",
      "descriptor": "()Ldcn;"
    },
    {
      "name": "dI",
      "descriptor": "()Z",
      "javadoc": [
        "Dead and sleeping entities cannot move"
      ]
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "eJ",
      "descriptor": "()D"
    },
    {
      "name": "eN",
      "descriptor": "()I"
    },
    {
      "name": "eO",
      "descriptor": "()V"
    },
    {
      "name": "eU",
      "descriptor": "()I"
    },
    {
      "name": "er",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if all the conditions for steering the entity are met. For pigs, this is true if it is being ridden by a player and the player is holding a carrot-on-a-stick"
      ]
    },
    {
      "name": "fA",
      "descriptor": "()V"
    },
    {
      "name": "fB",
      "descriptor": "()Z"
    },
    {
      "name": "fC",
      "descriptor": "()Z"
    },
    {
      "name": "fD",
      "descriptor": "()Lbbe;"
    },
    {
      "name": "fE",
      "descriptor": "()V"
    },
    {
      "name": "fe",
      "descriptor": "()V"
    },
    {
      "name": "fg",
      "descriptor": "()Ladp;"
    },
    {
      "name": "fh",
      "descriptor": "()Ladp;"
    },
    {
      "name": "fj",
      "descriptor": "()I"
    },
    {
      "name": "fk",
      "descriptor": "()V"
    },
    {
      "name": "fl",
      "descriptor": "()Z"
    },
    {
      "name": "fm",
      "descriptor": "()V"
    },
    {
      "name": "fs",
      "descriptor": "()Z"
    },
    {
      "name": "ft",
      "descriptor": "()Z"
    },
    {
      "name": "fu",
      "descriptor": "()Z"
    },
    {
      "name": "fv",
      "descriptor": "()I"
    },
    {
      "name": "fw",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "fx",
      "descriptor": "()I"
    },
    {
      "name": "fy",
      "descriptor": "()Lbkx;"
    },
    {
      "name": "fz",
      "descriptor": "()Lbbe;"
    },
    {
      "name": "i",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pTarget"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPassenger"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "(Lbmb;)Lbkx;"
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "w",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pVariant"
        }
      ]
    },
    {
      "name": "x",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStrength"
        }
      ]
    }
  ]
}