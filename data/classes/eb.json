{
  "name": "eb",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;"
    },
    {
      "name": "b",
      "descriptor": "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/util/Collection;"
    },
    {
      "name": "d",
      "descriptor": "C"
    },
    {
      "name": "e",
      "descriptor": "C"
    },
    {
      "name": "f",
      "descriptor": "C"
    },
    {
      "name": "g",
      "descriptor": "C"
    },
    {
      "name": "h",
      "descriptor": "C"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "()Leb;"
    },
    {
      "name": "a",
      "descriptor": "(C)Z",
      "javadoc": [
        "Returns true if the given character is normal for a tag name, and false if it has special meaning for paths."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "ch"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/brigadier/StringReader;)Leb$g;"
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Leb$h;"
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/brigadier/StringReader;Z)Leb$h;"
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leb$g;",
      "parameters": [
        {
          "index": 0,
          "name": "context"
        },
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;"
    },
    {
      "name": "a",
      "descriptor": "(Lna;)Ljava/util/function/Predicate;"
    },
    {
      "name": "a",
      "descriptor": "(Lna;Lns;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;",
      "javadoc": [
        "Reads a tag name until the next special character. Throws if the result would be a 0-length string. Does not handle quoted tag names."
      ]
    },
    {
      "name": "getExamples",
      "descriptor": "()Ljava/util/Collection;"
    },
    {
      "name": "parse",
      "descriptor": "(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;"
    }
  ]
}