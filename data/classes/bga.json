{
  "name": "bga",
  "fields": [
    {
      "name": "ag",
      "descriptor": "Lceh;"
    },
    {
      "name": "ah",
      "descriptor": "I"
    },
    {
      "name": "ai",
      "descriptor": "D"
    },
    {
      "name": "aj",
      "descriptor": "I"
    },
    {
      "name": "ak",
      "descriptor": "Ladp;"
    },
    {
      "name": "al",
      "descriptor": "Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;"
    },
    {
      "name": "am",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "b",
      "descriptor": "Z"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "Lbga$a;"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "Lus;"
    },
    {
      "name": "g",
      "descriptor": "Lus;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;DDDLbrx;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Laqm;Lbrx;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "A",
      "descriptor": "()V"
    },
    {
      "name": "P",
      "descriptor": "()Loj;"
    },
    {
      "name": "a",
      "descriptor": "(D)Z",
      "javadoc": [
        "Checks if the entity is in range to render."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDFFIZ)V",
      "javadoc": [
        "Sets a target for the client to interpolate towards over the next few ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        },
        {
          "index": 7,
          "name": "pYaw"
        },
        {
          "index": 8,
          "name": "pPitch"
        },
        {
          "index": 9,
          "name": "pPosRotationIncrements"
        },
        {
          "index": 10,
          "name": "pTeleport"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "javadoc": [
        "Sets the amount of knockback the arrow applies when it hits a mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pKnockbackStrength"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(IZ)V"
    },
    {
      "name": "a",
      "descriptor": "(Ladp;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLiving"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;F)V"
    },
    {
      "name": "a",
      "descriptor": "(Laqr;Ldcn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pType"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPose"
        },
        {
          "index": 2,
          "name": "pSize"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldcj;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ldck;)V",
      "javadoc": [
        "Called when the arrow hits an entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pResult"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldcn;Ldcn;)Ldck;",
      "javadoc": [
        "Gets the EntityRayTraceResult representing the entity hit"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStartVec"
        },
        {
          "index": 2,
          "name": "pEndVec"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Whether the arrow has a stream of critical hit particles flying behind it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCritical"
        }
      ]
    },
    {
      "name": "aC",
      "descriptor": "()Z"
    },
    {
      "name": "a_",
      "descriptor": "(Lbfw;)V",
      "javadoc": [
        "Called by a player entity when they collide with an entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(B)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bL",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if it's possible to attack this entity with an item."
      ]
    },
    {
      "name": "c",
      "descriptor": "(DDDFF)V",
      "javadoc": [
        "Similar to setArrowHeading, it's point the throwable entity to a x, y, z direction."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        },
        {
          "index": 7,
          "name": "pVelocity"
        },
        {
          "index": 8,
          "name": "pInaccuracy"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "g",
      "descriptor": "()Z"
    },
    {
      "name": "h",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "()Ladp;",
      "javadoc": [
        "The sound made when an entity is hit by this projectile"
      ]
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "()Ladp;"
    },
    {
      "name": "k",
      "descriptor": "(DDD)V",
      "javadoc": [
        "Updates the entity motion clientside, called by packets from the server"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "()Lbmb;"
    },
    {
      "name": "n",
      "descriptor": "()D"
    },
    {
      "name": "o",
      "descriptor": "()I"
    },
    {
      "name": "o",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets if this arrow can noClip"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pNoClip"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow has a stream of critical hit particles flying behind it."
      ]
    },
    {
      "name": "p",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets data about if this arrow entity was shot from a crossbow"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pFromCrossbow"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow was shot from a crossbow."
      ]
    },
    {
      "name": "r",
      "descriptor": "()B"
    },
    {
      "name": "s",
      "descriptor": "()F"
    },
    {
      "name": "t",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow can noClip"
      ]
    },
    {
      "name": "u",
      "descriptor": "()Z"
    },
    {
      "name": "z",
      "descriptor": "()V"
    }
  ]
}