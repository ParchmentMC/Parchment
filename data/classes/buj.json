{
  "name": "buj",
  "fields": [
    {
      "name": "a",
      "descriptor": "[Latk;"
    },
    {
      "name": "b",
      "descriptor": "Lbuj$a;"
    },
    {
      "name": "e",
      "descriptor": "Lbuk;"
    },
    {
      "name": "f",
      "descriptor": "Ljava/lang/String;"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lbuj$a;Lbuk;[Latk;)V"
    },
    {
      "name": "a",
      "descriptor": "()I",
      "javadoc": [
        "Returns the maximum level that the enchantment can have."
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)I",
      "javadoc": [
        "Returns the minimal value of enchantability needed on the enchantment level passed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "enchantmentLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILasp;)I",
      "javadoc": [
        "Calculates the damage protection of the enchantment based on level and damage source passed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "source"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILaty;)F",
      "javadoc": [
        "Calculates the additional damage that will be dealt by an item with this enchantment. This alternative to calcModifierDamage is sensitive to the targets EnumCreatureAttribute."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "creatureType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;)Ljava/util/Map;",
      "javadoc": [
        "Gets map of all the entity's currently equipped gear that this enchantment can go on"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "livingEntity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;Latf;I)V",
      "javadoc": [
        "Called whenever a mob is damaged with an item that has this enchantment on it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "user"
        },
        {
          "index": 2,
          "name": "target"
        },
        {
          "index": 3,
          "name": "level"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;)Z",
      "javadoc": [
        "Determines if this enchantment can be applied to a specific ItemStack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbuj;)Z",
      "javadoc": [
        "Determines if the enchantment passed can be applyied together with this enchantment."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "ench"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "()Z"
    },
    {
      "name": "b",
      "descriptor": "(I)I",
      "parameters": [
        {
          "index": 1,
          "name": "enchantmentLevel"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Latt;Latf;I)V",
      "javadoc": [
        "Whenever an entity that has this enchantment on one of its associated items is damaged this method will be called."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "user"
        },
        {
          "index": 2,
          "name": "attacker"
        },
        {
          "index": 3,
          "name": "level"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbuj;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "enchantment"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "()Z"
    },
    {
      "name": "c",
      "descriptor": "(I)Lbuj;",
      "javadoc": [
        "Gets an Enchantment from the registry, based on a numeric ID."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "id"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Lbuj$a;",
      "javadoc": [
        "Retrieves the weight value of an Enchantment. This weight value is used within vanilla to determine how rare an enchantment is."
      ]
    },
    {
      "name": "d",
      "descriptor": "(I)Los;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "()I",
      "javadoc": [
        "Returns the minimum level that the enchantment can have."
      ]
    },
    {
      "name": "f",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Return the name of key in translation table of this enchantment."
      ]
    },
    {
      "name": "h",
      "descriptor": "()Z",
      "javadoc": [
        "Checks if the enchantment can be sold by villagers in their trades."
      ]
    },
    {
      "name": "i",
      "descriptor": "()Z",
      "javadoc": [
        "Checks if the enchantment can be applied to loot table drops."
      ]
    }
  ]
}