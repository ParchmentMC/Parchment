{
  "name": "bjl",
  "fields": [
    {
      "name": "bS",
      "descriptor": "I"
    },
    {
      "name": "bT",
      "descriptor": "Lbvn;"
    },
    {
      "name": "bU",
      "descriptor": "Lwf;"
    },
    {
      "name": "bV",
      "descriptor": "I"
    },
    {
      "name": "bW",
      "descriptor": "Lbkd;"
    },
    {
      "name": "bX",
      "descriptor": "Lasf;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lasp;)V",
      "javadoc": [
        "Called when the mob's health reaches 0."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "cause"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbvm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "offer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbvn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "offers"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbvn;[Lbju$f;I)V",
      "javadoc": [
        "add limites numbers of trades to the given MerchantOffers"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "givenMerchantOffers"
        },
        {
          "index": 2,
          "name": "newTrades"
        },
        {
          "index": 3,
          "name": "maxNumbers"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "difficulty"
        },
        {
          "index": 3,
          "name": "reason"
        },
        {
          "index": 4,
          "name": "spawnData"
        },
        {
          "index": 5,
          "name": "dataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lht;)V",
      "parameters": [
        {
          "index": 1,
          "name": "particleData"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(Labr;)Latf;",
      "parameters": [
        {
          "index": 1,
          "name": "server"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lauf;Latg;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pose"
        },
        {
          "index": 2,
          "name": "size"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbvm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "offer"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "fA",
      "descriptor": "()V"
    },
    {
      "name": "fB",
      "descriptor": "()V"
    },
    {
      "name": "fC",
      "descriptor": "()Lasf;"
    },
    {
      "name": "fD",
      "descriptor": "()Lbwp;"
    },
    {
      "name": "fE",
      "descriptor": "()V"
    },
    {
      "name": "fF",
      "descriptor": "()Lart;"
    },
    {
      "name": "fv",
      "descriptor": "()Lbkd;"
    },
    {
      "name": "fw",
      "descriptor": "()Z"
    },
    {
      "name": "fx",
      "descriptor": "()Lbvn;"
    },
    {
      "name": "fy",
      "descriptor": "()Z"
    },
    {
      "name": "fz",
      "descriptor": "()Lafd;"
    },
    {
      "name": "k",
      "descriptor": "(I)Lauk;"
    },
    {
      "name": "m",
      "descriptor": "(Lbqp;)V",
      "javadoc": [
        "Notifies the merchant of a possible merchantrecipe being fulfilled or not. Usually, this is just a sound byte being played depending if the suggested itemstack is not null."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(F)Ldna;",
      "parameters": [
        {
          "index": 1,
          "name": "partialTicks"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "()I"
    },
    {
      "name": "t",
      "descriptor": "()I"
    },
    {
      "name": "t",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "ticks"
        }
      ]
    },
    {
      "name": "u",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "xp"
        }
      ]
    },
    {
      "name": "v",
      "descriptor": "(Z)Lafd;",
      "parameters": [
        {
          "index": 1,
          "name": "getYesSound"
        }
      ]
    }
  ]
}