{
  "name": "w",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lio/netty/util/ResourceLeakDetector$Level;"
    },
    {
      "name": "b",
      "descriptor": "J"
    },
    {
      "name": "c",
      "descriptor": "Z"
    },
    {
      "name": "d",
      "descriptor": "Z"
    },
    {
      "name": "e",
      "descriptor": "[C"
    },
    {
      "name": "f",
      "descriptor": "Lcom/mojang/bridge/game/GameVersion;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "()Lcom/mojang/bridge/game/GameVersion;"
    },
    {
      "name": "a",
      "descriptor": "(C)Z",
      "javadoc": [
        "Checks if the given character is allowed to be put into chat."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pCharacter"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/bridge/game/GameVersion;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;)Ljava/lang/String;",
      "javadoc": [
        "Filter a string, keeping only characters for which {@link #isAllowedCharacter(char)} returns true.",
        "",
        "Note that this method strips line breaks, as {@link #isAllowedCharacter(char)} returns false for those.",
        "@return A filtered version of the input string"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pInput"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "()I"
    }
  ]
}