{
  "name": "biq",
  "fields": [
    {
      "name": "b",
      "descriptor": "Ljava/util/UUID;"
    },
    {
      "name": "bS",
      "descriptor": "I"
    },
    {
      "name": "bT",
      "descriptor": "I"
    },
    {
      "name": "bU",
      "descriptor": "I"
    },
    {
      "name": "bV",
      "descriptor": "Lwf;"
    },
    {
      "name": "bW",
      "descriptor": "Lwf;"
    },
    {
      "name": "bX",
      "descriptor": "F"
    },
    {
      "name": "bY",
      "descriptor": "Ljava/util/function/Predicate;"
    },
    {
      "name": "bZ",
      "descriptor": "Layz;"
    },
    {
      "name": "c",
      "descriptor": "Laus;"
    },
    {
      "name": "ca",
      "descriptor": "Z"
    },
    {
      "name": "cb",
      "descriptor": "I"
    },
    {
      "name": "cc",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "Lwf;"
    },
    {
      "name": "e",
      "descriptor": "F"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbwp;)V"
    },
    {
      "name": "I_",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(I)V"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latt;)V"
    },
    {
      "name": "a",
      "descriptor": "(Larx;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lary;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lasp;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lasp;IZ)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbiq;)Ljava/util/Random;"
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Random;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lwf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(Latj;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lauf;Latg;)F"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V"
    },
    {
      "name": "bk",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y Offset of this entity."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;"
    },
    {
      "name": "d",
      "descriptor": "(Lbkd;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ]
    },
    {
      "name": "ek",
      "descriptor": "()Laty;"
    },
    {
      "name": "fB",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "fC",
      "descriptor": "()Z"
    },
    {
      "name": "fD",
      "descriptor": "()Z"
    },
    {
      "name": "fE",
      "descriptor": "()V"
    },
    {
      "name": "fv",
      "descriptor": "()Lbqp;"
    },
    {
      "name": "fw",
      "descriptor": "()Z"
    },
    {
      "name": "fy",
      "descriptor": "()V"
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "n",
      "descriptor": "()V"
    },
    {
      "name": "p",
      "descriptor": "()Z"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "t",
      "descriptor": "()Lafd;"
    },
    {
      "name": "u_",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "v",
      "descriptor": "()V"
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "w",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets or removes EntityAIBreakDoor task"
      ]
    },
    {
      "name": "w_",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "z",
      "descriptor": "(F)V"
    },
    {
      "name": "z",
      "descriptor": "(Latf;)Z"
    }
  ]
}