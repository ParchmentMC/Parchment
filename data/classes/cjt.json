{
  "name": "cjt",
  "fields": [
    {
      "name": "a",
      "descriptor": "I"
    },
    {
      "name": "b",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "d",
      "descriptor": "I"
    },
    {
      "name": "e",
      "descriptor": "Lww;"
    },
    {
      "name": "f",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "h",
      "descriptor": "Lgg;"
    },
    {
      "name": "i",
      "descriptor": "Lhb;"
    },
    {
      "name": "j",
      "descriptor": "Lcdx;"
    },
    {
      "name": "k",
      "descriptor": "Lcfk;"
    },
    {
      "name": "l",
      "descriptor": "Lcmb;"
    },
    {
      "name": "m",
      "descriptor": "Z"
    },
    {
      "name": "q",
      "descriptor": "Z"
    },
    {
      "name": "r",
      "descriptor": "Z"
    },
    {
      "name": "s",
      "descriptor": "Z"
    },
    {
      "name": "t",
      "descriptor": "F"
    },
    {
      "name": "u",
      "descriptor": "J"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "A",
      "descriptor": "()V"
    },
    {
      "name": "B",
      "descriptor": "()Z"
    },
    {
      "name": "C",
      "descriptor": "()Z"
    },
    {
      "name": "D",
      "descriptor": "()Z"
    },
    {
      "name": "E",
      "descriptor": "()Z"
    },
    {
      "name": "F",
      "descriptor": "()V"
    },
    {
      "name": "Y_",
      "descriptor": "()Lpy;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "Z_",
      "descriptor": "()Lna;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "integrity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(J)V",
      "parameters": [
        {
          "index": 1,
          "name": "seed"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Labr;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lgg;)V"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Z)Z"
    },
    {
      "name": "a",
      "descriptor": "(Labr;ZLdcu;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Latt;)V",
      "parameters": [
        {
          "index": 1,
          "name": "author"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcdx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "mirror"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcfk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "rotation"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcip;)Lcjt;"
    },
    {
      "name": "a",
      "descriptor": "(Lcjt;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lcmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "mode"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Ldaq;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lgg;)Ljava/util/stream/Stream;"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Ljava/util/stream/Stream;)Ljava/util/Optional;"
    },
    {
      "name": "a",
      "descriptor": "(Lhb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lww;)V",
      "parameters": [
        {
          "index": 1,
          "name": "newName"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "ignoreEntities"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(J)Ljava/util/Random;",
      "parameters": [
        {
          "index": 0,
          "name": "seed"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lcip;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "metadata"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)Lna;",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Z)Z",
      "javadoc": [
        "Saves the template, either updating the local version or writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "writeToDisk"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "powered"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "d",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "showAir"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "showBoundingBox"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "()Z"
    },
    {
      "name": "h",
      "descriptor": "()Lgg;"
    },
    {
      "name": "i",
      "descriptor": "()Lhb;"
    },
    {
      "name": "j",
      "descriptor": "()Lcdx;"
    },
    {
      "name": "s",
      "descriptor": "()Lcfk;"
    },
    {
      "name": "t",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "u",
      "descriptor": "()Lcmb;"
    },
    {
      "name": "v",
      "descriptor": "()Z"
    },
    {
      "name": "w",
      "descriptor": "()F"
    },
    {
      "name": "x",
      "descriptor": "()J"
    },
    {
      "name": "y",
      "descriptor": "()Z"
    },
    {
      "name": "z",
      "descriptor": "()Z",
      "javadoc": [
        "Saves the template, writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ]
    }
  ]
}