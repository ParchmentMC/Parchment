{
  "name": "bzh",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lclq;"
    },
    {
      "name": "b",
      "descriptor": "Lclj;"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "Ldnt;"
    },
    {
      "name": "e",
      "descriptor": "Ldnt;"
    },
    {
      "name": "f",
      "descriptor": "Ldnt;"
    },
    {
      "name": "g",
      "descriptor": "Ldnt;"
    },
    {
      "name": "h",
      "descriptor": "Ldnt;"
    },
    {
      "name": "i",
      "descriptor": "Ldnt;"
    },
    {
      "name": "j",
      "descriptor": "Ldnt;"
    },
    {
      "name": "k",
      "descriptor": "Ldnt;"
    },
    {
      "name": "l",
      "descriptor": "Ldnt;"
    },
    {
      "name": "m",
      "descriptor": "I"
    },
    {
      "name": "n",
      "descriptor": "Lbpl;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbpl;Lckr$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(Latf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Latj;Lbvy;Lgg;F)Ljava/util/Optional;"
    },
    {
      "name": "a",
      "descriptor": "(Latj;Lbvy;Lgg;Lgl;Lgl;)Ljava/util/Optional;"
    },
    {
      "name": "a",
      "descriptor": "(Latj;Lbvy;Lgg;[[IZ)Ljava/util/Optional;"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Lbkd$a;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbsp;)Lcks;"
    },
    {
      "name": "a",
      "descriptor": "(Lbvt;Latf;)V",
      "javadoc": [
        "Called when an Entity lands on this Block. This method *must* update motionY because the entity will not do that on its own"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbvt;Lgg;)Lgl;"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lcks;Lgg;Latf;F)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Latt;Lbqp;)V",
      "javadoc": [
        "Called by ItemBlocks after a block is set in the world, to allow post-place logic"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Lbkd;)V",
      "javadoc": [
        "Called before the Block is set to air in the world. Called regardless of if the player's tool can actually collect this block"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbvt;Lgg;Ldhb;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbvt;Lgg;Ldnf;)Ldnt;"
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lbkd;Larz;Ldmw;)Lasa;"
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lgg;)J",
      "javadoc": [
        "Return a random long to be passed to {@link IBakedModel#getQuads}, used for random model rotations"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lgl;Lcks;Lbwq;Lgg;Lgg;)Lcks;",
      "javadoc": [
        "Update the provided state given the provided neighbor facing and neighbor state, returning a new state.",
        "For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.",
        "Note that this method should ideally consider only the specific face passed in."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lckt$a;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lclg;Lgl;)Lgl;",
      "javadoc": [
        "Given a bed part and the direction it's facing, find the direction to move to get the other bed part"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;)Lcip;"
    },
    {
      "name": "a",
      "descriptor": "(Lgl;)[[I"
    },
    {
      "name": "a",
      "descriptor": "(Lgl;Lgl;)[[I"
    },
    {
      "name": "b",
      "descriptor": "(Lbvt;Lgg;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lgl;Lgl;)[[I"
    },
    {
      "name": "b_",
      "descriptor": "(Lcks;)Lcfd;",
      "javadoc": [
        "The type of render function called. MODEL for mixed tesr and static model, MODELBLOCK_ANIMATED for TESR-only, LIQUID for vanilla liquids, INVISIBLE to skip all rendering",
        "@deprecated call via {@link IBlockState#getRenderType()} whenever possible. Implementing/overriding is fine."
      ]
    },
    {
      "name": "c",
      "descriptor": "()Lbpl;"
    },
    {
      "name": "d",
      "descriptor": "(Lcks;)Ldey;",
      "javadoc": [
        "@deprecated call via {@link IBlockState#getMobilityFlag()} whenever possible. Implementing/overriding is fine."
      ]
    },
    {
      "name": "g",
      "descriptor": "(Lcks;)Lgl;"
    },
    {
      "name": "h",
      "descriptor": "(Lcks;)Lcbl$a;"
    }
  ]
}