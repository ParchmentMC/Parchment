{
  "name": "bbz",
  "fields": [
    {
      "name": "a",
      "descriptor": "Latv;"
    },
    {
      "name": "b",
      "descriptor": "Lbwp;"
    },
    {
      "name": "c",
      "descriptor": "Ldha;"
    },
    {
      "name": "d",
      "descriptor": "D"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "Ldna;"
    },
    {
      "name": "h",
      "descriptor": "Lhb;"
    },
    {
      "name": "i",
      "descriptor": "J"
    },
    {
      "name": "j",
      "descriptor": "J"
    },
    {
      "name": "k",
      "descriptor": "D"
    },
    {
      "name": "l",
      "descriptor": "F"
    },
    {
      "name": "m",
      "descriptor": "Z"
    },
    {
      "name": "n",
      "descriptor": "J"
    },
    {
      "name": "o",
      "descriptor": "Ldgz;"
    },
    {
      "name": "p",
      "descriptor": "I"
    },
    {
      "name": "q",
      "descriptor": "Lgg;"
    },
    {
      "name": "r",
      "descriptor": "I",
      "javadoc": [
        "Distance in which a path point counts as target-reaching"
      ]
    },
    {
      "name": "s",
      "descriptor": "F"
    },
    {
      "name": "t",
      "descriptor": "Ldhc;"
    },
    {
      "name": "u",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Latv;Lbwp;)V"
    },
    {
      "name": "D_",
      "descriptor": "()V",
      "javadoc": [
        "Trims path data from the end to the first sun covered block"
      ]
    },
    {
      "name": "a",
      "descriptor": "()Z",
      "javadoc": [
        "If on ground or swimming and can swim"
      ]
    },
    {
      "name": "a",
      "descriptor": "(D)V",
      "javadoc": [
        "Sets the speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "speed"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDD)Z",
      "javadoc": [
        "Try to find and set a path to XYZ. Returns true if successful. Args : x, y, z, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "speed"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDI)Ldha;",
      "javadoc": [
        "Returns path to given BlockPos"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "multiplier"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)Ldhc;"
    },
    {
      "name": "a",
      "descriptor": "(Latf;D)Z",
      "javadoc": [
        "Try to find and set a path to EntityLiving. Returns true if successful. Args : entity, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "speed"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;I)Ldha;",
      "javadoc": [
        "Returns a path to the given entity or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldha;D)Z",
      "javadoc": [
        "Sets a new path. If it's diferent from the old path. Checks to adjust path for sun avoiding, and stores start coords. Args : path, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pathentity"
        },
        {
          "index": 2,
          "name": "speed"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldna;)V",
      "javadoc": [
        "Checks if entity haven't been moved when last checked and if so, clears current {@link net.minecraft.pathfinding.PathEntity}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "positionVec3"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldna;Ldna;III)Z",
      "javadoc": [
        "Checks if the specified entity can safely walk to the specified location."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "posVec31"
        },
        {
          "index": 2,
          "name": "posVec32"
        },
        {
          "index": 3,
          "name": "sizeX"
        },
        {
          "index": 4,
          "name": "sizeY"
        },
        {
          "index": 5,
          "name": "sizeZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;I)Ldha;",
      "javadoc": [
        "Returns path to given BlockPos"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;II)Ldha;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Set;I)Ldha;",
      "parameters": [
        {
          "index": 1,
          "name": "positions"
        },
        {
          "index": 2,
          "name": "distance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Set;IZI)Ldha;",
      "javadoc": [
        "Returns a path to one of the given targets or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "targets"
        },
        {
          "index": 2,
          "name": "regionOffset"
        },
        {
          "index": 3,
          "name": "offsetUpward"
        },
        {
          "index": 4,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Set;IZIF)Ldha;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/stream/Stream;I)Ldha;",
      "javadoc": [
        "Returns a path to one of the elements of the stream or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "targets"
        },
        {
          "index": 2,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "()Ldna;"
    },
    {
      "name": "b",
      "descriptor": "(Ldna;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "()V"
    },
    {
      "name": "d",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "canSwim"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "f",
      "descriptor": "()V"
    },
    {
      "name": "g",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "()Lgg;"
    },
    {
      "name": "i",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if path can be changed by {@link net.minecraft.pathfinding.PathNavigate#onUpdateNavigation() onUpdateNavigation()}"
      ]
    },
    {
      "name": "j",
      "descriptor": "()V"
    },
    {
      "name": "k",
      "descriptor": "()Ldha;",
      "javadoc": [
        "gets the actively used PathEntity"
      ]
    },
    {
      "name": "l",
      "descriptor": "()V"
    },
    {
      "name": "m",
      "descriptor": "()Z",
      "javadoc": [
        "If null path or reached the end"
      ]
    },
    {
      "name": "n",
      "descriptor": "()Z"
    },
    {
      "name": "o",
      "descriptor": "()V",
      "javadoc": [
        "sets active PathEntity to null"
      ]
    },
    {
      "name": "p",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the entity is in water or lava, false otherwise"
      ]
    },
    {
      "name": "q",
      "descriptor": "()Ldgz;"
    },
    {
      "name": "r",
      "descriptor": "()Z"
    },
    {
      "name": "s",
      "descriptor": "()F"
    },
    {
      "name": "t",
      "descriptor": "()Z"
    }
  ]
}