{
  "name": "bjq",
  "fields": [
    {
      "name": "bU",
      "descriptor": "I"
    },
    {
      "name": "bV",
      "descriptor": "Ljava/util/Map;",
      "javadoc": [
        "Mapping between valid food items and their respective efficiency values."
      ]
    },
    {
      "name": "bW",
      "descriptor": "F"
    },
    {
      "name": "bX",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "bY",
      "descriptor": "Lwf;"
    },
    {
      "name": "bZ",
      "descriptor": "I"
    },
    {
      "name": "ca",
      "descriptor": "Ljava/util/Set;",
      "javadoc": [
        "Defaults items a villager regardless of its profession can pick up."
      ]
    },
    {
      "name": "cb",
      "descriptor": "I"
    },
    {
      "name": "cc",
      "descriptor": "I"
    },
    {
      "name": "cd",
      "descriptor": "I"
    },
    {
      "name": "ce",
      "descriptor": "I"
    },
    {
      "name": "cf",
      "descriptor": "I"
    },
    {
      "name": "cg",
      "descriptor": "I"
    },
    {
      "name": "ch",
      "descriptor": "J"
    },
    {
      "name": "ci",
      "descriptor": "I"
    },
    {
      "name": "cj",
      "descriptor": "Z"
    },
    {
      "name": "ck",
      "descriptor": "Lbkd;"
    },
    {
      "name": "cl",
      "descriptor": "Z"
    },
    {
      "name": "cm",
      "descriptor": "B"
    },
    {
      "name": "cn",
      "descriptor": "Lbbp;"
    },
    {
      "name": "co",
      "descriptor": "J"
    },
    {
      "name": "cp",
      "descriptor": "J"
    },
    {
      "name": "cq",
      "descriptor": "I"
    },
    {
      "name": "cr",
      "descriptor": "J"
    },
    {
      "name": "cs",
      "descriptor": "I"
    },
    {
      "name": "ct",
      "descriptor": "J"
    },
    {
      "name": "cu",
      "descriptor": "Z"
    },
    {
      "name": "cv",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "cw",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;Lbjv;)V"
    },
    {
      "name": "R",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(J)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pGameTime"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(JLbjq;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Labr;JI)V"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latd;)Latd;"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latf;Latt;)V"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lats;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pLightning"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lbjq;J)V"
    },
    {
      "name": "a",
      "descriptor": "(Lasf;Ljava/util/Map$Entry;)I"
    },
    {
      "name": "a",
      "descriptor": "(Lasp;)V",
      "javadoc": [
        "Called when the mob's health reaches 0."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCause"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pMurderer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;)V",
      "javadoc": [
        "Hint to AI tasks that we were attacked by the passed EntityLivingBase and should retaliate. Is not guaranteed to change our actual active target (for example if we are currently busy attacking someone else)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLivingBase"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lauo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pVillagerBrain"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbq;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbbt;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pModuleType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbdj;Latf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pType"
        },
        {
          "index": 2,
          "name": "pTarget"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbjq;Lbdp;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbjr;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/serialization/Dynamic;)Lauo;",
      "parameters": [
        {
          "index": 1,
          "name": "pDynamic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;DD)Lgg;",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pX"
        },
        {
          "index": 4,
          "name": "pZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;Lns;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lnet/minecraft/server/MinecraftServer;Lbbt;Lgo;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lns;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pGossip"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(J)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pGameTime"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Labr;Latd;)Lbjq;"
    },
    {
      "name": "b",
      "descriptor": "(Lbhc;)V",
      "javadoc": [
        "Tests if this entity should pickup a weapon or an armor. Entity drops current weapon or armor if the new one is better."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pItemEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbjq;Lbdp;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;Larz;)Lasa;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbvm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pOffer"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbvn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pOffers"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bY",
      "descriptor": "()Los;"
    },
    {
      "name": "c",
      "descriptor": "(Labr;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pServerLevel"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbjq;Lbdp;)Z"
    },
    {
      "name": "d",
      "descriptor": "(Labr;)Lbeh;"
    },
    {
      "name": "d",
      "descriptor": "(Lbjq;Lbdp;)Z"
    },
    {
      "name": "do",
      "descriptor": "()Lauo;"
    },
    {
      "name": "dp",
      "descriptor": "()Lauo$b;"
    },
    {
      "name": "eV",
      "descriptor": "()V"
    },
    {
      "name": "eX",
      "descriptor": "()V"
    },
    {
      "name": "f",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "fB",
      "descriptor": "()V"
    },
    {
      "name": "fE",
      "descriptor": "()V"
    },
    {
      "name": "fG",
      "descriptor": "()Lbjr;"
    },
    {
      "name": "fH",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "fI",
      "descriptor": "()Z"
    },
    {
      "name": "fJ",
      "descriptor": "()Z"
    },
    {
      "name": "fK",
      "descriptor": "()V"
    },
    {
      "name": "fL",
      "descriptor": "()Z"
    },
    {
      "name": "fM",
      "descriptor": "()V"
    },
    {
      "name": "fN",
      "descriptor": "()Z"
    },
    {
      "name": "fO",
      "descriptor": "()V"
    },
    {
      "name": "fP",
      "descriptor": "()Z",
      "javadoc": [
        "Used by {@link net.minecraft.entity.ai.EntityAIVillagerInteract EntityAIVillagerInteract} to check if the villager can give some items from an inventory to another villager."
      ]
    },
    {
      "name": "fQ",
      "descriptor": "()Z"
    },
    {
      "name": "fR",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if villager has seeds, potatoes or carrots in inventory"
      ]
    },
    {
      "name": "fS",
      "descriptor": "()Lbbp;"
    },
    {
      "name": "fT",
      "descriptor": "()V"
    },
    {
      "name": "fU",
      "descriptor": "()V"
    },
    {
      "name": "fV",
      "descriptor": "()Z"
    },
    {
      "name": "fW",
      "descriptor": "()Z"
    },
    {
      "name": "fX",
      "descriptor": "()V"
    },
    {
      "name": "fY",
      "descriptor": "()V"
    },
    {
      "name": "fZ",
      "descriptor": "()V"
    },
    {
      "name": "g",
      "descriptor": "()Z"
    },
    {
      "name": "g",
      "descriptor": "(Lbkd;)I",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "ga",
      "descriptor": "()Z"
    },
    {
      "name": "gb",
      "descriptor": "()V"
    },
    {
      "name": "gc",
      "descriptor": "()Z"
    },
    {
      "name": "gd",
      "descriptor": "()V"
    },
    {
      "name": "ge",
      "descriptor": "()I",
      "javadoc": [
        "@return calculated food value from item stacks in this villager's inventory"
      ]
    },
    {
      "name": "gf",
      "descriptor": "()V"
    },
    {
      "name": "gg",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "(Latt;)Z"
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "l",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "n",
      "descriptor": "()V"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "t",
      "descriptor": "()I"
    },
    {
      "name": "v",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pXp"
        }
      ]
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "w",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pQty"
        }
      ]
    },
    {
      "name": "w",
      "descriptor": "(Z)V"
    }
  ]
}