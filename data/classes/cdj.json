{
  "name": "cdj",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lvk;"
    },
    {
      "name": "b",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "Lfx;"
    },
    {
      "name": "h",
      "descriptor": "Lfx;"
    },
    {
      "name": "i",
      "descriptor": "Lbyg;"
    },
    {
      "name": "j",
      "descriptor": "Lbzm;"
    },
    {
      "name": "k",
      "descriptor": "Lcfo;"
    },
    {
      "name": "l",
      "descriptor": "Z"
    },
    {
      "name": "m",
      "descriptor": "Z"
    },
    {
      "name": "n",
      "descriptor": "Z"
    },
    {
      "name": "o",
      "descriptor": "Z"
    },
    {
      "name": "p",
      "descriptor": "F"
    },
    {
      "name": "q",
      "descriptor": "J"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "A",
      "descriptor": "()F"
    },
    {
      "name": "B",
      "descriptor": "()J"
    },
    {
      "name": "C",
      "descriptor": "()Z"
    },
    {
      "name": "D",
      "descriptor": "()Z",
      "javadoc": [
        "Saves the template, writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ]
    },
    {
      "name": "E",
      "descriptor": "()V"
    },
    {
      "name": "F",
      "descriptor": "()Z"
    },
    {
      "name": "G",
      "descriptor": "()Z"
    },
    {
      "name": "H",
      "descriptor": "()Z"
    },
    {
      "name": "I",
      "descriptor": "()Z"
    },
    {
      "name": "J",
      "descriptor": "()Lnr;"
    },
    {
      "name": "K",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "()Low;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pIntegrityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(J)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSeedIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laag;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laag;Z)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laag;ZLctb;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAuthor"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcdj;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcfo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pModeIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;Lfx;)Ljava/util/List;"
    },
    {
      "name": "a",
      "descriptor": "(Lfx;Ljava/util/List;)Lcra;",
      "parameters": [
        {
          "index": 2,
          "name": "pStructureBlocks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pNameIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;)Ljava/util/List;",
      "parameters": [
        {
          "index": 1,
          "name": "pStructureBlocks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)Lmd;",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lvk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pNewName"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pIgnoreEntitiesIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "()Lmd;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "b",
      "descriptor": "(J)Ljava/util/Random;",
      "parameters": [
        {
          "index": 0,
          "name": "pSeed"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbyg;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pMirrorIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pRotationIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPosIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pMetadataIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Z)Z",
      "javadoc": [
        "Saves the template, either updating the local version or writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pWriteToDisk"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSizeIn"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPoweredIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "d",
      "descriptor": "(Lfx;)Lcra;"
    },
    {
      "name": "d",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pShowAirIn"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pShowBoundingBoxIn"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "()Z"
    },
    {
      "name": "h",
      "descriptor": "()Lfx;"
    },
    {
      "name": "i",
      "descriptor": "()D"
    },
    {
      "name": "j",
      "descriptor": "()Lfx;"
    },
    {
      "name": "k",
      "descriptor": "()Lbyg;"
    },
    {
      "name": "l",
      "descriptor": "()Lbzm;"
    },
    {
      "name": "m",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "x",
      "descriptor": "()Lcfo;"
    },
    {
      "name": "y",
      "descriptor": "()V"
    },
    {
      "name": "z",
      "descriptor": "()Z"
    }
  ]
}