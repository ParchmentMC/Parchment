{
  "name": "bej",
  "fields": [
    {
      "name": "b",
      "descriptor": "Ljava/util/UUID;"
    },
    {
      "name": "bo",
      "descriptor": "Lus;"
    },
    {
      "name": "bp",
      "descriptor": "Lus;"
    },
    {
      "name": "bq",
      "descriptor": "Ljava/util/function/Predicate;"
    },
    {
      "name": "br",
      "descriptor": "Lavg;"
    },
    {
      "name": "bs",
      "descriptor": "Z"
    },
    {
      "name": "bt",
      "descriptor": "I"
    },
    {
      "name": "bu",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "Larj;"
    },
    {
      "name": "d",
      "descriptor": "Lus;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbrx;)V"
    },
    {
      "name": "B",
      "descriptor": "(Laqa;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "T_",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(I)V"
    },
    {
      "name": "a",
      "descriptor": "(Laag;Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pKilledEntity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laor;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laos;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDifficulty"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pLooting"
        },
        {
          "index": 3,
          "name": "pRecentlyHit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbej;)Ljava/util/Random;"
    },
    {
      "name": "a",
      "descriptor": "(Lbsk;Laos;Laqp;Larc;Lmd;)Larc;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Random;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lus;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pChildZombie"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqe;)V"
    },
    {
      "name": "b",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPose"
        },
        {
          "index": 2,
          "name": "pSize"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bb",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y Offset of this entity."
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbfw;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "dC",
      "descriptor": "()Laqq;"
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "eK",
      "descriptor": "()Z"
    },
    {
      "name": "eL",
      "descriptor": "()Ladp;"
    },
    {
      "name": "eM",
      "descriptor": "()Lbmb;"
    },
    {
      "name": "eN",
      "descriptor": "()Z"
    },
    {
      "name": "eP",
      "descriptor": "()V"
    },
    {
      "name": "eS",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "eT",
      "descriptor": "()Z"
    },
    {
      "name": "eU",
      "descriptor": "()Z"
    },
    {
      "name": "eV",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "m",
      "descriptor": "()V"
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "u",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets or removes EntityAIBreakDoor task"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEnabled"
        }
      ]
    },
    {
      "name": "w_",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "y",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDifficulty"
        }
      ]
    }
  ]
}