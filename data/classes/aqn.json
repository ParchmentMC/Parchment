{
  "name": "aqn",
  "fields": [
    {
      "name": "b",
      "descriptor": "Lus;"
    },
    {
      "name": "bA",
      "descriptor": "F"
    },
    {
      "name": "bh",
      "descriptor": "Lavb;"
    },
    {
      "name": "bi",
      "descriptor": "Lauz;"
    },
    {
      "name": "bj",
      "descriptor": "Layj;"
    },
    {
      "name": "bk",
      "descriptor": "Lavw;"
    },
    {
      "name": "bl",
      "descriptor": "Lavw;"
    },
    {
      "name": "bm",
      "descriptor": "[F"
    },
    {
      "name": "bn",
      "descriptor": "[F"
    },
    {
      "name": "bo",
      "descriptor": "Laza;"
    },
    {
      "name": "bp",
      "descriptor": "Lgj;"
    },
    {
      "name": "bq",
      "descriptor": "Lgj;"
    },
    {
      "name": "br",
      "descriptor": "Z"
    },
    {
      "name": "bs",
      "descriptor": "Z"
    },
    {
      "name": "bt",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "bu",
      "descriptor": "Lvk;"
    },
    {
      "name": "bv",
      "descriptor": "J"
    },
    {
      "name": "bw",
      "descriptor": "Laqa;"
    },
    {
      "name": "bx",
      "descriptor": "I"
    },
    {
      "name": "by",
      "descriptor": "Lmd;"
    },
    {
      "name": "bz",
      "descriptor": "Lfx;"
    },
    {
      "name": "c",
      "descriptor": "Lauu;"
    },
    {
      "name": "d",
      "descriptor": "Laqm;"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "Lava;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "A",
      "descriptor": "()Laqm;",
      "javadoc": [
        "Gets the active target the Task system uses for tracking"
      ]
    },
    {
      "name": "B",
      "descriptor": "()V",
      "javadoc": [
        "This function applies the benefits of growing back wool and faster growing up to the acting entity. (This function is used in the AIEatGrass)"
      ]
    },
    {
      "name": "B",
      "descriptor": "(Laqa;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "D",
      "descriptor": "()I",
      "javadoc": [
        "Get number of ticks, at least during which the living entity will be silent."
      ]
    },
    {
      "name": "F",
      "descriptor": "()V",
      "javadoc": [
        "Plays living's sound at its position"
      ]
    },
    {
      "name": "G",
      "descriptor": "()V",
      "javadoc": [
        "Spawns an explosion particle around the Entity's location"
      ]
    },
    {
      "name": "H",
      "descriptor": "()V",
      "javadoc": [
        "Sets MOVE, JUMP, LOOK Goal.Flags depending if entity is riding or been controlled"
      ]
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "J",
      "descriptor": "()Lvk;"
    },
    {
      "name": "K",
      "descriptor": "()Z"
    },
    {
      "name": "L",
      "descriptor": "()Z"
    },
    {
      "name": "M",
      "descriptor": "()V"
    },
    {
      "name": "N",
      "descriptor": "()V"
    },
    {
      "name": "O",
      "descriptor": "()I",
      "javadoc": [
        "The speed it takes to move the entityliving's rotationPitch through the faceEntity method. This is only currently use in wolves."
      ]
    },
    {
      "name": "Q",
      "descriptor": "()I"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FFF)F",
      "javadoc": [
        "Arguments: current rotation, intended rotation, max increment."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAngle"
        },
        {
          "index": 2,
          "name": "pTargetAngle"
        },
        {
          "index": 3,
          "name": "pMaxIncrease"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FLaqf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Laos;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDifficulty"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pLooting"
        },
        {
          "index": 3,
          "name": "pRecentlyHitIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        },
        {
          "index": 2,
          "name": "pAttackedRecently"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;FF)V",
      "javadoc": [
        "Changes pitch and yaw so that the entity calling the function is facing the entity provided as an argument."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        },
        {
          "index": 2,
          "name": "pMaxYawIncrease"
        },
        {
          "index": 3,
          "name": "pMaxPitchIncrease"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        },
        {
          "index": 2,
          "name": "pForce"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqe;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pTypeIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqe;Lbry;Laqp;Lfx;Ljava/util/Random;)Z",
      "javadoc": [
        "Returns true if entity is spawned from spawner or if entity can spawn on given BlockPos"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pTypeIn"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pReason"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRandomIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqe;Z)Laqn;"
    },
    {
      "name": "a",
      "descriptor": "(Laqf;F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        },
        {
          "index": 2,
          "name": "pChance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqf;I)Lblx;",
      "parameters": [
        {
          "index": 0,
          "name": "pSlotIn"
        },
        {
          "index": 1,
          "name": "pChance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqf;Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Laot;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Laqn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayerIn"
        },
        {
          "index": 2,
          "name": "pChild"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Lbmb;Lbmb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pCandidate"
        },
        {
          "index": 2,
          "name": "pExisting"
        },
        {
          "index": 3,
          "name": "pSlotTypeIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmo;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbry;Laqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pSpawnReasonIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrz;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbsk;Laos;Laqp;Larc;Lmd;)Larc;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pDifficultyIn"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnDataIn"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcwz;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pNodeType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcwz;F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pNodeType"
        },
        {
          "index": 2,
          "name": "pPriority"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pDistance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pChildZombie"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ZLapk;)Lcyv$a;",
      "parameters": [
        {
          "index": 1,
          "name": "pAttackedRecently"
        },
        {
          "index": 2,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ZZ)V",
      "javadoc": [
        "Removes the leash from this entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSendPacket"
        },
        {
          "index": 2,
          "name": "pDropLead"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "(ILbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pInventorySlot"
        },
        {
          "index": 2,
          "name": "pItemStackIn"
        }
      ]
    },
    {
      "name": "ag",
      "descriptor": "()V",
      "javadoc": [
        "Gets called every tick from main Entity class"
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laos;)V",
      "javadoc": [
        "Enchants Entity's current equipments based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDifficulty"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqa;Z)V",
      "javadoc": [
        "Sets the entity to be leashed to."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        },
        {
          "index": 2,
          "name": "pSendAttachNotification"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqf;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqf;Lbmb;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lbcv;)V",
      "javadoc": [
        "Tests if this entity should pickup a weapon or an armor. Entity drops current weapon or armor if the new one is better."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pItemEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;Laot;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayerIn"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;Laqn;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lbmb;Lbmb;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lbrx;)Layj;",
      "javadoc": [
        "Returns new PathNavigateGround instance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lcwz;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bN",
      "descriptor": "()V"
    },
    {
      "name": "bP",
      "descriptor": "()I",
      "javadoc": [
        "The maximum height from where the entity is alowed to jump (used in pathfinder)"
      ]
    },
    {
      "name": "bn",
      "descriptor": "()Ljava/lang/Iterable;"
    },
    {
      "name": "bo",
      "descriptor": "()Ljava/lang/Iterable;"
    },
    {
      "name": "c",
      "descriptor": "(I)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pSizeIn"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lael;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pFluidTag"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lapk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laqf;Lbmb;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pSlotIn"
        },
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laqm;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pTarget"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbfw;Laot;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ljava/lang/String;)Z"
    },
    {
      "name": "cI",
      "descriptor": "()V",
      "javadoc": [
        "Makes the entity despawn if requirements are reached"
      ]
    },
    {
      "name": "cs",
      "descriptor": "()Z"
    },
    {
      "name": "d",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLeashHolderIDIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Laqf;)V"
    },
    {
      "name": "d",
      "descriptor": "(Lbfw;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Ljava/lang/String;)Z"
    },
    {
      "name": "dP",
      "descriptor": "()V"
    },
    {
      "name": "dS",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether the entity is in a server world"
      ]
    },
    {
      "name": "dV",
      "descriptor": "()Laqi;"
    },
    {
      "name": "dp",
      "descriptor": "()Lvk;"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(Laqf;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pItemstackIn"
        }
      ]
    },
    {
      "name": "eA",
      "descriptor": "()V",
      "javadoc": [
        "Applies logic related to leashes, for example dragging the entity or breaking the leash."
      ]
    },
    {
      "name": "eB",
      "descriptor": "()Z"
    },
    {
      "name": "eC",
      "descriptor": "()Laqa;"
    },
    {
      "name": "eD",
      "descriptor": "()Z",
      "javadoc": [
        "Get whether this Entity's AI is disabled"
      ]
    },
    {
      "name": "eE",
      "descriptor": "()Z"
    },
    {
      "name": "eF",
      "descriptor": "()Z"
    },
    {
      "name": "eG",
      "descriptor": "()Z"
    },
    {
      "name": "eH",
      "descriptor": "()V"
    },
    {
      "name": "eI",
      "descriptor": "()V"
    },
    {
      "name": "ep",
      "descriptor": "()I"
    },
    {
      "name": "eq",
      "descriptor": "()I",
      "javadoc": [
        "Will return how many at most can spawn in a chunk at once."
      ]
    },
    {
      "name": "er",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if all the conditions for steering the entity are met. For pigs, this is true if it is being ridden by a player and the player is holding a carrot-on-a-stick"
      ]
    },
    {
      "name": "es",
      "descriptor": "()V",
      "javadoc": [
        "Enable the Entity persistence"
      ]
    },
    {
      "name": "et",
      "descriptor": "()Z"
    },
    {
      "name": "eu",
      "descriptor": "()Z",
      "javadoc": [
        "Return the persistenceRequired field (whether this entity is allowed to naturally despawn)"
      ]
    },
    {
      "name": "ev",
      "descriptor": "()Z"
    },
    {
      "name": "ew",
      "descriptor": "()Lfx;"
    },
    {
      "name": "ex",
      "descriptor": "()F"
    },
    {
      "name": "ey",
      "descriptor": "()V"
    },
    {
      "name": "ez",
      "descriptor": "()Z"
    },
    {
      "name": "f",
      "descriptor": "(FF)F"
    },
    {
      "name": "g",
      "descriptor": "(Lbmb;)Z"
    },
    {
      "name": "h",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Laqm;)V",
      "javadoc": [
        "Sets the active target the Task system uses for tracking"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntitylivingbaseIn"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Lbmb;)Z"
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "j",
      "descriptor": "(Lbmb;)Laqf;",
      "parameters": [
        {
          "index": 0,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "m",
      "descriptor": "()V"
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "p",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "p",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCanPickup"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "()Z"
    },
    {
      "name": "q",
      "descriptor": "(F)V",
      "javadoc": [
        "set the movespeed used for the new AI system"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSpeedIn"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this Entity's AI is disabled"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDisable"
        }
      ]
    },
    {
      "name": "r",
      "descriptor": "()Lauu;"
    },
    {
      "name": "r",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLeftHanded"
        }
      ]
    },
    {
      "name": "s",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHasAggro"
        }
      ]
    },
    {
      "name": "t",
      "descriptor": "()Lava;"
    },
    {
      "name": "t",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "u",
      "descriptor": "()Lavb;"
    },
    {
      "name": "u",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "v",
      "descriptor": "()Lauz;"
    },
    {
      "name": "v",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "w",
      "descriptor": "(F)V"
    },
    {
      "name": "x",
      "descriptor": "()Layj;"
    },
    {
      "name": "z",
      "descriptor": "()Laza;",
      "javadoc": [
        "returns the EntitySenses Object for the EntityLiving"
      ]
    }
  ]
}