{
  "name": "net/minecraft/util/Crypt",
  "methods": [
    {
      "name": "byteToPublicKey",
      "descriptor": "([B)Ljava/security/PublicKey;",
      "javadoc": [
        "Create a new PublicKey from encoded X.509 data"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "encodedKey"
        }
      ]
    },
    {
      "name": "cipherData",
      "descriptor": "(ILjava/security/Key;[B)[B",
      "javadoc": [
        "Encrypt or decrypt byte[] data using the specified key"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "opMode"
        },
        {
          "index": 1,
          "name": "key"
        },
        {
          "index": 2,
          "name": "data"
        }
      ]
    },
    {
      "name": "decryptByteToSecretKey",
      "descriptor": "(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;",
      "javadoc": [
        "Decrypt shared secret AES key using RSA private key"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "key"
        },
        {
          "index": 1,
          "name": "secretKeyEncrypted"
        }
      ]
    },
    {
      "name": "decryptUsingKey",
      "descriptor": "(Ljava/security/Key;[B)[B",
      "javadoc": [
        "Decrypt byte[] data with RSA private key"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "key"
        },
        {
          "index": 1,
          "name": "data"
        }
      ]
    },
    {
      "name": "digestData",
      "descriptor": "(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B",
      "javadoc": [
        "Compute a serverId hash for use by sendSessionRequest()"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "serverId"
        },
        {
          "index": 1,
          "name": "publicKey"
        },
        {
          "index": 2,
          "name": "secretKey"
        }
      ]
    },
    {
      "name": "encryptUsingKey",
      "descriptor": "(Ljava/security/Key;[B)[B",
      "javadoc": [
        "Encrypt byte[] data with RSA public key"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "key"
        },
        {
          "index": 1,
          "name": "data"
        }
      ]
    },
    {
      "name": "generateKeyPair",
      "descriptor": "()Ljava/security/KeyPair;",
      "javadoc": [
        "Generates RSA KeyPair"
      ]
    },
    {
      "name": "generateSecretKey",
      "descriptor": "()Ljavax/crypto/SecretKey;",
      "javadoc": [
        "Generate a new shared secret AES key from a secure random source"
      ]
    },
    {
      "name": "getCipher",
      "descriptor": "(ILjava/security/Key;)Ljavax/crypto/Cipher;",
      "javadoc": [
        "Creates an Cipher instance using the AES/CFB8/NoPadding algorithm. Used for protocol encryption."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "opMode"
        },
        {
          "index": 1,
          "name": "key"
        }
      ]
    },
    {
      "name": "setupCipher",
      "descriptor": "(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;",
      "javadoc": [
        "Creates the Cipher Instance."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "opMode"
        },
        {
          "index": 1,
          "name": "transformation"
        },
        {
          "index": 2,
          "name": "key"
        }
      ]
    }
  ]
}