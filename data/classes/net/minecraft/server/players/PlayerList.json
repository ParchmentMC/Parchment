{
  "name": "net/minecraft/server/players/PlayerList",
  "fields": [
    {
      "name": "playersByUUID",
      "descriptor": "Ljava/util/Map;",
      "javadoc": [
        "A map containing the key-value pairs for UUIDs and their EntityPlayerMP objects."
      ]
    }
  ],
  "methods": [
    {
      "name": "broadcast",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V",
      "javadoc": [
        "params: srcPlayer,x,y,z,r,dimension. The packet is not sent to the srcPlayer, but all other players within the search radius"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "except"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 4,
          "name": "y"
        },
        {
          "index": 6,
          "name": "z"
        },
        {
          "index": 8,
          "name": "radius"
        },
        {
          "index": 10,
          "name": "dimension"
        },
        {
          "index": 11,
          "name": "packet"
        }
      ]
    },
    {
      "name": "broadcastAll",
      "descriptor": "(Lnet/minecraft/network/protocol/Packet;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "broadcastToAllExceptTeam",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "message"
        }
      ]
    },
    {
      "name": "broadcastToTeam",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "message"
        }
      ]
    },
    {
      "name": "canBypassPlayerLimit",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "deop",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)V",
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "getMaxPlayers",
      "descriptor": "()I",
      "javadoc": [
        "Returns the maximum number of players allowed on the server."
      ]
    },
    {
      "name": "getPlayer",
      "descriptor": "(Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer;",
      "javadoc": [
        "Get's the EntityPlayerMP object representing the player with the UUID."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "playerUUID"
        }
      ]
    },
    {
      "name": "getPlayerByName",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer;",
      "parameters": [
        {
          "index": 1,
          "name": "username"
        }
      ]
    },
    {
      "name": "getPlayerCount",
      "descriptor": "()I",
      "javadoc": [
        "Returns the number of players currently on the server."
      ]
    },
    {
      "name": "getPlayerForLogin",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer;",
      "javadoc": [
        "also checks for multiple logins across servers"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "getPlayerNamesArray",
      "descriptor": "()[Ljava/lang/String;",
      "javadoc": [
        "Returns an array of the usernames of all the connected players."
      ]
    },
    {
      "name": "getPlayerStats",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter;",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "getPlayersWithAddress",
      "descriptor": "(Ljava/lang/String;)Ljava/util/List;",
      "parameters": [
        {
          "index": 1,
          "name": "address"
        }
      ]
    },
    {
      "name": "getSingleplayerData",
      "descriptor": "()Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "On integrated servers, returns the host's player data to be written to level.dat."
      ]
    },
    {
      "name": "getViewDistance",
      "descriptor": "()I",
      "javadoc": [
        "Gets the view distance, in chunks."
      ]
    },
    {
      "name": "isOp",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "isWhiteListed",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "load",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "called during player login. reads the player information from disk."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "op",
      "descriptor": "(Lcom/mojang/authlib/GameProfile;)V",
      "parameters": [
        {
          "index": 1,
          "name": "profile"
        }
      ]
    },
    {
      "name": "placeNewPlayer",
      "descriptor": "(Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "netManager"
        },
        {
          "index": 2,
          "name": "player"
        }
      ]
    },
    {
      "name": "remove",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "javadoc": [
        "Called when a player disconnects from the game. Writes player data to disk and removes them from the world."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "removeAll",
      "descriptor": "()V",
      "javadoc": [
        "Kicks everyone with \"Server closed\" as reason."
      ]
    },
    {
      "name": "save",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "javadoc": [
        "also stores the NBTTags if this is an intergratedPlayerList"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "saveAll",
      "descriptor": "()V",
      "javadoc": [
        "Saves all of the players' current states."
      ]
    },
    {
      "name": "sendAllPlayerInfo",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "javadoc": [
        "sends the players inventory to himself"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "sendLevelInfo",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V",
      "javadoc": [
        "Updates the time and weather for the given player to those of the given world"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "level"
        }
      ]
    },
    {
      "name": "sendPlayerPermissionLevel",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "sendPlayerPermissionLevel",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "permLevel"
        }
      ]
    },
    {
      "name": "setAllowCheatsForAllPlayers",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets whether all players are allowed to use commands (cheats) on the server."
      ]
    },
    {
      "name": "setUsingWhiteList",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "whitelistEnabled"
        }
      ]
    },
    {
      "name": "setViewDistance",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "viewDistance"
        }
      ]
    },
    {
      "name": "tick",
      "descriptor": "()V",
      "javadoc": [
        "self explanitory"
      ]
    },
    {
      "name": "updateEntireScoreboard",
      "descriptor": "(Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "scoreboard"
        },
        {
          "index": 2,
          "name": "player"
        }
      ]
    }
  ]
}