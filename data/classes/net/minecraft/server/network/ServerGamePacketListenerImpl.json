{
  "name": "net/minecraft/server/network/ServerGamePacketListenerImpl",
  "fields": [
    {
      "name": "aboveGroundTickCount",
      "descriptor": "I",
      "javadoc": [
        "Used to keep track of how the player is floating while gamerules should prevent that. Surpassing 80 ticks means kick"
      ]
    },
    {
      "name": "chatSpamTickCount",
      "descriptor": "I",
      "javadoc": [
        "Incremented by 20 each time a user sends a chat message, decreased by one every tick. Non-ops kicked when over 200"
      ]
    }
  ],
  "methods": [
    {
      "name": "disconnect",
      "descriptor": "(Lnet/minecraft/network/chat/Component;)V",
      "javadoc": [
        "Disconnect the player with a specified reason"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "textComponent"
        }
      ]
    },
    {
      "name": "getConnection",
      "descriptor": "()Lnet/minecraft/network/Connection;",
      "javadoc": [
        "Returns this the NetworkManager instance registered with this NetworkHandlerPlayClient"
      ]
    },
    {
      "name": "handleAcceptTeleportPacket",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleAnimate",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleBlockEntityTagQuery",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleChat",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V",
      "javadoc": [
        "Process chat messages (broadcast back to clients) and commands (executes)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleClientCommand",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V",
      "javadoc": [
        "Processes the client status updates: respawn attempt from player, opening statistics or achievements, or acquiring 'open inventory' achievement"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleClientInformation",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V",
      "javadoc": [
        "Updates serverside copy of client settings: language, render distance, chat visibility, chat colours, difficulty, and whether to show the cape"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleCommand",
      "descriptor": "(Ljava/lang/String;)V",
      "javadoc": [
        "Handle commands that start with a /"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "command"
        }
      ]
    },
    {
      "name": "handleContainerButtonClick",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V",
      "javadoc": [
        "Enchants the item identified by the packet given some convoluted conditions (matching window, which should/shouldn't be in use?)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleContainerClick",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V",
      "javadoc": [
        "Executes a container/inventory slot manipulation as indicated by the packet. Sends the serverside result if they didn't match the indicated result and prevents further manipulation by the player until he confirms that it has the same open container/inventory"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleContainerClose",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V",
      "javadoc": [
        "Processes the client closing windows (container)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleCustomCommandSuggestions",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V",
      "javadoc": [
        "This method is only called for manual tab-completion (the {@link net.minecraft.command.arguments.SuggestionProviders#ASK_SERVER minecraft:ask_server} suggestion provider)."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleCustomPayload",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V",
      "javadoc": [
        "Synchronizes serverside and clientside book contents and signing"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleEditBook",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleEntityTagQuery",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleInteract",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V",
      "javadoc": [
        "Processes left and right clicks on entities"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleKeepAlive",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V",
      "javadoc": [
        "Updates a players' ping statistics"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleMovePlayer",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V",
      "javadoc": [
        "Processes clients perspective on player positioning and/or orientation"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleMoveVehicle",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePaddleBoat",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePickItem",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePlaceRecipe",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePlayerAbilities",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V",
      "javadoc": [
        "Processes a player starting/stopping flying"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePlayerAction",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V",
      "javadoc": [
        "Processes the player initiating/stopping digging on a particular spot, as well as a player dropping items"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePlayerCommand",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V",
      "javadoc": [
        "Processes a range of action-types: sneaking, sprinting, waking from sleep, opening the inventory or setting jump height of the horse the player is riding"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handlePlayerInput",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V",
      "javadoc": [
        "Processes player movement input. Includes walking, strafing, jumping, sneaking\" excludes riding and toggling flying/sprinting"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleRecipeBookSeenRecipePacket",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleRenameItem",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleResourcePackResponse",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSeenAdvancements",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSelectTrade",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetBeaconPacket",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetCarriedItem",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V",
      "javadoc": [
        "Updates which quickbar slot is selected"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetCommandBlock",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetCommandMinecart",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetCreativeModeSlot",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V",
      "javadoc": [
        "Update the server with an ItemStack in a slot."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSetStructureBlock",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleSignUpdate",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleTeleportToEntityPacket",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleUseItem",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V",
      "javadoc": [
        "Called when a client is using an item while not pointing at a block, but simply using an item"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "handleUseItemOn",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "onDisconnect",
      "descriptor": "(Lnet/minecraft/network/chat/Component;)V",
      "javadoc": [
        "Invoked when disconnecting, the parameter is a ChatComponent describing the reason for termination"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "reason"
        }
      ]
    },
    {
      "name": "send",
      "descriptor": "(Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        },
        {
          "index": 2,
          "name": "futureListeners"
        }
      ]
    },
    {
      "name": "teleport",
      "descriptor": "(DDDFF)V",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "yaw"
        },
        {
          "index": 8,
          "name": "pitch"
        }
      ]
    },
    {
      "name": "teleport",
      "descriptor": "(DDDFFLjava/util/Set;)V",
      "javadoc": [
        "Teleports the player position to the (relative) values specified, and syncs to the client"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "yaw"
        },
        {
          "index": 8,
          "name": "pitch"
        },
        {
          "index": 9,
          "name": "relativeSet"
        }
      ]
    }
  ]
}