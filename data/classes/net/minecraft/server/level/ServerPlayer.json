{
  "name": "net/minecraft/server/level/ServerPlayer",
  "fields": [
    {
      "name": "camera",
      "descriptor": "Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "The entity the player is currently spectating through."
      ]
    },
    {
      "name": "lastRecordedHealthAndAbsorption",
      "descriptor": "F",
      "javadoc": [
        "the total health of the player, includes actual health and absorption health. Updated every tick."
      ]
    },
    {
      "name": "lastSectionPos",
      "descriptor": "Lnet/minecraft/core/SectionPos;",
      "javadoc": [
        "Player section position as last updated by TicketManager, used by ChunkManager"
      ]
    }
  ],
  "methods": [
    {
      "name": "addAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "attack",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "javadoc": [
        "Attacks for the player the targeted entity with the currently equipped item.  The equipped item has hitEntity called on it. Args: targetEntity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "targetEntity"
        }
      ]
    },
    {
      "name": "awardKillScore",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V",
      "parameters": [
        {
          "index": 1,
          "name": "killed"
        },
        {
          "index": 2,
          "name": "scoreValue"
        },
        {
          "index": 3,
          "name": "damageSource"
        }
      ]
    },
    {
      "name": "awardStat",
      "descriptor": "(Lnet/minecraft/stats/Stat;I)V",
      "javadoc": [
        "Adds a value to a statistic field."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stat"
        },
        {
          "index": 2,
          "name": "amount"
        }
      ]
    },
    {
      "name": "broadcastToPlayer",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "canHarmPlayer",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "other"
        }
      ]
    },
    {
      "name": "changeDimension",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity;",
      "parameters": [
        {
          "index": 1,
          "name": "server"
        }
      ]
    },
    {
      "name": "checkFallDamage",
      "descriptor": "(DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "y"
        },
        {
          "index": 3,
          "name": "onGround"
        },
        {
          "index": 4,
          "name": "state"
        },
        {
          "index": 5,
          "name": "pos"
        }
      ]
    },
    {
      "name": "closeContainer",
      "descriptor": "()V",
      "javadoc": [
        "set current crafting inventory back to the 2x2 square"
      ]
    },
    {
      "name": "completeUsingItem",
      "descriptor": "()V",
      "javadoc": [
        "Used for when item use count runs out, ie: eating completed"
      ]
    },
    {
      "name": "crit",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "javadoc": [
        "Called when the entity is dealt a critical hit."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entityHit"
        }
      ]
    },
    {
      "name": "die",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;)V",
      "javadoc": [
        "Called when the mob's health reaches 0."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "cause"
        }
      ]
    },
    {
      "name": "displayClientMessage",
      "descriptor": "(Lnet/minecraft/network/chat/Component;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "chatComponent"
        },
        {
          "index": 2,
          "name": "actionBar"
        }
      ]
    },
    {
      "name": "doCheckFallDamage",
      "descriptor": "(DZ)V",
      "javadoc": [
        "process player falling based on movement packet"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "y"
        },
        {
          "index": 3,
          "name": "onGround"
        }
      ]
    },
    {
      "name": "doCloseContainer",
      "descriptor": "()V",
      "javadoc": [
        "Closes the container the player currently has open."
      ]
    },
    {
      "name": "drop",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity;",
      "javadoc": [
        "Creates and drops the provided item. Depending on the dropAround, it will drop teh item around the player, instead of dropping the item from where the player is pointing at. Likewise, if traceItem is true, the dropped item entity will have the thrower set as the player."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "droppedItem"
        },
        {
          "index": 2,
          "name": "dropAround"
        },
        {
          "index": 3,
          "name": "traceItem"
        }
      ]
    },
    {
      "name": "getIpAddress",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Gets the player's IP address. Used in /banip."
      ]
    },
    {
      "name": "getTabListDisplayName",
      "descriptor": "()Lnet/minecraft/network/chat/Component;",
      "javadoc": [
        "Returns null which indicates the tab list should just display the player's name, return a different value to display the specified text instead of the player's name"
      ]
    },
    {
      "name": "giveExperienceLevels",
      "descriptor": "(I)V",
      "javadoc": [
        "Add experience levels to this player."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "levels"
        }
      ]
    },
    {
      "name": "hurt",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "source"
        },
        {
          "index": 2,
          "name": "amount"
        }
      ]
    },
    {
      "name": "isInvulnerableTo",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;)Z",
      "javadoc": [
        "Returns whether this Entity is invulnerable to the given DamageSource."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "source"
        }
      ]
    },
    {
      "name": "isPvpAllowed",
      "descriptor": "()Z",
      "javadoc": [
        "Returns if other players can attack this player"
      ]
    },
    {
      "name": "isSpectator",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the player is in spectator mode."
      ]
    },
    {
      "name": "lookAt",
      "descriptor": "(Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V",
      "parameters": [
        {
          "index": 1,
          "name": "anchor"
        },
        {
          "index": 2,
          "name": "target"
        }
      ]
    },
    {
      "name": "magicCrit",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entityHit"
        }
      ]
    },
    {
      "name": "moveTo",
      "descriptor": "(DDD)V",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        }
      ]
    },
    {
      "name": "nextContainerCounter",
      "descriptor": "()V",
      "javadoc": [
        "get the next window id to use"
      ]
    },
    {
      "name": "onChangedBlock",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "onEffectRemoved",
      "descriptor": "(Lnet/minecraft/world/effect/MobEffectInstance;)V",
      "parameters": [
        {
          "index": 1,
          "name": "effect"
        }
      ]
    },
    {
      "name": "onEnchantmentPerformed",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "enchantedItem"
        },
        {
          "index": 2,
          "name": "cost"
        }
      ]
    },
    {
      "name": "onEnterCombat",
      "descriptor": "()V",
      "javadoc": [
        "Sends an ENTER_COMBAT packet to the client"
      ]
    },
    {
      "name": "onInsideBlock",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)V",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "onLeaveCombat",
      "descriptor": "()V",
      "javadoc": [
        "Sends an END_COMBAT packet to the client"
      ]
    },
    {
      "name": "onUpdateAbilities",
      "descriptor": "()V",
      "javadoc": [
        "Sends the player's abilities to the server (if there is one)."
      ]
    },
    {
      "name": "openCommandBlock",
      "descriptor": "(Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "commandBlock"
        }
      ]
    },
    {
      "name": "openHorseInventory",
      "descriptor": "(Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V",
      "parameters": [
        {
          "index": 1,
          "name": "horse"
        },
        {
          "index": 2,
          "name": "inventory"
        }
      ]
    },
    {
      "name": "openItemGui",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        },
        {
          "index": 2,
          "name": "hand"
        }
      ]
    },
    {
      "name": "openTextEdit",
      "descriptor": "(Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "signTile"
        }
      ]
    },
    {
      "name": "processPortalCooldown",
      "descriptor": "()V",
      "javadoc": [
        "Decrements the counter for the remaining time until the entity may use a portal again."
      ]
    },
    {
      "name": "readAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "resetSentInfo",
      "descriptor": "()V",
      "javadoc": [
        "this function is called when a players inventory is sent to him, lastHealth is updated on any dimension transitions, then reset."
      ]
    },
    {
      "name": "resetStat",
      "descriptor": "(Lnet/minecraft/stats/Stat;)V",
      "parameters": [
        {
          "index": 1,
          "name": "stat"
        }
      ]
    },
    {
      "name": "restoreFrom",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "that"
        },
        {
          "index": 2,
          "name": "keepEverything"
        }
      ]
    },
    {
      "name": "sendMerchantOffers",
      "descriptor": "(ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "containerId"
        },
        {
          "index": 2,
          "name": "offers"
        },
        {
          "index": 3,
          "name": "level"
        },
        {
          "index": 4,
          "name": "xp"
        }
      ]
    },
    {
      "name": "sendMessage",
      "descriptor": "(Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V",
      "javadoc": [
        "Send a chat message to the CommandSender"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "component"
        },
        {
          "index": 2,
          "name": "senderUUID"
        }
      ]
    },
    {
      "name": "setCamera",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entityToSpectate"
        }
      ]
    },
    {
      "name": "setExperienceLevels",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        }
      ]
    },
    {
      "name": "setLastSectionPos",
      "descriptor": "(Lnet/minecraft/core/SectionPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "sectionPos"
        }
      ]
    },
    {
      "name": "setPlayerInput",
      "descriptor": "(FFZZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "strafe"
        },
        {
          "index": 2,
          "name": "forward"
        },
        {
          "index": 3,
          "name": "jumping"
        },
        {
          "index": 4,
          "name": "sneaking"
        }
      ]
    },
    {
      "name": "startRiding",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "force"
        }
      ]
    },
    {
      "name": "startSleepInBed",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either;",
      "parameters": [
        {
          "index": 1,
          "name": "at"
        }
      ]
    },
    {
      "name": "startSleeping",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "stopRiding",
      "descriptor": "()V",
      "javadoc": [
        "Dismounts this entity from the entity it is riding."
      ]
    },
    {
      "name": "swing",
      "descriptor": "(Lnet/minecraft/world/InteractionHand;)V",
      "parameters": [
        {
          "index": 1,
          "name": "hand"
        }
      ]
    },
    {
      "name": "take",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;I)V",
      "javadoc": [
        "Called when the entity picks up an item."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "quantity"
        }
      ]
    },
    {
      "name": "teleportTo",
      "descriptor": "(DDD)V",
      "javadoc": [
        "Sets the position of the entity and updates the 'last' variables"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        }
      ]
    },
    {
      "name": "teleportTo",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;DDDFF)V",
      "parameters": [
        {
          "index": 1,
          "name": "newLevel"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 4,
          "name": "y"
        },
        {
          "index": 6,
          "name": "z"
        },
        {
          "index": 8,
          "name": "yaw"
        },
        {
          "index": 9,
          "name": "pitch"
        }
      ]
    },
    {
      "name": "tick",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "updateInvisibilityStatus",
      "descriptor": "()V",
      "javadoc": [
        "Clears potion metadata values if the entity has no potion effects. Otherwise, updates potion effect color, ambience, and invisibility metadata values"
      ]
    },
    {
      "name": "updateOptions",
      "descriptor": "(Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V",
      "parameters": [
        {
          "index": 1,
          "name": "packet"
        }
      ]
    },
    {
      "name": "updateScoreForCriteria",
      "descriptor": "(Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "criteria"
        },
        {
          "index": 2,
          "name": "points"
        }
      ]
    }
  ]
}