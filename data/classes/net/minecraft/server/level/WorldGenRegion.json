{
  "name": "net/minecraft/server/level/WorldGenRegion",
  "methods": [
    {
      "name": "addFreshEntity",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "addParticle",
      "descriptor": "(Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V",
      "parameters": [
        {
          "index": 1,
          "name": "particleData"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 4,
          "name": "y"
        },
        {
          "index": 6,
          "name": "z"
        },
        {
          "index": 8,
          "name": "xSpeed"
        },
        {
          "index": 10,
          "name": "ySpeed"
        },
        {
          "index": 12,
          "name": "zSpeed"
        }
      ]
    },
    {
      "name": "destroyBlock",
      "descriptor": "(Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "dropBlock"
        },
        {
          "index": 3,
          "name": "entity"
        },
        {
          "index": 4,
          "name": "recursionLeft"
        }
      ]
    },
    {
      "name": "getBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockState",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getChunk",
      "descriptor": "(II)Lnet/minecraft/world/level/chunk/ChunkAccess;",
      "parameters": [
        {
          "index": 1,
          "name": "chunkX"
        },
        {
          "index": 2,
          "name": "chunkZ"
        }
      ]
    },
    {
      "name": "getChunk",
      "descriptor": "(IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess;",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 2,
          "name": "z"
        },
        {
          "index": 3,
          "name": "requiredStatus"
        },
        {
          "index": 4,
          "name": "nonnull"
        }
      ]
    },
    {
      "name": "getChunkSource",
      "descriptor": "()Lnet/minecraft/world/level/chunk/ChunkSource;",
      "javadoc": [
        "Gets the world's chunk provider"
      ]
    },
    {
      "name": "getCurrentDifficultyAt",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getEntities",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List;",
      "javadoc": [
        "Gets all entities within the specified AABB excluding the one passed into it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "boundingBox"
        },
        {
          "index": 3,
          "name": "predicate"
        }
      ]
    },
    {
      "name": "getFluidState",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getHeight",
      "descriptor": "(Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I",
      "parameters": [
        {
          "index": 1,
          "name": "heightmapType"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "z"
        }
      ]
    },
    {
      "name": "getLevelData",
      "descriptor": "()Lnet/minecraft/world/level/storage/LevelData;",
      "javadoc": [
        "Returns the world's WorldInfo object"
      ]
    },
    {
      "name": "getNearestPlayer",
      "descriptor": "(DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player;",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "distance"
        },
        {
          "index": 9,
          "name": "predicate"
        }
      ]
    },
    {
      "name": "getSeed",
      "descriptor": "()J",
      "javadoc": [
        "gets the random world seed"
      ]
    },
    {
      "name": "getUncachedNoiseBiome",
      "descriptor": "(III)Lnet/minecraft/world/level/biome/Biome;",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 2,
          "name": "y"
        },
        {
          "index": 3,
          "name": "z"
        }
      ]
    },
    {
      "name": "hasChunk",
      "descriptor": "(II)Z",
      "parameters": [
        {
          "index": 1,
          "name": "chunkX"
        },
        {
          "index": 2,
          "name": "chunkZ"
        }
      ]
    },
    {
      "name": "isStateAtPosition",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "state"
        }
      ]
    },
    {
      "name": "levelEvent",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "type"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "data"
        }
      ]
    },
    {
      "name": "markPosForPostprocessing",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "playSound",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V",
      "javadoc": [
        "Plays a sound. On the server, the sound is broadcast to all nearby <em>except</em> the given player. On the client, the sound only plays if the given player is the client player. Thus, this method is intended to be called from code running on both sides. The client plays it locally and the server plays it for everyone else."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "sound"
        },
        {
          "index": 4,
          "name": "category"
        },
        {
          "index": 5,
          "name": "volume"
        },
        {
          "index": 6,
          "name": "pitch"
        }
      ]
    },
    {
      "name": "removeBlock",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "isMoving"
        }
      ]
    },
    {
      "name": "setBlock",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "state"
        },
        {
          "index": 3,
          "name": "flags"
        },
        {
          "index": 4,
          "name": "recursionLeft"
        }
      ]
    }
  ]
}