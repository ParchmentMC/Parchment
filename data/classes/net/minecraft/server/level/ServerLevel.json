{
  "name": "net/minecraft/server/level/ServerLevel",
  "methods": [
    {
      "name": "addDuringCommandTeleport",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "addDuringPortalTeleport",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "addEntity",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "javadoc": [
        "Called when an entity is spawned in the world. This includes players."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "addFreshEntity",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "addNewPlayer",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "addPlayer",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "addRespawnedPlayer",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "addWithUUID",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "javadoc": [
        "Used for \"unnatural\" ways of entities appearing in the world, e.g. summon command, interdimensional teleports"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "blockEvent",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        },
        {
          "index": 3,
          "name": "eventID"
        },
        {
          "index": 4,
          "name": "eventParam"
        }
      ]
    },
    {
      "name": "blockUpdated",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        }
      ]
    },
    {
      "name": "broadcastEntityEvent",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;B)V",
      "javadoc": [
        "sends a Packet 38 (Entity Status) to all tracked players of that entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "state"
        }
      ]
    },
    {
      "name": "clearBlockEvents",
      "descriptor": "(Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V",
      "parameters": [
        {
          "index": 1,
          "name": "boundingBox"
        }
      ]
    },
    {
      "name": "destroyBlockProgress",
      "descriptor": "(ILnet/minecraft/core/BlockPos;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "breakerId"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "progress"
        }
      ]
    },
    {
      "name": "doBlockEvent",
      "descriptor": "(Lnet/minecraft/world/level/BlockEventData;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "event"
        }
      ]
    },
    {
      "name": "dumpEntities",
      "descriptor": "(Ljava/io/Writer;Ljava/lang/Iterable;)V",
      "parameters": [
        {
          "index": 0,
          "name": "writer"
        },
        {
          "index": 1,
          "name": "entities"
        }
      ]
    },
    {
      "name": "explode",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion;",
      "parameters": [
        {
          "index": 1,
          "name": "exploder"
        },
        {
          "index": 2,
          "name": "damageSource"
        },
        {
          "index": 3,
          "name": "context"
        },
        {
          "index": 4,
          "name": "x"
        },
        {
          "index": 6,
          "name": "y"
        },
        {
          "index": 8,
          "name": "z"
        },
        {
          "index": 10,
          "name": "size"
        },
        {
          "index": 11,
          "name": "causesFire"
        },
        {
          "index": 12,
          "name": "mode"
        }
      ]
    },
    {
      "name": "findNearestBiome",
      "descriptor": "(Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/core/BlockPos;",
      "parameters": [
        {
          "index": 1,
          "name": "biome"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "radius"
        },
        {
          "index": 4,
          "name": "increment"
        }
      ]
    },
    {
      "name": "findNearestMapFeature",
      "descriptor": "(Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos;",
      "parameters": [
        {
          "index": 1,
          "name": "structure"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "radius"
        },
        {
          "index": 4,
          "name": "skipExistingChunks"
        }
      ]
    },
    {
      "name": "getAllEntities",
      "descriptor": "()Ljava/lang/Iterable;",
      "javadoc": [
        "Gets an unmodifiable iterator of all loaded entities in the world."
      ]
    },
    {
      "name": "getChunkSource",
      "descriptor": "()Lnet/minecraft/server/level/ServerChunkCache;",
      "javadoc": [
        "Gets the world's chunk provider"
      ]
    },
    {
      "name": "getEntity",
      "descriptor": "(I)Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "Returns the Entity with the given ID, or null if it doesn't exist in this World."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "id"
        }
      ]
    },
    {
      "name": "getEntity",
      "descriptor": "(Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity;",
      "parameters": [
        {
          "index": 1,
          "name": "uniqueId"
        }
      ]
    },
    {
      "name": "getMapData",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;",
      "parameters": [
        {
          "index": 1,
          "name": "mapName"
        }
      ]
    },
    {
      "name": "getPlayers",
      "descriptor": "(Ljava/util/function/Predicate;)Ljava/util/List;",
      "parameters": [
        {
          "index": 1,
          "name": "predicate"
        }
      ]
    },
    {
      "name": "getRaidAt",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getSeed",
      "descriptor": "()J",
      "javadoc": [
        "gets the random world seed"
      ]
    },
    {
      "name": "getUncachedNoiseBiome",
      "descriptor": "(III)Lnet/minecraft/world/level/biome/Biome;",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 2,
          "name": "y"
        },
        {
          "index": 3,
          "name": "z"
        }
      ]
    },
    {
      "name": "globalLevelEvent",
      "descriptor": "(ILnet/minecraft/core/BlockPos;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "id"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "data"
        }
      ]
    },
    {
      "name": "isCloseToVillage",
      "descriptor": "(Lnet/minecraft/core/BlockPos;I)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "sections"
        }
      ]
    },
    {
      "name": "isRaided",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "isVillage",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "isVillage",
      "descriptor": "(Lnet/minecraft/core/SectionPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "levelEvent",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "type"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "data"
        }
      ]
    },
    {
      "name": "makeObsidianPlatform",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;)V",
      "parameters": [
        {
          "index": 0,
          "name": "serverLevel"
        }
      ]
    },
    {
      "name": "mayInteract",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "onBlockStateChange",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "blockState"
        },
        {
          "index": 3,
          "name": "newState"
        }
      ]
    },
    {
      "name": "onReputationEvent",
      "descriptor": "(Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V",
      "parameters": [
        {
          "index": 1,
          "name": "type"
        },
        {
          "index": 2,
          "name": "target"
        },
        {
          "index": 3,
          "name": "host"
        }
      ]
    },
    {
      "name": "playSound",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 4,
          "name": "y"
        },
        {
          "index": 6,
          "name": "z"
        },
        {
          "index": 8,
          "name": "sound"
        },
        {
          "index": 9,
          "name": "category"
        },
        {
          "index": 10,
          "name": "volume"
        },
        {
          "index": 11,
          "name": "pitch"
        }
      ]
    },
    {
      "name": "playSound",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "entity"
        },
        {
          "index": 3,
          "name": "event"
        },
        {
          "index": 4,
          "name": "category"
        },
        {
          "index": 5,
          "name": "volume"
        },
        {
          "index": 6,
          "name": "pitch"
        }
      ]
    },
    {
      "name": "resetEmptyTime",
      "descriptor": "()V",
      "javadoc": [
        "Resets the updateEntityTick field to 0"
      ]
    },
    {
      "name": "save",
      "descriptor": "(Lnet/minecraft/util/ProgressListener;ZZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "progress"
        },
        {
          "index": 2,
          "name": "flush"
        },
        {
          "index": 3,
          "name": "skipSave"
        }
      ]
    },
    {
      "name": "saveDebugReport",
      "descriptor": "(Ljava/nio/file/Path;)V",
      "parameters": [
        {
          "index": 1,
          "name": "path"
        }
      ]
    },
    {
      "name": "saveLevelData",
      "descriptor": "()V",
      "javadoc": [
        "Saves the chunks to disk."
      ]
    },
    {
      "name": "sectionsToVillage",
      "descriptor": "(Lnet/minecraft/core/SectionPos;)I",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "sendBlockUpdated",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V",
      "javadoc": [
        "Flags are as in setBlockState"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "oldState"
        },
        {
          "index": 3,
          "name": "newState"
        },
        {
          "index": 4,
          "name": "flags"
        }
      ]
    },
    {
      "name": "sendParticles",
      "descriptor": "(Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I",
      "parameters": [
        {
          "index": 1,
          "name": "type"
        },
        {
          "index": 2,
          "name": "posX"
        },
        {
          "index": 4,
          "name": "posY"
        },
        {
          "index": 6,
          "name": "posZ"
        },
        {
          "index": 8,
          "name": "particleCount"
        },
        {
          "index": 9,
          "name": "xOffset"
        },
        {
          "index": 11,
          "name": "yOffset"
        },
        {
          "index": 13,
          "name": "zOffset"
        },
        {
          "index": 15,
          "name": "speed"
        }
      ]
    },
    {
      "name": "sendParticles",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "type"
        },
        {
          "index": 3,
          "name": "longDistance"
        },
        {
          "index": 4,
          "name": "posX"
        },
        {
          "index": 6,
          "name": "posY"
        },
        {
          "index": 8,
          "name": "posZ"
        },
        {
          "index": 10,
          "name": "particleCount"
        },
        {
          "index": 11,
          "name": "xOffset"
        },
        {
          "index": 13,
          "name": "yOffset"
        },
        {
          "index": 15,
          "name": "zOffset"
        },
        {
          "index": 17,
          "name": "speed"
        }
      ]
    },
    {
      "name": "sendParticles",
      "descriptor": "(Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "longDistance"
        },
        {
          "index": 3,
          "name": "posX"
        },
        {
          "index": 5,
          "name": "posY"
        },
        {
          "index": 7,
          "name": "posZ"
        },
        {
          "index": 9,
          "name": "packet"
        }
      ]
    },
    {
      "name": "setChunkForced",
      "descriptor": "(IIZ)Z",
      "parameters": [
        {
          "index": 1,
          "name": "chunkX"
        },
        {
          "index": 2,
          "name": "chunkZ"
        },
        {
          "index": 3,
          "name": "add"
        }
      ]
    },
    {
      "name": "setDayTime",
      "descriptor": "(J)V",
      "parameters": [
        {
          "index": 1,
          "name": "time"
        }
      ]
    },
    {
      "name": "setDefaultSpawnPos",
      "descriptor": "(Lnet/minecraft/core/BlockPos;F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "angle"
        }
      ]
    },
    {
      "name": "setWeatherParameters",
      "descriptor": "(IIZZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "clearTime"
        },
        {
          "index": 2,
          "name": "weatherTime"
        },
        {
          "index": 3,
          "name": "isRaining"
        },
        {
          "index": 4,
          "name": "isThundering"
        }
      ]
    },
    {
      "name": "stopWeather",
      "descriptor": "()V",
      "javadoc": [
        "Clears the current rain and thunder weather states."
      ]
    },
    {
      "name": "tick",
      "descriptor": "(Ljava/util/function/BooleanSupplier;)V",
      "javadoc": [
        "Runs a single tick for the world"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "hasTimeLeft"
        }
      ]
    },
    {
      "name": "tickBlock",
      "descriptor": "(Lnet/minecraft/world/level/TickNextTickData;)V",
      "parameters": [
        {
          "index": 1,
          "name": "blockTickEntry"
        }
      ]
    },
    {
      "name": "tickChunk",
      "descriptor": "(Lnet/minecraft/world/level/chunk/LevelChunk;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "chunk"
        },
        {
          "index": 2,
          "name": "randomTickSpeed"
        }
      ]
    },
    {
      "name": "tickCustomSpawners",
      "descriptor": "(ZZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "spawnHostiles"
        },
        {
          "index": 2,
          "name": "spawnPassives"
        }
      ]
    },
    {
      "name": "tickLiquid",
      "descriptor": "(Lnet/minecraft/world/level/TickNextTickData;)V",
      "parameters": [
        {
          "index": 1,
          "name": "fluidTickEntry"
        }
      ]
    },
    {
      "name": "tickNonPassenger",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "tickPassenger",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "ridingEntity"
        },
        {
          "index": 2,
          "name": "passengerEntity"
        }
      ]
    },
    {
      "name": "tryAddFreshEntityWithPassengers",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "javadoc": [
        "Attempts to summon an entity and it's passangers. They will only be summoned if all entities are unique and not already in queue to be summoned."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "unload",
      "descriptor": "(Lnet/minecraft/world/level/chunk/LevelChunk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "chunk"
        }
      ]
    },
    {
      "name": "updateSleepingPlayerList",
      "descriptor": "()V",
      "javadoc": [
        "Updates the flag that indicates whether or not all players in the world are sleeping."
      ]
    }
  ]
}