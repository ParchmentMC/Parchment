{
  "name": "net/minecraft/world/item/ItemStack",
  "fields": [
    {
      "name": "entityRepresentation",
      "descriptor": "Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "The entity the item is attached to, like an Item Frame."
      ]
    }
  ],
  "methods": [
    {
      "name": "addAttributeModifier",
      "descriptor": "(Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "attributeName"
        },
        {
          "index": 2,
          "name": "modifier"
        },
        {
          "index": 3,
          "name": "equipmentSlot"
        }
      ]
    },
    {
      "name": "addTagElement",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "key"
        },
        {
          "index": 2,
          "name": "value"
        }
      ]
    },
    {
      "name": "copy",
      "descriptor": "()Lnet/minecraft/world/item/ItemStack;",
      "javadoc": [
        "Returns a new stack with the same properties."
      ]
    },
    {
      "name": "enchant",
      "descriptor": "(Lnet/minecraft/world/item/enchantment/Enchantment;I)V",
      "javadoc": [
        "Adds an enchantment with a desired level on the ItemStack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "ench"
        },
        {
          "index": 2,
          "name": "level"
        }
      ]
    },
    {
      "name": "expandBlockState",
      "descriptor": "(Ljava/lang/String;)Ljava/util/Collection;",
      "parameters": [
        {
          "index": 0,
          "name": "stateString"
        }
      ]
    },
    {
      "name": "finishUsingItem",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack;",
      "javadoc": [
        "Called when the item in use count reach 0, e.g. item food eaten. Return the new ItemStack. Args : world, entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "entityLiving"
        }
      ]
    },
    {
      "name": "getAttributeModifiers",
      "descriptor": "(Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap;",
      "javadoc": [
        "Gets the attribute modifiers for this ItemStack.",
        "Will check for an NBT tag list containing modifiers for the stack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "equipmentSlot"
        }
      ]
    },
    {
      "name": "getBaseRepairCost",
      "descriptor": "()I",
      "javadoc": [
        "Get this stack's repair cost, or 0 if no repair cost is defined."
      ]
    },
    {
      "name": "getDestroySpeed",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)F",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        }
      ]
    },
    {
      "name": "getDisplayName",
      "descriptor": "()Lnet/minecraft/network/chat/Component;",
      "javadoc": [
        "Get a ChatComponent for this Item's display name that shows this Item on hover"
      ]
    },
    {
      "name": "getEntityRepresentation",
      "descriptor": "()Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "For example it'll return a ItemFrameEntity if it is in an itemframe"
      ]
    },
    {
      "name": "getFrame",
      "descriptor": "()Lnet/minecraft/world/entity/decoration/ItemFrame;",
      "javadoc": [
        "Return the item frame this stack is on. Returns null if not on an item frame."
      ]
    },
    {
      "name": "getItem",
      "descriptor": "()Lnet/minecraft/world/item/Item;",
      "javadoc": [
        "Returns the object corresponding to the stack."
      ]
    },
    {
      "name": "getMaxDamage",
      "descriptor": "()I",
      "javadoc": [
        "Returns the max damage an item in the stack can take."
      ]
    },
    {
      "name": "getMaxStackSize",
      "descriptor": "()I",
      "javadoc": [
        "Returns maximum size of the stack."
      ]
    },
    {
      "name": "getOrCreateTagElement",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag;",
      "parameters": [
        {
          "index": 1,
          "name": "key"
        }
      ]
    },
    {
      "name": "getTagElement",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "Get an NBTTagCompound from this stack's NBT data."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "key"
        }
      ]
    },
    {
      "name": "getTooltipLines",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List;",
      "javadoc": [
        "Return a list of strings containing information about the item"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "advanced"
        }
      ]
    },
    {
      "name": "grow",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "count"
        }
      ]
    },
    {
      "name": "hasCustomHoverName",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the itemstack has a display name"
      ]
    },
    {
      "name": "hasTag",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the ItemStack has an NBTTagCompound. Currently used to store enchantments."
      ]
    },
    {
      "name": "hurt",
      "descriptor": "(ILjava/util/Random;Lnet/minecraft/server/level/ServerPlayer;)Z",
      "javadoc": [
        "Attempts to damage the ItemStack with par1 amount of damage, If the ItemStack has the Unbreaking enchantment there is a chance for each point of damage to be negated. Returns true if it takes more damage than getMaxDamage(). Returns false otherwise or if the ItemStack can't be damaged or if all points of damage are negated."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "amount"
        },
        {
          "index": 2,
          "name": "rand"
        },
        {
          "index": 3,
          "name": "damager"
        }
      ]
    },
    {
      "name": "hurtAndBreak",
      "descriptor": "(ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "amount"
        },
        {
          "index": 2,
          "name": "entity"
        },
        {
          "index": 3,
          "name": "onBroken"
        }
      ]
    },
    {
      "name": "hurtEnemy",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V",
      "javadoc": [
        "Calls the delegated method to the Item to damage the incoming Entity, and if necessary, triggers a stats increase."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "player"
        }
      ]
    },
    {
      "name": "interactLivingEntity",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult;",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "entity"
        },
        {
          "index": 3,
          "name": "hand"
        }
      ]
    },
    {
      "name": "inventoryTick",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V",
      "javadoc": [
        "Called each tick as long the ItemStack in on player inventory. Used to progress the pickup animation and update maps."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "entity"
        },
        {
          "index": 3,
          "name": "inventorySlot"
        },
        {
          "index": 4,
          "name": "isCurrentItem"
        }
      ]
    },
    {
      "name": "isCorrectToolForDrops",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "javadoc": [
        "Check whether the given Block can be harvested using this ItemStack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "block"
        }
      ]
    },
    {
      "name": "isDamageableItem",
      "descriptor": "()Z",
      "javadoc": [
        "true if this itemStack is damageable"
      ]
    },
    {
      "name": "isDamaged",
      "descriptor": "()Z",
      "javadoc": [
        "returns true when a damageable item is damaged"
      ]
    },
    {
      "name": "isEnchantable",
      "descriptor": "()Z",
      "javadoc": [
        "True if it is a tool and has no enchantments to begin with"
      ]
    },
    {
      "name": "isEnchanted",
      "descriptor": "()Z",
      "javadoc": [
        "True if the item has enchantment data"
      ]
    },
    {
      "name": "isFramed",
      "descriptor": "()Z",
      "javadoc": [
        "Return whether this stack is on an item frame."
      ]
    },
    {
      "name": "isSame",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z",
      "javadoc": [
        "Compares Item and damage value of the two stacks"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "stackA"
        },
        {
          "index": 1,
          "name": "stackB"
        }
      ]
    },
    {
      "name": "isSameIgnoreDurability",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "stackA"
        },
        {
          "index": 1,
          "name": "stackB"
        }
      ]
    },
    {
      "name": "isStackable",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the ItemStack can hold 2 or more units of the item."
      ]
    },
    {
      "name": "matches",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;)Z",
      "javadoc": [
        "compares ItemStack argument to the instance ItemStack returns true if both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "other"
        }
      ]
    },
    {
      "name": "matches",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z",
      "javadoc": [
        "compares ItemStack argument1 with ItemStack argument2 returns true if both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "stackA"
        },
        {
          "index": 1,
          "name": "stackB"
        }
      ]
    },
    {
      "name": "mineBlock",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V",
      "javadoc": [
        "Called when a Block is destroyed using this ItemStack"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "block"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "player"
        }
      ]
    },
    {
      "name": "of",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack;",
      "parameters": [
        {
          "index": 0,
          "name": "compound"
        }
      ]
    },
    {
      "name": "onCraftedBy",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "player"
        },
        {
          "index": 3,
          "name": "amount"
        }
      ]
    },
    {
      "name": "onUseTick",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V",
      "javadoc": [
        "Called as the stack is being used by an entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "livingEntity"
        },
        {
          "index": 3,
          "name": "count"
        }
      ]
    },
    {
      "name": "releaseUsing",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V",
      "javadoc": [
        "Called when the player releases the use item button."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "entityLiving"
        },
        {
          "index": 3,
          "name": "timeLeft"
        }
      ]
    },
    {
      "name": "resetHoverName",
      "descriptor": "()V",
      "javadoc": [
        "Clear any custom name set for this ItemStack"
      ]
    },
    {
      "name": "sameItem",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;)Z",
      "javadoc": [
        "compares ItemStack argument to the instance ItemStack returns true if the Items contained in both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "other"
        }
      ]
    },
    {
      "name": "sameItemStackIgnoreDurability",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "save",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "Write the stack fields to a NBT object. Return the new NBT object."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "nbt"
        }
      ]
    },
    {
      "name": "setCount",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "count"
        }
      ]
    },
    {
      "name": "setDamageValue",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "damage"
        }
      ]
    },
    {
      "name": "setEntityRepresentation",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "setHoverName",
      "descriptor": "(Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack;",
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "setPopTime",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "animations"
        }
      ]
    },
    {
      "name": "setRepairCost",
      "descriptor": "(I)V",
      "javadoc": [
        "Set this stack's repair cost."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "cost"
        }
      ]
    },
    {
      "name": "setTag",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "javadoc": [
        "Assigns a NBTTagCompound to the ItemStack, minecraft validates that only non-stackable items can have it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "nbt"
        }
      ]
    },
    {
      "name": "shrink",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "count"
        }
      ]
    },
    {
      "name": "split",
      "descriptor": "(I)Lnet/minecraft/world/item/ItemStack;",
      "javadoc": [
        "Splits off a stack of the given amount of this stack and reduces this stack by the amount."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "amount"
        }
      ]
    },
    {
      "name": "tagMatches",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "stackA"
        },
        {
          "index": 1,
          "name": "stackB"
        }
      ]
    },
    {
      "name": "use",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder;",
      "javadoc": [
        "Called whenr the item stack is equipped and right clicked. Replaces the item stack with the return value."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "player"
        },
        {
          "index": 3,
          "name": "hand"
        }
      ]
    },
    {
      "name": "useOn",
      "descriptor": "(Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult;",
      "parameters": [
        {
          "index": 1,
          "name": "context"
        }
      ]
    }
  ]
}