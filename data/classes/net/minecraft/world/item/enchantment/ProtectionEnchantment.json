{
  "name": "net/minecraft/world/item/enchantment/ProtectionEnchantment",
  "methods": [
    {
      "name": "checkCompatibility",
      "descriptor": "(Lnet/minecraft/world/item/enchantment/Enchantment;)Z",
      "javadoc": [
        "Determines if the enchantment passed can be applyied together with this enchantment."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "ench"
        }
      ]
    },
    {
      "name": "getDamageProtection",
      "descriptor": "(ILnet/minecraft/world/damagesource/DamageSource;)I",
      "javadoc": [
        "Calculates the damage protection of the enchantment based on level and damage source passed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "source"
        }
      ]
    },
    {
      "name": "getExplosionKnockbackAfterDampener",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;D)D",
      "parameters": [
        {
          "index": 0,
          "name": "livingEntity"
        },
        {
          "index": 1,
          "name": "damage"
        }
      ]
    },
    {
      "name": "getFireAfterDampener",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;I)I",
      "javadoc": [
        "Gets the amount of ticks an entity should be set fire, adjusted for fire protection."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "livingEntity"
        },
        {
          "index": 1,
          "name": "level"
        }
      ]
    },
    {
      "name": "getMaxCost",
      "descriptor": "(I)I",
      "parameters": [
        {
          "index": 1,
          "name": "enchantmentLevel"
        }
      ]
    },
    {
      "name": "getMaxLevel",
      "descriptor": "()I",
      "javadoc": [
        "Returns the maximum level that the enchantment can have."
      ]
    },
    {
      "name": "getMinCost",
      "descriptor": "(I)I",
      "javadoc": [
        "Returns the minimal value of enchantability needed on the enchantment level passed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "enchantmentLevel"
        }
      ]
    }
  ]
}