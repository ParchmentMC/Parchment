{
  "name": "net/minecraft/world/scores/Scoreboard",
  "methods": [
    {
      "name": "addPlayerTeam",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam;",
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "entityRemoved",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "getDisplayObjective",
      "descriptor": "(I)Lnet/minecraft/world/scores/Objective;",
      "javadoc": [
        "0 is tab menu, 1 is sidebar, 2 is below name"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "slot"
        }
      ]
    },
    {
      "name": "getDisplaySlotByName",
      "descriptor": "(Ljava/lang/String;)I",
      "javadoc": [
        "Returns 0 for (case-insensitive) 'list', 1 for 'sidebar', 2 for 'belowName', otherwise -1."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "name"
        }
      ]
    },
    {
      "name": "getDisplaySlotName",
      "descriptor": "(I)Ljava/lang/String;",
      "javadoc": [
        "Returns 'list' for 0, 'sidebar' for 1, 'belowName for 2, otherwise null."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "id"
        }
      ]
    },
    {
      "name": "getObjective",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/world/scores/Objective;",
      "javadoc": [
        "Returns a ScoreObjective for the objective name"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "getOrCreatePlayerScore",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score;",
      "javadoc": [
        "Get a player's score or create it if it does not exist"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "username"
        },
        {
          "index": 2,
          "name": "objective"
        }
      ]
    },
    {
      "name": "getPlayerScores",
      "descriptor": "(Ljava/lang/String;)Ljava/util/Map;",
      "javadoc": [
        "Returns all the objectives for the given entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "getPlayerScores",
      "descriptor": "(Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection;",
      "javadoc": [
        "Returns an array of Score objects, sorting by Score.getScorePoints()"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "objective"
        }
      ]
    },
    {
      "name": "getPlayerTeam",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam;",
      "javadoc": [
        "Retrieve the ScorePlayerTeam instance identified by the passed team name"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "teamName"
        }
      ]
    },
    {
      "name": "getPlayerTeams",
      "descriptor": "()Ljava/util/Collection;",
      "javadoc": [
        "Retrieve all registered ScorePlayerTeam instances"
      ]
    },
    {
      "name": "getPlayersTeam",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam;",
      "javadoc": [
        "Gets the ScorePlayerTeam object for the given username."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "username"
        }
      ]
    },
    {
      "name": "getTeamNames",
      "descriptor": "()Ljava/util/Collection;",
      "javadoc": [
        "Retrieve all registered ScorePlayerTeam names"
      ]
    },
    {
      "name": "hasPlayerScore",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z",
      "javadoc": [
        "Returns if the entity has the given ScoreObjective"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "name"
        },
        {
          "index": 2,
          "name": "objective"
        }
      ]
    },
    {
      "name": "onObjectiveAdded",
      "descriptor": "(Lnet/minecraft/world/scores/Objective;)V",
      "parameters": [
        {
          "index": 1,
          "name": "objective"
        }
      ]
    },
    {
      "name": "onObjectiveChanged",
      "descriptor": "(Lnet/minecraft/world/scores/Objective;)V",
      "parameters": [
        {
          "index": 1,
          "name": "objective"
        }
      ]
    },
    {
      "name": "onObjectiveRemoved",
      "descriptor": "(Lnet/minecraft/world/scores/Objective;)V",
      "parameters": [
        {
          "index": 1,
          "name": "objective"
        }
      ]
    },
    {
      "name": "onPlayerRemoved",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "scoreName"
        }
      ]
    },
    {
      "name": "onPlayerScoreRemoved",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V",
      "parameters": [
        {
          "index": 1,
          "name": "scoreName"
        },
        {
          "index": 2,
          "name": "objective"
        }
      ]
    },
    {
      "name": "onScoreChanged",
      "descriptor": "(Lnet/minecraft/world/scores/Score;)V",
      "parameters": [
        {
          "index": 1,
          "name": "score"
        }
      ]
    },
    {
      "name": "onTeamAdded",
      "descriptor": "(Lnet/minecraft/world/scores/PlayerTeam;)V",
      "parameters": [
        {
          "index": 1,
          "name": "playerTeam"
        }
      ]
    },
    {
      "name": "onTeamChanged",
      "descriptor": "(Lnet/minecraft/world/scores/PlayerTeam;)V",
      "parameters": [
        {
          "index": 1,
          "name": "playerTeam"
        }
      ]
    },
    {
      "name": "onTeamRemoved",
      "descriptor": "(Lnet/minecraft/world/scores/PlayerTeam;)V",
      "parameters": [
        {
          "index": 1,
          "name": "playerTeam"
        }
      ]
    },
    {
      "name": "removeObjective",
      "descriptor": "(Lnet/minecraft/world/scores/Objective;)V",
      "parameters": [
        {
          "index": 1,
          "name": "objective"
        }
      ]
    },
    {
      "name": "removePlayerFromTeam",
      "descriptor": "(Ljava/lang/String;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "playerName"
        }
      ]
    },
    {
      "name": "removePlayerFromTeam",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V",
      "javadoc": [
        "Removes the given username from the given ScorePlayerTeam. If the player is not on the team then an IllegalStateException is thrown."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "username"
        },
        {
          "index": 2,
          "name": "playerTeam"
        }
      ]
    },
    {
      "name": "removePlayerTeam",
      "descriptor": "(Lnet/minecraft/world/scores/PlayerTeam;)V",
      "javadoc": [
        "Removes the team from the scoreboard, updates all player memberships and broadcasts the deletion to all players"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "playerTeam"
        }
      ]
    },
    {
      "name": "resetPlayerScore",
      "descriptor": "(Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V",
      "javadoc": [
        "Remove the given ScoreObjective for the given Entity name."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "name"
        },
        {
          "index": 2,
          "name": "objective"
        }
      ]
    },
    {
      "name": "setDisplayObjective",
      "descriptor": "(ILnet/minecraft/world/scores/Objective;)V",
      "javadoc": [
        "0 is tab menu, 1 is sidebar, 2 is below name"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "objectiveSlot"
        },
        {
          "index": 2,
          "name": "objective"
        }
      ]
    }
  ]
}