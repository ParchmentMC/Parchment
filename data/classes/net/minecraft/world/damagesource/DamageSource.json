{
  "name": "net/minecraft/world/damagesource/DamageSource",
  "fields": [
    {
      "name": "bypassMagic",
      "descriptor": "Z",
      "javadoc": [
        "Whether or not the damage ignores modification by potion effects or enchantments."
      ]
    }
  ],
  "methods": [
    {
      "name": "arrow",
      "descriptor": "(Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "returns EntityDamageSourceIndirect of an arrow"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "arrow"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "bypassMagic",
      "descriptor": "()Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Sets a value indicating whether the damage is absolute (ignores modification by potion effects or enchantments), and also clears out hunger damage."
      ]
    },
    {
      "name": "explosion",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "livingEntity"
        }
      ]
    },
    {
      "name": "explosion",
      "descriptor": "(Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "explosion"
        }
      ]
    },
    {
      "name": "fireball",
      "descriptor": "(Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "fireball"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "fireworks",
      "descriptor": "(Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "firework"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "getDirectEntity",
      "descriptor": "()Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "Retrieves the immediate causer of the damage, e.g. the arrow entity, not its shooter"
      ]
    },
    {
      "name": "getEntity",
      "descriptor": "()Lnet/minecraft/world/entity/Entity;",
      "javadoc": [
        "Retrieves the true causer of the damage, e.g. the player who fired an arrow, the shulker who fired the bullet, etc."
      ]
    },
    {
      "name": "getFoodExhaustion",
      "descriptor": "()F",
      "javadoc": [
        "How much satiate(food) is consumed by this DamageSource"
      ]
    },
    {
      "name": "getLocalizedDeathMessage",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component;",
      "javadoc": [
        "Gets the death message that is displayed when the player dies"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "livingEntity"
        }
      ]
    },
    {
      "name": "getMsgId",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Return the name of damage type."
      ]
    },
    {
      "name": "getSourcePosition",
      "descriptor": "()Lnet/minecraft/world/phys/Vec3;",
      "javadoc": [
        "Gets the location from which the damage originates."
      ]
    },
    {
      "name": "indirectMagic",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "source"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "indirectMobAttack",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "source"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "isBypassMagic",
      "descriptor": "()Z",
      "javadoc": [
        "Whether or not the damage ignores modification by potion effects or enchantments."
      ]
    },
    {
      "name": "isFire",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the damage is fire based."
      ]
    },
    {
      "name": "isMagic",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the damage is magic based."
      ]
    },
    {
      "name": "isProjectile",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the damage is projectile based."
      ]
    },
    {
      "name": "mobAttack",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "mob"
        }
      ]
    },
    {
      "name": "playerAttack",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "returns an EntityDamageSource of type player"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "player"
        }
      ]
    },
    {
      "name": "scalesWithDifficulty",
      "descriptor": "()Z",
      "javadoc": [
        "Return whether this damage source will have its damage amount scaled based on the current difficulty."
      ]
    },
    {
      "name": "setIsFire",
      "descriptor": "()Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Define the damage type as fire based."
      ]
    },
    {
      "name": "setMagic",
      "descriptor": "()Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Define the damage type as magic based."
      ]
    },
    {
      "name": "setProjectile",
      "descriptor": "()Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Define the damage type as projectile based."
      ]
    },
    {
      "name": "setScalesWithDifficulty",
      "descriptor": "()Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Set whether this damage source will have its damage amount scaled based on the current difficulty."
      ]
    },
    {
      "name": "sting",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "bee"
        }
      ]
    },
    {
      "name": "thorns",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "javadoc": [
        "Returns the EntityDamageSource of the Thorns enchantment"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "source"
        }
      ]
    },
    {
      "name": "thrown",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "source"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "trident",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "source"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    },
    {
      "name": "witherSkull",
      "descriptor": "(Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;",
      "parameters": [
        {
          "index": 0,
          "name": "witherSkull"
        },
        {
          "index": 1,
          "name": "indirectEntity"
        }
      ]
    }
  ]
}