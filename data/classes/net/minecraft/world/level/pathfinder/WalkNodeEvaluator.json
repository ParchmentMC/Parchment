{
  "name": "net/minecraft/world/level/pathfinder/WalkNodeEvaluator",
  "methods": [
    {
      "name": "checkNeighbourBlocks",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns possible dangers in a 3x3 cube, otherwise nodeType"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "centerPos"
        },
        {
          "index": 2,
          "name": "nodeType"
        }
      ]
    },
    {
      "name": "done",
      "descriptor": "()V",
      "javadoc": [
        "This method is called when all nodes have been processed and PathEntity is created.",
        "{@link net.minecraft.world.pathfinder.WalkNodeProcessor WalkNodeProcessor} uses this to change its field {@link net.minecraft.world.pathfinder.WalkNodeProcessor#avoidsWater avoidsWater}"
      ]
    },
    {
      "name": "evaluateBlockPathType",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns the exact path node type according to abilities and settings of the entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "canOpenDoors"
        },
        {
          "index": 3,
          "name": "canEnterDoors"
        },
        {
          "index": 4,
          "name": "pos"
        },
        {
          "index": 5,
          "name": "nodeType"
        }
      ]
    },
    {
      "name": "getBlockPathType",
      "descriptor": "(Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns a significant cached path node type for specified position or calculates it"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entityliving"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockPathType",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns the node type at the specified postion taking the block below into account"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 4,
          "name": "z"
        }
      ]
    },
    {
      "name": "getBlockPathType",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns the significant (e.g LAVA if the entity were half in lava) node type at the location taking the surroundings and the entity size in account"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "blockaccess"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 4,
          "name": "z"
        },
        {
          "index": 5,
          "name": "entityliving"
        },
        {
          "index": 6,
          "name": "xSize"
        },
        {
          "index": 7,
          "name": "ySize"
        },
        {
          "index": 8,
          "name": "zSize"
        },
        {
          "index": 9,
          "name": "canBreakDoors"
        },
        {
          "index": 10,
          "name": "canEnterDoors"
        }
      ]
    },
    {
      "name": "getBlockPathTypeStatic",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns the node type at the specified postion taking the block below into account"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockPathTypes",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Populates the nodeTypeEnum with all the surrounding node types and returns the center one"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 4,
          "name": "z"
        },
        {
          "index": 5,
          "name": "xSize"
        },
        {
          "index": 6,
          "name": "ySize"
        },
        {
          "index": 7,
          "name": "zSize"
        },
        {
          "index": 8,
          "name": "canOpenDoors"
        },
        {
          "index": 9,
          "name": "canEnterDoors"
        },
        {
          "index": 10,
          "name": "nodeTypeEnum"
        },
        {
          "index": 11,
          "name": "nodeType"
        },
        {
          "index": 12,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getCachedBlockType",
      "descriptor": "(Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes;",
      "javadoc": [
        "Returns a cached path node type for specified position or calculates it"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 4,
          "name": "z"
        }
      ]
    },
    {
      "name": "getFloorLevel",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D",
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "isBurningBlock",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "javadoc": [
        "Checks whether the specified block state can cause burn damage"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "state"
        }
      ]
    }
  ]
}