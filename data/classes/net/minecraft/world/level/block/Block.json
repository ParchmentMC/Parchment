{
  "name": "net/minecraft/world/level/block/Block",
  "methods": [
    {
      "name": "animateTick",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "rand"
        }
      ]
    },
    {
      "name": "appendHoverText",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "tooltip"
        },
        {
          "index": 4,
          "name": "flag"
        }
      ]
    },
    {
      "name": "box",
      "descriptor": "(DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape;",
      "parameters": [
        {
          "index": 0,
          "name": "x1"
        },
        {
          "index": 2,
          "name": "y1"
        },
        {
          "index": 4,
          "name": "z1"
        },
        {
          "index": 6,
          "name": "x2"
        },
        {
          "index": 8,
          "name": "y2"
        },
        {
          "index": 10,
          "name": "z2"
        }
      ]
    },
    {
      "name": "byItem",
      "descriptor": "(Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        }
      ]
    },
    {
      "name": "canSupportCenter",
      "descriptor": "(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z",
      "javadoc": [
        "Returns true if the block can stay on position if attached to given side"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "direction"
        }
      ]
    },
    {
      "name": "canSupportRigidBlock",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z",
      "javadoc": [
        "Returns true if the block in given position has a solid top face"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "createBlockStateDefinition",
      "descriptor": "(Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        }
      ]
    },
    {
      "name": "defaultBlockState",
      "descriptor": "()Lnet/minecraft/world/level/block/state/BlockState;",
      "javadoc": [
        "Gets the default state for this block"
      ]
    },
    {
      "name": "destroy",
      "descriptor": "(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V",
      "javadoc": [
        "Called after a player destroys this Block - the posiiton pos may no longer hold the state indicated."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        }
      ]
    },
    {
      "name": "dropFromExplosion",
      "descriptor": "(Lnet/minecraft/world/level/Explosion;)Z",
      "javadoc": [
        "Return whether this block can drop from an explosion."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "explosion"
        }
      ]
    },
    {
      "name": "dropResources",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "dropResources",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "blockEntity"
        },
        {
          "index": 4,
          "name": "entity"
        },
        {
          "index": 5,
          "name": "stack"
        }
      ]
    },
    {
      "name": "dropResources",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "blockEntity"
        }
      ]
    },
    {
      "name": "fillItemCategory",
      "descriptor": "(Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V",
      "javadoc": [
        "returns a list of blocks with the same ID, but different meta (eg: wood returns 4 blocks)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "group"
        },
        {
          "index": 2,
          "name": "items"
        }
      ]
    },
    {
      "name": "getCloneItemStack",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        }
      ]
    },
    {
      "name": "getDescriptionId",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Returns the unlocalized name of the block with \"tile.\" appended to the front."
      ]
    },
    {
      "name": "getDrops",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List;",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "blockEntity"
        }
      ]
    },
    {
      "name": "getDrops",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List;",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "blockEntity"
        },
        {
          "index": 4,
          "name": "entity"
        },
        {
          "index": 5,
          "name": "stack"
        }
      ]
    },
    {
      "name": "getExplosionResistance",
      "descriptor": "()F",
      "javadoc": [
        "Returns how much this block can resist explosions from the passed in entity."
      ]
    },
    {
      "name": "getId",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)I",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        }
      ]
    },
    {
      "name": "getSoundType",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType;",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "getStateForPlacement",
      "descriptor": "(Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 1,
          "name": "context"
        }
      ]
    },
    {
      "name": "isFaceFull",
      "descriptor": "(Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "shape"
        },
        {
          "index": 1,
          "name": "side"
        }
      ]
    },
    {
      "name": "isPossibleToRespawnInThis",
      "descriptor": "()Z",
      "javadoc": [
        "Return true if an entity can be spawned inside the block (used to get the player's bed spawn location)"
      ]
    },
    {
      "name": "isRandomlyTicking",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "javadoc": [
        "Returns whether or not this block is of a type that needs random ticking. Called for ref-counting purposes by ExtendedBlockStorage in order to broadly cull a chunk from the random chunk update list for efficiency's sake."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "isShapeFullBlock",
      "descriptor": "(Lnet/minecraft/world/phys/shapes/VoxelShape;)Z",
      "javadoc": [
        "Gets whether the provided {@link VoxelShape} is opaque"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "shape"
        }
      ]
    },
    {
      "name": "playerDestroy",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V",
      "javadoc": [
        "Spawns the block's drops in the world. By the time this is called the Block has possibly been set to air via Block.removedByPlayer"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "player"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "state"
        },
        {
          "index": 5,
          "name": "te"
        },
        {
          "index": 6,
          "name": "stack"
        }
      ]
    },
    {
      "name": "playerWillDestroy",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V",
      "javadoc": [
        "Called before the Block is set to air in the world. Called regardless of if the player's tool can actually collect this block"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        },
        {
          "index": 4,
          "name": "player"
        }
      ]
    },
    {
      "name": "popExperience",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V",
      "javadoc": [
        "Spawns the given amount of experience into the World as XP orb entities"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "amount"
        }
      ]
    },
    {
      "name": "popResource",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V",
      "javadoc": [
        "Spawns the given stack into the World at the given position, respecting the doTileDrops gamerule"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "stack"
        }
      ]
    },
    {
      "name": "propagatesSkylightDown",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "reader"
        },
        {
          "index": 3,
          "name": "pos"
        }
      ]
    },
    {
      "name": "pushEntitiesUp",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 0,
          "name": "oldState"
        },
        {
          "index": 1,
          "name": "newState"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        }
      ]
    },
    {
      "name": "registerDefaultState",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)V",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "setPlacedBy",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V",
      "javadoc": [
        "Called by ItemBlocks after a block is set in the world, to allow post-place logic"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        },
        {
          "index": 4,
          "name": "placer"
        },
        {
          "index": 5,
          "name": "stack"
        }
      ]
    },
    {
      "name": "stateById",
      "descriptor": "(I)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 0,
          "name": "id"
        }
      ]
    },
    {
      "name": "updateEntityAfterFallOn",
      "descriptor": "(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V",
      "javadoc": [
        "Called when an Entity lands on this Block. This method *must* update motionY because the entity will not do that on its own"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "entity"
        }
      ]
    },
    {
      "name": "updateFromNeighbourShapes",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "javadoc": [
        "With the provided block state, performs neighbor checks for all neighboring blocks to get an \"adjusted\" blockstate for placement in the world, if the current state is not valid."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "currentState"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "updateOrDestroy",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V",
      "javadoc": [
        "Replaces oldState with newState, possibly playing effects and creating drops. Flags are as in {@link World#setBlockState}"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "oldState"
        },
        {
          "index": 1,
          "name": "newState"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "flags"
        }
      ]
    },
    {
      "name": "updateOrDestroy",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V",
      "parameters": [
        {
          "index": 0,
          "name": "oldState"
        },
        {
          "index": 1,
          "name": "newState"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "flags"
        },
        {
          "index": 5,
          "name": "recursionLeft"
        }
      ]
    },
    {
      "name": "wasExploded",
      "descriptor": "(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V",
      "javadoc": [
        "Called when this Block is destroyed by an Explosion"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "explosion"
        }
      ]
    }
  ]
}