{
  "name": "net/minecraft/world/level/block/LeavesBlock",
  "methods": [
    {
      "name": "animateTick",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "rand"
        }
      ]
    },
    {
      "name": "createBlockStateDefinition",
      "descriptor": "(Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        }
      ]
    },
    {
      "name": "getBlockSupportShape",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape;",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "reader"
        },
        {
          "index": 3,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getDistanceAt",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)I",
      "parameters": [
        {
          "index": 0,
          "name": "neighbor"
        }
      ]
    },
    {
      "name": "getLightBlock",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getStateForPlacement",
      "descriptor": "(Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 1,
          "name": "context"
        }
      ]
    },
    {
      "name": "isRandomlyTicking",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "javadoc": [
        "Returns whether or not this block is of a type that needs random ticking. Called for ref-counting purposes by ExtendedBlockStorage in order to broadly cull a chunk from the random chunk update list for efficiency's sake."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "randomTick",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V",
      "javadoc": [
        "Performs a random tick on a block."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "random"
        }
      ]
    },
    {
      "name": "tick",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "rand"
        }
      ]
    },
    {
      "name": "updateDistance",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "updateShape",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "javadoc": [
        "Update the provided state given the provided neighbor facing and neighbor state, returning a new state.",
        "For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.",
        "Note that this method should ideally consider only the specific face passed in."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "facing"
        },
        {
          "index": 3,
          "name": "facingState"
        },
        {
          "index": 4,
          "name": "level"
        },
        {
          "index": 5,
          "name": "currentPos"
        },
        {
          "index": 6,
          "name": "facingPos"
        }
      ]
    }
  ]
}