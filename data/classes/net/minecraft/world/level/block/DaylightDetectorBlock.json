{
  "name": "net/minecraft/world/level/block/DaylightDetectorBlock",
  "methods": [
    {
      "name": "createBlockStateDefinition",
      "descriptor": "(Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        }
      ]
    },
    {
      "name": "getRenderShape",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape;",
      "javadoc": [
        "The type of render function called. MODEL for mixed tesr and static model, MODELBLOCK_ANIMATED for TESR-only, LIQUID for vanilla liquids, INVISIBLE to skip all rendering",
        "@deprecated call via {@link IBlockState#getRenderType()} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "getShape",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape;",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "context"
        }
      ]
    },
    {
      "name": "getSignal",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I",
      "javadoc": [
        "@deprecated call via {@link IBlockState#getWeakPower(IBlockAccess,BlockPos,EnumFacing)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "blockState"
        },
        {
          "index": 2,
          "name": "blockAccess"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "side"
        }
      ]
    },
    {
      "name": "isSignalSource",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "javadoc": [
        "Can this block provide power. Only wire currently seems to have this change based on its state.",
        "@deprecated call via {@link IBlockState#canProvidePower()} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "updateSignalStrength",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 0,
          "name": "state"
        },
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "use",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult;",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "player"
        },
        {
          "index": 5,
          "name": "hand"
        },
        {
          "index": 6,
          "name": "hit"
        }
      ]
    },
    {
      "name": "useShapeForLightOcclusion",
      "descriptor": "(Lnet/minecraft/world/level/block/state/BlockState;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    }
  ]
}