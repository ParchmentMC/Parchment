{
  "name": "net/minecraft/world/level/block/entity/StructureBlockEntity",
  "methods": [
    {
      "name": "createRandom",
      "descriptor": "(J)Ljava/util/Random;",
      "parameters": [
        {
          "index": 0,
          "name": "seed"
        }
      ]
    },
    {
      "name": "createdBy",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "author"
        }
      ]
    },
    {
      "name": "getUpdatePacket",
      "descriptor": "()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "getUpdateTag",
      "descriptor": "()Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "save",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag;",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "saveStructure",
      "descriptor": "()Z",
      "javadoc": [
        "Saves the template, writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ]
    },
    {
      "name": "saveStructure",
      "descriptor": "(Z)Z",
      "javadoc": [
        "Saves the template, either updating the local version or writing it to disk.",
        "",
        "@return true if the template was successfully saved."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "writeToDisk"
        }
      ]
    },
    {
      "name": "setIgnoreEntities",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "ignoreEntities"
        }
      ]
    },
    {
      "name": "setIntegrity",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "integrity"
        }
      ]
    },
    {
      "name": "setMetaData",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "metadata"
        }
      ]
    },
    {
      "name": "setMirror",
      "descriptor": "(Lnet/minecraft/world/level/block/Mirror;)V",
      "parameters": [
        {
          "index": 1,
          "name": "mirror"
        }
      ]
    },
    {
      "name": "setMode",
      "descriptor": "(Lnet/minecraft/world/level/block/state/properties/StructureMode;)V",
      "parameters": [
        {
          "index": 1,
          "name": "mode"
        }
      ]
    },
    {
      "name": "setPowered",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "powered"
        }
      ]
    },
    {
      "name": "setRotation",
      "descriptor": "(Lnet/minecraft/world/level/block/Rotation;)V",
      "parameters": [
        {
          "index": 1,
          "name": "rotation"
        }
      ]
    },
    {
      "name": "setSeed",
      "descriptor": "(J)V",
      "parameters": [
        {
          "index": 1,
          "name": "seed"
        }
      ]
    },
    {
      "name": "setShowAir",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "showAir"
        }
      ]
    },
    {
      "name": "setShowBoundingBox",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "showBoundingBox"
        }
      ]
    },
    {
      "name": "setStructureName",
      "descriptor": "(Ljava/lang/String;)V",
      "parameters": [
        {
          "index": 1,
          "name": "name"
        }
      ]
    },
    {
      "name": "setStructureName",
      "descriptor": "(Lnet/minecraft/resources/ResourceLocation;)V",
      "parameters": [
        {
          "index": 1,
          "name": "newName"
        }
      ]
    },
    {
      "name": "setStructurePos",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "usedBy",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    }
  ]
}