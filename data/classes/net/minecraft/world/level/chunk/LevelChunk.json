{
  "name": "net/minecraft/world/level/chunk/LevelChunk",
  "fields": [
    {
      "name": "blockEntities",
      "descriptor": "Ljava/util/Map;",
      "javadoc": [
        "A Map of ChunkPositions to TileEntities in this chunk"
      ]
    },
    {
      "name": "inhabitedTime",
      "descriptor": "J",
      "javadoc": [
        "the cumulative number of ticks players have been in this chunk"
      ]
    }
  ],
  "methods": [
    {
      "name": "addEntity",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)V",
      "javadoc": [
        "Adds an entity to the chunk."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "createBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "creationMode"
        }
      ]
    },
    {
      "name": "getBlockEntityNbt",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockEntityNbtForSaving",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getBlockState",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getFluidState",
      "descriptor": "(III)Lnet/minecraft/world/level/material/FluidState;",
      "parameters": [
        {
          "index": 1,
          "name": "bx"
        },
        {
          "index": 2,
          "name": "by"
        },
        {
          "index": 3,
          "name": "bz"
        }
      ]
    },
    {
      "name": "getFluidState",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "getHeight",
      "descriptor": "(Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I",
      "parameters": [
        {
          "index": 1,
          "name": "heightmapType"
        },
        {
          "index": 2,
          "name": "x"
        },
        {
          "index": 3,
          "name": "z"
        }
      ]
    },
    {
      "name": "getOrCreateHeightmapUnprimed",
      "descriptor": "(Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap;",
      "parameters": [
        {
          "index": 1,
          "name": "type"
        }
      ]
    },
    {
      "name": "getPos",
      "descriptor": "()Lnet/minecraft/world/level/ChunkPos;",
      "javadoc": [
        "Gets a {@link ChunkPos} representing the x and z coordinates of this chunk."
      ]
    },
    {
      "name": "markUnsaved",
      "descriptor": "()V",
      "javadoc": [
        "Sets the isModified flag for this Chunk"
      ]
    },
    {
      "name": "packTicks",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;)V",
      "javadoc": [
        "Remove scheduled ticks belonging to this chunk from the world and keep it locally for incoming serialization"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "serverLevel"
        }
      ]
    },
    {
      "name": "promotePendingBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity;",
      "javadoc": [
        "Sets up or deserializes a {@link TileEntity} at the desired location from the given compound. If the compound's TileEntity id is {@code \"DUMMY\"}, the TileEntity may be created by the {@link ITileProvider} instance if the {@link Block} at the given position is in fact a provider. Otherwise, the TileEntity is deserialized at the given position."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "compound"
        }
      ]
    },
    {
      "name": "removeBlockEntity",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "setAllReferences",
      "descriptor": "(Ljava/util/Map;)V",
      "parameters": [
        {
          "index": 1,
          "name": "structureReferences"
        }
      ]
    },
    {
      "name": "setAllStarts",
      "descriptor": "(Ljava/util/Map;)V",
      "parameters": [
        {
          "index": 1,
          "name": "structureStarts"
        }
      ]
    },
    {
      "name": "setBlockEntityNbt",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "nbt"
        }
      ]
    },
    {
      "name": "setBlockState",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "state"
        },
        {
          "index": 3,
          "name": "isMoving"
        }
      ]
    },
    {
      "name": "setFullStatus",
      "descriptor": "(Ljava/util/function/Supplier;)V",
      "parameters": [
        {
          "index": 1,
          "name": "locationType"
        }
      ]
    },
    {
      "name": "setInhabitedTime",
      "descriptor": "(J)V",
      "parameters": [
        {
          "index": 1,
          "name": "newInhabitedTime"
        }
      ]
    },
    {
      "name": "setLightCorrect",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "lightCorrect"
        }
      ]
    },
    {
      "name": "setLoaded",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "loaded"
        }
      ]
    },
    {
      "name": "setUnsaved",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "modified"
        }
      ]
    },
    {
      "name": "unpackTicks",
      "descriptor": "()V",
      "javadoc": [
        "Reschedule all serialized scheduled ticks this chunk had"
      ]
    }
  ]
}