{
  "name": "net/minecraft/world/entity/monster/piglin/Piglin",
  "methods": [
    {
      "name": "addAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "canReplaceCurrentItem",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "candidate"
        },
        {
          "index": 2,
          "name": "existing"
        },
        {
          "index": 3,
          "name": "slotType"
        }
      ]
    },
    {
      "name": "dropCustomDeathLoot",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "source"
        },
        {
          "index": 2,
          "name": "looting"
        },
        {
          "index": 3,
          "name": "recentlyHit"
        }
      ]
    },
    {
      "name": "finalizeSpawn",
      "descriptor": "(Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "difficulty"
        },
        {
          "index": 3,
          "name": "reason"
        },
        {
          "index": 4,
          "name": "spawnData"
        },
        {
          "index": 5,
          "name": "dataTag"
        }
      ]
    },
    {
      "name": "getExperienceReward",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "getHurtSound",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;",
      "parameters": [
        {
          "index": 1,
          "name": "damageSource"
        }
      ]
    },
    {
      "name": "getPassengersRidingOffset",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y offset from the entity's position for any entity riding this one."
      ]
    },
    {
      "name": "getStandingEyeHeight",
      "descriptor": "(Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pose"
        },
        {
          "index": 2,
          "name": "size"
        }
      ]
    },
    {
      "name": "hurt",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "source"
        },
        {
          "index": 2,
          "name": "amount"
        }
      ]
    },
    {
      "name": "isBaby",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "makeBrain",
      "descriptor": "(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain;",
      "parameters": [
        {
          "index": 1,
          "name": "dynamic"
        }
      ]
    },
    {
      "name": "mobInteract",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult;",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "hand"
        }
      ]
    },
    {
      "name": "onSyncedDataUpdated",
      "descriptor": "(Lnet/minecraft/network/syncher/EntityDataAccessor;)V",
      "parameters": [
        {
          "index": 1,
          "name": "key"
        }
      ]
    },
    {
      "name": "performRangedAttack",
      "descriptor": "(Lnet/minecraft/world/entity/LivingEntity;F)V",
      "javadoc": [
        "Attack the specified entity using a ranged attack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "target"
        },
        {
          "index": 2,
          "name": "distanceFactor"
        }
      ]
    },
    {
      "name": "pickUpItem",
      "descriptor": "(Lnet/minecraft/world/entity/item/ItemEntity;)V",
      "javadoc": [
        "Tests if this entity should pickup a weapon or an armor. Entity drops current weapon or armor if the new one is better."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "itemEntity"
        }
      ]
    },
    {
      "name": "playStepSound",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        }
      ]
    },
    {
      "name": "populateDefaultEquipmentSlots",
      "descriptor": "(Lnet/minecraft/world/DifficultyInstance;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "difficulty"
        }
      ]
    },
    {
      "name": "readAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "removeWhenFarAway",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "distanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "setBaby",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "childZombie"
        }
      ]
    },
    {
      "name": "setChargingCrossbow",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "isCharging"
        }
      ]
    },
    {
      "name": "startRiding",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "force"
        }
      ]
    }
  ]
}