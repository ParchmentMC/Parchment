{
  "name": "net/minecraft/world/entity/monster/Zombie",
  "methods": [
    {
      "name": "addAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "aiStep",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "canHoldItem",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "doHurtTarget",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "dropCustomDeathLoot",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "source"
        },
        {
          "index": 2,
          "name": "looting"
        },
        {
          "index": 3,
          "name": "recentlyHit"
        }
      ]
    },
    {
      "name": "finalizeSpawn",
      "descriptor": "(Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "difficulty"
        },
        {
          "index": 3,
          "name": "reason"
        },
        {
          "index": 4,
          "name": "spawnData"
        },
        {
          "index": 5,
          "name": "dataTag"
        }
      ]
    },
    {
      "name": "getExperienceReward",
      "descriptor": "(Lnet/minecraft/world/entity/player/Player;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "getHurtSound",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;",
      "parameters": [
        {
          "index": 1,
          "name": "damageSource"
        }
      ]
    },
    {
      "name": "getMyRidingOffset",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y Offset of this entity."
      ]
    },
    {
      "name": "getStandingEyeHeight",
      "descriptor": "(Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pose"
        },
        {
          "index": 2,
          "name": "size"
        }
      ]
    },
    {
      "name": "handleAttributes",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "difficulty"
        }
      ]
    },
    {
      "name": "hurt",
      "descriptor": "(Lnet/minecraft/world/damagesource/DamageSource;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "source"
        },
        {
          "index": 2,
          "name": "amount"
        }
      ]
    },
    {
      "name": "isBaby",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "killed",
      "descriptor": "(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "killedEntity"
        }
      ]
    },
    {
      "name": "onSyncedDataUpdated",
      "descriptor": "(Lnet/minecraft/network/syncher/EntityDataAccessor;)V",
      "parameters": [
        {
          "index": 1,
          "name": "key"
        }
      ]
    },
    {
      "name": "playStepSound",
      "descriptor": "(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        }
      ]
    },
    {
      "name": "populateDefaultEquipmentSlots",
      "descriptor": "(Lnet/minecraft/world/DifficultyInstance;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "difficulty"
        }
      ]
    },
    {
      "name": "readAdditionalSaveData",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "setBaby",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "childZombie"
        }
      ]
    },
    {
      "name": "setCanBreakDoors",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets or removes EntityAIBreakDoor task"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "enabled"
        }
      ]
    },
    {
      "name": "tick",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    }
  ]
}