{
  "name": "net/minecraft/world/entity/ai/goal/MoveToBlockGoal",
  "fields": [
    {
      "name": "blockPos",
      "descriptor": "Lnet/minecraft/core/BlockPos;",
      "javadoc": [
        "Block to move to"
      ]
    },
    {
      "name": "nextStartTick",
      "descriptor": "I",
      "javadoc": [
        "Controls task execution delay"
      ]
    }
  ],
  "methods": [
    {
      "name": "canContinueToUse",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether an in-progress EntityAIBase should continue executing"
      ]
    },
    {
      "name": "canUse",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well."
      ]
    },
    {
      "name": "findNearestBlock",
      "descriptor": "()Z",
      "javadoc": [
        "Searches and sets new destination block and returns true if a suitable block (specified in {@link net.minecraft.entity.ai.EntityAIMoveToBlock#shouldMoveTo(World, BlockPos) EntityAIMoveToBlock#shouldMoveTo(World, BlockPos)}) can be found."
      ]
    },
    {
      "name": "isValidTarget",
      "descriptor": "(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z",
      "javadoc": [
        "Return true to set given position as destination"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "nextStartTick",
      "descriptor": "(Lnet/minecraft/world/entity/PathfinderMob;)I",
      "parameters": [
        {
          "index": 1,
          "name": "creature"
        }
      ]
    },
    {
      "name": "start",
      "descriptor": "()V",
      "javadoc": [
        "Execute a one shot task or start executing a continuous task"
      ]
    },
    {
      "name": "tick",
      "descriptor": "()V",
      "javadoc": [
        "Keep ticking a continuous task that has already been started"
      ]
    }
  ]
}