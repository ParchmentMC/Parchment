{
  "name": "net/minecraft/world/entity/ai/navigation/PathNavigation",
  "fields": [
    {
      "name": "reachRange",
      "descriptor": "I",
      "javadoc": [
        "Distance in which a path point counts as target-reaching"
      ]
    }
  ],
  "methods": [
    {
      "name": "canMoveDirectly",
      "descriptor": "(Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z",
      "javadoc": [
        "Checks if the specified entity can safely walk to the specified location."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "posVec31"
        },
        {
          "index": 2,
          "name": "posVec32"
        },
        {
          "index": 3,
          "name": "sizeX"
        },
        {
          "index": 4,
          "name": "sizeY"
        },
        {
          "index": 5,
          "name": "sizeZ"
        }
      ]
    },
    {
      "name": "canUpdatePath",
      "descriptor": "()Z",
      "javadoc": [
        "If on ground or swimming and can swim"
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(DDDI)Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "Returns path to given BlockPos"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path;",
      "parameters": [
        {
          "index": 1,
          "name": "positions"
        },
        {
          "index": 2,
          "name": "distance"
        }
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "Returns a path to one of the given targets or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "targets"
        },
        {
          "index": 2,
          "name": "regionOffset"
        },
        {
          "index": 3,
          "name": "offsetUpward"
        },
        {
          "index": 4,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "Returns a path to one of the elements of the stream or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "targets"
        },
        {
          "index": 2,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "Returns path to given BlockPos"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "accuracy"
        }
      ]
    },
    {
      "name": "createPath",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "Returns a path to the given entity or null"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "doStuckDetection",
      "descriptor": "(Lnet/minecraft/world/phys/Vec3;)V",
      "javadoc": [
        "Checks if entity haven't been moved when last checked and if so, clears current {@link net.minecraft.pathfinding.PathEntity}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "positionVec3"
        }
      ]
    },
    {
      "name": "getPath",
      "descriptor": "()Lnet/minecraft/world/level/pathfinder/Path;",
      "javadoc": [
        "gets the actively used PathEntity"
      ]
    },
    {
      "name": "hasDelayedRecomputation",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if path can be changed by {@link net.minecraft.pathfinding.PathNavigate#onUpdateNavigation() onUpdateNavigation()}"
      ]
    },
    {
      "name": "isDone",
      "descriptor": "()Z",
      "javadoc": [
        "If null path or reached the end"
      ]
    },
    {
      "name": "isInLiquid",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the entity is in water or lava, false otherwise"
      ]
    },
    {
      "name": "isStableDestination",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "moveTo",
      "descriptor": "(DDDD)Z",
      "javadoc": [
        "Try to find and set a path to XYZ. Returns true if successful. Args : x, y, z, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "speed"
        }
      ]
    },
    {
      "name": "moveTo",
      "descriptor": "(Lnet/minecraft/world/entity/Entity;D)Z",
      "javadoc": [
        "Try to find and set a path to EntityLiving. Returns true if successful. Args : entity, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        },
        {
          "index": 2,
          "name": "speed"
        }
      ]
    },
    {
      "name": "moveTo",
      "descriptor": "(Lnet/minecraft/world/level/pathfinder/Path;D)Z",
      "javadoc": [
        "Sets a new path. If it's diferent from the old path. Checks to adjust path for sun avoiding, and stores start coords. Args : path, speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pathentity"
        },
        {
          "index": 2,
          "name": "speed"
        }
      ]
    },
    {
      "name": "recomputePath",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "setCanFloat",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "canSwim"
        }
      ]
    },
    {
      "name": "setMaxVisitedNodesMultiplier",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "multiplier"
        }
      ]
    },
    {
      "name": "setSpeedModifier",
      "descriptor": "(D)V",
      "javadoc": [
        "Sets the speed"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "speed"
        }
      ]
    },
    {
      "name": "stop",
      "descriptor": "()V",
      "javadoc": [
        "sets active PathEntity to null"
      ]
    },
    {
      "name": "trimPath",
      "descriptor": "()V",
      "javadoc": [
        "Trims path data from the end to the first sun covered block"
      ]
    }
  ]
}