{
  "name": "net/minecraft/network/FriendlyByteBuf",
  "methods": [
    {
      "name": "getVarIntSize",
      "descriptor": "(I)I",
      "javadoc": [
        "Calculates the number of bytes required to fit the supplied int (0-5) if it were to be read/written using readVarIntFromBuffer or writeVarIntToBuffer"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "input"
        }
      ]
    },
    {
      "name": "readByteArray",
      "descriptor": "(I)[B",
      "parameters": [
        {
          "index": 1,
          "name": "maxLength"
        }
      ]
    },
    {
      "name": "readEnum",
      "descriptor": "(Ljava/lang/Class;)Ljava/lang/Enum;",
      "parameters": [
        {
          "index": 1,
          "name": "enumClass"
        }
      ]
    },
    {
      "name": "readItem",
      "descriptor": "()Lnet/minecraft/world/item/ItemStack;",
      "javadoc": [
        "Reads an ItemStack from this buffer"
      ]
    },
    {
      "name": "readLongArray",
      "descriptor": "([J)[J",
      "javadoc": [
        "Reads a length-prefixed array of longs from the buffer."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "array"
        }
      ]
    },
    {
      "name": "readLongArray",
      "descriptor": "([JI)[J",
      "parameters": [
        {
          "index": 1,
          "name": "array"
        },
        {
          "index": 2,
          "name": "maxLength"
        }
      ]
    },
    {
      "name": "readNbt",
      "descriptor": "()Lnet/minecraft/nbt/CompoundTag;",
      "javadoc": [
        "Reads a compressed NBTTagCompound from this buffer"
      ]
    },
    {
      "name": "readUtf",
      "descriptor": "(I)Ljava/lang/String;",
      "javadoc": [
        "Reads a string from this buffer. Expected parameter is maximum allowed string length. Will throw IOException if string length exceeds this value!"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "maxLength"
        }
      ]
    },
    {
      "name": "readVarInt",
      "descriptor": "()I",
      "javadoc": [
        "Reads a compressed int from the buffer. To do so it maximally reads 5 byte-sized chunks whose most significant bit dictates whether another byte should be read."
      ]
    },
    {
      "name": "readVarIntArray",
      "descriptor": "(I)[I",
      "parameters": [
        {
          "index": 1,
          "name": "maxLength"
        }
      ]
    },
    {
      "name": "writeBlockHitResult",
      "descriptor": "(Lnet/minecraft/world/phys/BlockHitResult;)V",
      "parameters": [
        {
          "index": 1,
          "name": "result"
        }
      ]
    },
    {
      "name": "writeBlockPos",
      "descriptor": "(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        }
      ]
    },
    {
      "name": "writeByteArray",
      "descriptor": "([B)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "array"
        }
      ]
    },
    {
      "name": "writeComponent",
      "descriptor": "(Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "component"
        }
      ]
    },
    {
      "name": "writeDate",
      "descriptor": "(Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "time"
        }
      ]
    },
    {
      "name": "writeEnum",
      "descriptor": "(Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "writeItem",
      "descriptor": "(Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf;",
      "javadoc": [
        "Writes the ItemStack's ID (short), then size (byte), then damage. (short)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "writeLongArray",
      "descriptor": "([J)Lnet/minecraft/network/FriendlyByteBuf;",
      "javadoc": [
        "Writes an array of longs to the buffer, prefixed by the length of the array (as a VarInt)."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "array"
        }
      ]
    },
    {
      "name": "writeNbt",
      "descriptor": "(Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf;",
      "javadoc": [
        "Writes a compressed NBTTagCompound to this buffer"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "nbt"
        }
      ]
    },
    {
      "name": "writeResourceLocation",
      "descriptor": "(Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "resourceLocation"
        }
      ]
    },
    {
      "name": "writeUUID",
      "descriptor": "(Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "uuid"
        }
      ]
    },
    {
      "name": "writeUtf",
      "descriptor": "(Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "string"
        }
      ]
    },
    {
      "name": "writeUtf",
      "descriptor": "(Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "string"
        },
        {
          "index": 2,
          "name": "maxLength"
        }
      ]
    },
    {
      "name": "writeVarInt",
      "descriptor": "(I)Lnet/minecraft/network/FriendlyByteBuf;",
      "javadoc": [
        "Writes a compressed int to the buffer. The smallest number of bytes to fit the passed int will be written. Of each such byte only 7 bits will be used to describe the actual value since its most significant bit dictates whether the next byte is part of that same int. Micro-optimization for int values that are expected to have values below 128."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "input"
        }
      ]
    },
    {
      "name": "writeVarIntArray",
      "descriptor": "([I)Lnet/minecraft/network/FriendlyByteBuf;",
      "javadoc": [
        "Writes an array of VarInts to the buffer, prefixed by the length of the array (as a VarInt)."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "array"
        }
      ]
    },
    {
      "name": "writeVarLong",
      "descriptor": "(J)Lnet/minecraft/network/FriendlyByteBuf;",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    }
  ]
}