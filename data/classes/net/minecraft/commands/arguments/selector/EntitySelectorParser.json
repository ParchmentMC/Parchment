{
  "name": "net/minecraft/commands/arguments/selector/EntitySelectorParser",
  "methods": [
    {
      "name": "addPredicate",
      "descriptor": "(Ljava/util/function/Predicate;)V",
      "parameters": [
        {
          "index": 1,
          "name": "filter"
        }
      ]
    },
    {
      "name": "createAabb",
      "descriptor": "(DDD)Lnet/minecraft/world/phys/AABB;",
      "parameters": [
        {
          "index": 1,
          "name": "sizeX"
        },
        {
          "index": 3,
          "name": "sizeY"
        },
        {
          "index": 5,
          "name": "sizeZ"
        }
      ]
    },
    {
      "name": "createRotationPredicate",
      "descriptor": "(Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;",
      "parameters": [
        {
          "index": 1,
          "name": "angleBounds"
        },
        {
          "index": 2,
          "name": "angleFunc"
        }
      ]
    },
    {
      "name": "fillSelectorSuggestions",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V",
      "parameters": [
        {
          "index": 0,
          "name": "suggestionBuilder"
        }
      ]
    },
    {
      "name": "fillSuggestions",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "setDeltaX",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "dx"
        }
      ]
    },
    {
      "name": "setDeltaY",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "dy"
        }
      ]
    },
    {
      "name": "setDeltaZ",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "dz"
        }
      ]
    },
    {
      "name": "setHasAdvancements",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasGamemodeEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasGamemodeNotEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasNameEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasNameNotEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasScores",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasTeamEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setHasTeamNotEquals",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setIncludesEntities",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "includeNonPlayers"
        }
      ]
    },
    {
      "name": "setLevel",
      "descriptor": "(Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        }
      ]
    },
    {
      "name": "setLimited",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setMaxResults",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "limit"
        }
      ]
    },
    {
      "name": "setOrder",
      "descriptor": "(Ljava/util/function/BiConsumer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "sorter"
        }
      ]
    },
    {
      "name": "setRotX",
      "descriptor": "(Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V",
      "parameters": [
        {
          "index": 1,
          "name": "xRotation"
        }
      ]
    },
    {
      "name": "setRotY",
      "descriptor": "(Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V",
      "parameters": [
        {
          "index": 1,
          "name": "yRotation"
        }
      ]
    },
    {
      "name": "setSorted",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "value"
        }
      ]
    },
    {
      "name": "setSuggestions",
      "descriptor": "(Ljava/util/function/BiFunction;)V",
      "parameters": [
        {
          "index": 1,
          "name": "suggestionHandler"
        }
      ]
    },
    {
      "name": "setX",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "x"
        }
      ]
    },
    {
      "name": "setY",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "y"
        }
      ]
    },
    {
      "name": "setZ",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "z"
        }
      ]
    },
    {
      "name": "suggestName",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestNameOrSelector",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "suggestionBuilder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestOpenOptions",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestOptionsKey",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestOptionsKeyOrClose",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestOptionsNextOrClose",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    },
    {
      "name": "suggestSelector",
      "descriptor": "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        },
        {
          "index": 2,
          "name": "consumer"
        }
      ]
    }
  ]
}