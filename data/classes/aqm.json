{
  "name": "aqm",
  "fields": [
    {
      "name": "aA",
      "descriptor": "F"
    },
    {
      "name": "aB",
      "descriptor": "F"
    },
    {
      "name": "aC",
      "descriptor": "F"
    },
    {
      "name": "aD",
      "descriptor": "F"
    },
    {
      "name": "aE",
      "descriptor": "F"
    },
    {
      "name": "aF",
      "descriptor": "Lbfw;"
    },
    {
      "name": "aG",
      "descriptor": "I"
    },
    {
      "name": "aH",
      "descriptor": "Z"
    },
    {
      "name": "aI",
      "descriptor": "I"
    },
    {
      "name": "aJ",
      "descriptor": "F"
    },
    {
      "name": "aK",
      "descriptor": "F"
    },
    {
      "name": "aL",
      "descriptor": "F"
    },
    {
      "name": "aM",
      "descriptor": "F"
    },
    {
      "name": "aN",
      "descriptor": "F"
    },
    {
      "name": "aO",
      "descriptor": "I"
    },
    {
      "name": "aP",
      "descriptor": "F",
      "javadoc": [
        "Damage taken in the last hit. Mobs are resistant to damage less than this for a short time after taking damage."
      ]
    },
    {
      "name": "aQ",
      "descriptor": "Z"
    },
    {
      "name": "aR",
      "descriptor": "F"
    },
    {
      "name": "aS",
      "descriptor": "F"
    },
    {
      "name": "aT",
      "descriptor": "F"
    },
    {
      "name": "aU",
      "descriptor": "I"
    },
    {
      "name": "aV",
      "descriptor": "D"
    },
    {
      "name": "aW",
      "descriptor": "D"
    },
    {
      "name": "aX",
      "descriptor": "D"
    },
    {
      "name": "aY",
      "descriptor": "D"
    },
    {
      "name": "aZ",
      "descriptor": "D"
    },
    {
      "name": "ag",
      "descriptor": "Lus;"
    },
    {
      "name": "ah",
      "descriptor": "Laqb;"
    },
    {
      "name": "ai",
      "descriptor": "Z"
    },
    {
      "name": "aj",
      "descriptor": "Laot;"
    },
    {
      "name": "ak",
      "descriptor": "I"
    },
    {
      "name": "al",
      "descriptor": "I"
    },
    {
      "name": "am",
      "descriptor": "I"
    },
    {
      "name": "an",
      "descriptor": "I"
    },
    {
      "name": "ao",
      "descriptor": "I"
    },
    {
      "name": "ap",
      "descriptor": "F"
    },
    {
      "name": "aq",
      "descriptor": "I"
    },
    {
      "name": "ar",
      "descriptor": "F"
    },
    {
      "name": "as",
      "descriptor": "F"
    },
    {
      "name": "at",
      "descriptor": "I"
    },
    {
      "name": "au",
      "descriptor": "F"
    },
    {
      "name": "av",
      "descriptor": "F"
    },
    {
      "name": "aw",
      "descriptor": "F"
    },
    {
      "name": "ax",
      "descriptor": "I"
    },
    {
      "name": "ay",
      "descriptor": "F"
    },
    {
      "name": "az",
      "descriptor": "F"
    },
    {
      "name": "b",
      "descriptor": "Ljava/util/UUID;"
    },
    {
      "name": "bA",
      "descriptor": "J"
    },
    {
      "name": "bB",
      "descriptor": "F"
    },
    {
      "name": "bC",
      "descriptor": "F"
    },
    {
      "name": "ba",
      "descriptor": "D"
    },
    {
      "name": "bb",
      "descriptor": "I"
    },
    {
      "name": "bc",
      "descriptor": "Lbmb;"
    },
    {
      "name": "bd",
      "descriptor": "I"
    },
    {
      "name": "be",
      "descriptor": "I"
    },
    {
      "name": "bf",
      "descriptor": "I"
    },
    {
      "name": "bg",
      "descriptor": "Larf;"
    },
    {
      "name": "bh",
      "descriptor": "Lus;"
    },
    {
      "name": "bi",
      "descriptor": "Lus;"
    },
    {
      "name": "bj",
      "descriptor": "Lus;"
    },
    {
      "name": "bk",
      "descriptor": "Lari;"
    },
    {
      "name": "bl",
      "descriptor": "Lapj;"
    },
    {
      "name": "bm",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "bn",
      "descriptor": "Lgj;"
    },
    {
      "name": "bo",
      "descriptor": "Lgj;"
    },
    {
      "name": "bp",
      "descriptor": "Z"
    },
    {
      "name": "bq",
      "descriptor": "Laqm;"
    },
    {
      "name": "br",
      "descriptor": "I"
    },
    {
      "name": "bs",
      "descriptor": "Laqm;"
    },
    {
      "name": "bt",
      "descriptor": "I",
      "javadoc": [
        "Holds the value of ticksExisted when setLastAttacker was last called."
      ]
    },
    {
      "name": "bu",
      "descriptor": "F"
    },
    {
      "name": "bv",
      "descriptor": "I"
    },
    {
      "name": "bw",
      "descriptor": "F"
    },
    {
      "name": "bx",
      "descriptor": "Lfx;"
    },
    {
      "name": "by",
      "descriptor": "Ljava/util/Optional;"
    },
    {
      "name": "bz",
      "descriptor": "Lapk;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/util/UUID;"
    },
    {
      "name": "d",
      "descriptor": "Larj;"
    },
    {
      "name": "e",
      "descriptor": "Lus;"
    },
    {
      "name": "f",
      "descriptor": "Lus;"
    },
    {
      "name": "g",
      "descriptor": "Lus;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "A",
      "descriptor": "(Laqa;)D",
      "parameters": [
        {
          "index": 1,
          "name": "pLookingEntity"
        }
      ]
    },
    {
      "name": "B",
      "descriptor": "(Laqa;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "C",
      "descriptor": "()V",
      "javadoc": [
        "Clears potion metadata values if the entity has no potion effects. Otherwise, updates potion effect color, ambience, and invisibility metadata values"
      ]
    },
    {
      "name": "C",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "D",
      "descriptor": "(Laqa;)Z",
      "javadoc": [
        "returns true if the entity provided in the argument can be seen. (Raytrace)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "P",
      "descriptor": "()Loj;"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDFFIZ)V",
      "javadoc": [
        "Sets a target for the client to interpolate towards over the next few ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        },
        {
          "index": 7,
          "name": "pYaw"
        },
        {
          "index": 8,
          "name": "pPitch"
        },
        {
          "index": 9,
          "name": "pPosRotationIncrements"
        },
        {
          "index": 10,
          "name": "pTeleport"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDZ)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DZLceh;Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pY"
        },
        {
          "index": 3,
          "name": "pOnGroundIn"
        },
        {
          "index": 4,
          "name": "pState"
        },
        {
          "index": 5,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DZLdcn;)Ldcn;"
    },
    {
      "name": "a",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FDD)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStrength"
        },
        {
          "index": 2,
          "name": "pRatioX"
        },
        {
          "index": 4,
          "name": "pRatioZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FI)V",
      "parameters": [
        {
          "index": 1,
          "name": "pYaw"
        },
        {
          "index": 2,
          "name": "pPitch"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laot;Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laot;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHandIn"
        },
        {
          "index": 2,
          "name": "pUpdateSelf"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;)V",
      "javadoc": [
        "Called when the mob's health reaches 0."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCause"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pLooting"
        },
        {
          "index": 3,
          "name": "pRecentlyHitIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        },
        {
          "index": 2,
          "name": "pAttackedRecently"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laps;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPotionIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapu;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapu;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        },
        {
          "index": 2,
          "name": "pReapply"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;)V"
    },
    {
      "name": "a",
      "descriptor": "(Laqa;I)V",
      "javadoc": [
        "Called when the entity picks up an item."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        },
        {
          "index": 2,
          "name": "pQuantity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqe;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pTypeIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqf;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqf;Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;)V",
      "javadoc": [
        "Hint to AI tasks that we were attacked by the passed EntityLivingBase and should retaliate. Is not guaranteed to change our actual active target (for example if we are currently busy attacking someone else)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLivingBase"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;Lazg;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pLivingentityIn"
        },
        {
          "index": 2,
          "name": "pPredicateIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;Z)V"
    },
    {
      "name": "a",
      "descriptor": "(Laqx;)Laqb;",
      "parameters": [
        {
          "index": 1,
          "name": "pPoseIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPoseIn"
        },
        {
          "index": 2,
          "name": "pSizeIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Larg;)Larh;",
      "parameters": [
        {
          "index": 1,
          "name": "pAttribute"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbcv;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pItem"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lblx;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pItem"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lblx;Lblx;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbrx;Laqm;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lbmb;)Lbmb;"
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/serialization/Dynamic;)Larf;",
      "parameters": [
        {
          "index": 1,
          "name": "pDynamicIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcuw;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Ldci;Ldci;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ldcn;F)Ldcn;"
    },
    {
      "name": "a",
      "descriptor": "(Ldj$a;Ldcn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAnchor"
        },
        {
          "index": 2,
          "name": "pTarget"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;)V",
      "javadoc": [
        "Sets entity position to a supplied BlockPos plus a little offset"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;Z)V",
      "javadoc": [
        "Called when a record starts or stops playing. Used to make parrots start or stop partying."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pIsPartying"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgc$a;Li$a;)Ldcn;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;Laqf;Lbmb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Map;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/function/Predicate;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;Lfx;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lmd;Lmt;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lus;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ZLapk;)Lcyv$a;",
      "parameters": [
        {
          "index": 1,
          "name": "pAttackedRecently"
        },
        {
          "index": 2,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "aS",
      "descriptor": "()V",
      "javadoc": [
        "Marks this entity's velocity as changed, so that it can be re-synced with the client later"
      ]
    },
    {
      "name": "aT",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if other Entities should be prevented from moving through this Entity."
      ]
    },
    {
      "name": "aU",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should push and be pushed by other entities when colliding."
      ]
    },
    {
      "name": "aX",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the entity has not been {@link #removed}."
      ]
    },
    {
      "name": "aY",
      "descriptor": "()Z",
      "javadoc": [
        "Checks if this entity is inside of an opaque block"
      ]
    },
    {
      "name": "aa",
      "descriptor": "()V",
      "javadoc": [
        "Called by the /kill command."
      ]
    },
    {
      "name": "ag",
      "descriptor": "()V",
      "javadoc": [
        "Gets called every tick from main Entity class"
      ]
    },
    {
      "name": "an",
      "descriptor": "()V",
      "javadoc": [
        "sets the dead flag. Used when you fall off the bottom of the world."
      ]
    },
    {
      "name": "ar",
      "descriptor": "()F"
    },
    {
      "name": "b",
      "descriptor": "(F)V",
      "javadoc": [
        "Heal living entity (param: amount of half-hearts)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pHealAmount"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(FF)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laot;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lapk;F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        },
        {
          "index": 2,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laps;)Lapu;",
      "javadoc": [
        "returns the PotionEffect for the supplied Potion if it is active, null otherwise."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPotionIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lapu;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEffect"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqf;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqf;Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPoseIn"
        },
        {
          "index": 2,
          "name": "pSizeIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Larg;)D",
      "parameters": [
        {
          "index": 1,
          "name": "pAttribute"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbmb;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/util/Map;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bC",
      "descriptor": "()Z"
    },
    {
      "name": "bK",
      "descriptor": "()F"
    },
    {
      "name": "bY",
      "descriptor": "()Z"
    },
    {
      "name": "ba",
      "descriptor": "()V",
      "javadoc": [
        "Handles updating while riding another entity"
      ]
    },
    {
      "name": "bm",
      "descriptor": "()V",
      "javadoc": [
        "Setups the entity to do the hurt animation. Only used by packets in multiplayer."
      ]
    },
    {
      "name": "bn",
      "descriptor": "()Ljava/lang/Iterable;"
    },
    {
      "name": "bo",
      "descriptor": "()Ljava/lang/Iterable;"
    },
    {
      "name": "bt",
      "descriptor": "()Z"
    },
    {
      "name": "c",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHealth"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        },
        {
          "index": 2,
          "name": "pValue"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lael;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pFluidTag"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lapk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lapk;F)F",
      "javadoc": [
        "Reduces damage, depending on armor"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laps;)Lapu;",
      "javadoc": [
        "Removes the given potion effect from the active potion map and returns it. Does not call cleanup callbacks for the end of the potion effect."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPotioneffectin"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lapu;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEffectInstanceIn"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laqf;)V"
    },
    {
      "name": "c",
      "descriptor": "(Laqf;Lbmb;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laqm;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pTarget"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Larg;)D",
      "parameters": [
        {
          "index": 1,
          "name": "pAttribute"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbmb;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lfx;Lceh;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pState"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ljava/util/Collection;)Z",
      "javadoc": [
        "Returns true if all of the potion effects in the specified collection are ambient."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pPotionEffects"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pGrounded"
        }
      ]
    },
    {
      "name": "cJ",
      "descriptor": "()Larf;"
    },
    {
      "name": "cK",
      "descriptor": "()Larf$b;"
    },
    {
      "name": "cL",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "cM",
      "descriptor": "()Z"
    },
    {
      "name": "cN",
      "descriptor": "()Z"
    },
    {
      "name": "cO",
      "descriptor": "()V"
    },
    {
      "name": "cP",
      "descriptor": "()Z"
    },
    {
      "name": "cQ",
      "descriptor": "()V"
    },
    {
      "name": "cR",
      "descriptor": "()V"
    },
    {
      "name": "cS",
      "descriptor": "()F"
    },
    {
      "name": "cT",
      "descriptor": "()Z"
    },
    {
      "name": "cU",
      "descriptor": "()V",
      "javadoc": [
        "handles entity death timer, experience orb and particle creation"
      ]
    },
    {
      "name": "cV",
      "descriptor": "()Z",
      "javadoc": [
        "Entity won't drop items or experience points if this returns false"
      ]
    },
    {
      "name": "cW",
      "descriptor": "()Z"
    },
    {
      "name": "cX",
      "descriptor": "()Z",
      "javadoc": [
        "Only use is to identify if class is an instance of player for experience dropping"
      ]
    },
    {
      "name": "cY",
      "descriptor": "()Ljava/util/Random;"
    },
    {
      "name": "cZ",
      "descriptor": "()Laqm;"
    },
    {
      "name": "c_",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should move as if it were on a ladder (either because it's actually on a ladder, or for AI reasons)"
      ]
    },
    {
      "name": "cd",
      "descriptor": "()Ldci;",
      "javadoc": [
        "Gets the bounding box of this Entity, adjusted to take auxiliary entities into account (e.g. the tile contained by a minecart, such as a command block)."
      ]
    },
    {
      "name": "d",
      "descriptor": "(Laot;)V"
    },
    {
      "name": "d",
      "descriptor": "(Lapk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lapk;F)F",
      "javadoc": [
        "Reduces damage, depending on potions"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Laps;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEffectIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lapu;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPotioneffectIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Laqf;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbfw;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbmb;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pItemStackIn"
        }
      ]
    },
    {
      "name": "dA",
      "descriptor": "()V",
      "javadoc": [
        "Updates the arm swing progress counters and animation progress"
      ]
    },
    {
      "name": "dB",
      "descriptor": "()Lari;"
    },
    {
      "name": "dC",
      "descriptor": "()Laqq;"
    },
    {
      "name": "dD",
      "descriptor": "()Lbmb;"
    },
    {
      "name": "dE",
      "descriptor": "()Lbmb;"
    },
    {
      "name": "dF",
      "descriptor": "()F"
    },
    {
      "name": "dG",
      "descriptor": "()F",
      "javadoc": [
        "Returns the volume for the sounds this mob makes."
      ]
    },
    {
      "name": "dH",
      "descriptor": "()F",
      "javadoc": [
        "Gets the pitch of living sounds in living entities."
      ]
    },
    {
      "name": "dI",
      "descriptor": "()Z",
      "javadoc": [
        "Dead and sleeping entities cannot move"
      ]
    },
    {
      "name": "dJ",
      "descriptor": "()F"
    },
    {
      "name": "dK",
      "descriptor": "()V",
      "javadoc": [
        "Causes this entity to do an upwards motion (jumping)."
      ]
    },
    {
      "name": "dL",
      "descriptor": "()V"
    },
    {
      "name": "dM",
      "descriptor": "()F"
    },
    {
      "name": "dN",
      "descriptor": "()F",
      "javadoc": [
        "the movespeed used for the new AI system"
      ]
    },
    {
      "name": "dO",
      "descriptor": "()Z"
    },
    {
      "name": "dP",
      "descriptor": "()V"
    },
    {
      "name": "dQ",
      "descriptor": "()V"
    },
    {
      "name": "dR",
      "descriptor": "()Z"
    },
    {
      "name": "dS",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether the entity is in a server world"
      ]
    },
    {
      "name": "dT",
      "descriptor": "()F",
      "javadoc": [
        "Returns the amount of health added by the Absorption effect."
      ]
    },
    {
      "name": "dU",
      "descriptor": "()V"
    },
    {
      "name": "dV",
      "descriptor": "()Laqi;"
    },
    {
      "name": "dW",
      "descriptor": "()Z"
    },
    {
      "name": "dX",
      "descriptor": "()Laot;"
    },
    {
      "name": "dY",
      "descriptor": "()Lbmb;"
    },
    {
      "name": "dZ",
      "descriptor": "()I"
    },
    {
      "name": "da",
      "descriptor": "()I"
    },
    {
      "name": "db",
      "descriptor": "()Laqm;"
    },
    {
      "name": "dc",
      "descriptor": "()I"
    },
    {
      "name": "dd",
      "descriptor": "()I"
    },
    {
      "name": "de",
      "descriptor": "()V"
    },
    {
      "name": "df",
      "descriptor": "()V",
      "javadoc": [
        "Resets the potion effect color and ambience metadata values"
      ]
    },
    {
      "name": "dg",
      "descriptor": "()Z"
    },
    {
      "name": "dh",
      "descriptor": "()Ljava/util/Collection;"
    },
    {
      "name": "di",
      "descriptor": "()Ljava/util/Map;"
    },
    {
      "name": "dj",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity is undead."
      ]
    },
    {
      "name": "dk",
      "descriptor": "()F"
    },
    {
      "name": "dl",
      "descriptor": "()Z"
    },
    {
      "name": "dm",
      "descriptor": "()Lapk;"
    },
    {
      "name": "dn",
      "descriptor": "()V"
    },
    {
      "name": "do",
      "descriptor": "()V"
    },
    {
      "name": "dp",
      "descriptor": "()Lvk;"
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "dr",
      "descriptor": "()Ljava/util/Optional;"
    },
    {
      "name": "ds",
      "descriptor": "()Lceh;"
    },
    {
      "name": "dt",
      "descriptor": "()V",
      "javadoc": [
        "Plays the fall sound for the block landed on"
      ]
    },
    {
      "name": "du",
      "descriptor": "()I",
      "javadoc": [
        "Returns the current armor value as determined by a call to InventoryPlayer.getTotalArmorValue"
      ]
    },
    {
      "name": "dv",
      "descriptor": "()Lapj;",
      "javadoc": [
        "1.8.9"
      ]
    },
    {
      "name": "dw",
      "descriptor": "()Laqm;"
    },
    {
      "name": "dx",
      "descriptor": "()F",
      "javadoc": [
        "Returns the maximum health of the entity (what it is able to regenerate up to, what it spawned with, etc)"
      ]
    },
    {
      "name": "dy",
      "descriptor": "()I",
      "javadoc": [
        "counts the amount of arrows stuck in the entity. getting hit by arrows increases this, used in rendering"
      ]
    },
    {
      "name": "dz",
      "descriptor": "()I"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(FF)I",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lapk;F)V",
      "javadoc": [
        "Deals damage to the entity. This will take the armor of the entity into consideration before damaging the health bar."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSrc"
        },
        {
          "index": 2,
          "name": "pDamageAmount"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lapu;)V"
    },
    {
      "name": "e",
      "descriptor": "(Laqf;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lbfw;)V"
    },
    {
      "name": "e",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pItemstackIn"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lfx;)V"
    },
    {
      "name": "ea",
      "descriptor": "()I"
    },
    {
      "name": "eb",
      "descriptor": "()V"
    },
    {
      "name": "ec",
      "descriptor": "()V"
    },
    {
      "name": "ed",
      "descriptor": "()Z"
    },
    {
      "name": "ee",
      "descriptor": "()Z"
    },
    {
      "name": "ef",
      "descriptor": "()Z"
    },
    {
      "name": "eg",
      "descriptor": "()I"
    },
    {
      "name": "eh",
      "descriptor": "()Z",
      "javadoc": [
        "Returns false if the entity is an armor stand. Returns true for all other entity living bases."
      ]
    },
    {
      "name": "ei",
      "descriptor": "()Z"
    },
    {
      "name": "ej",
      "descriptor": "()Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "ek",
      "descriptor": "()Ljava/util/Optional;"
    },
    {
      "name": "el",
      "descriptor": "()V"
    },
    {
      "name": "em",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether player is sleeping or not"
      ]
    },
    {
      "name": "en",
      "descriptor": "()V"
    },
    {
      "name": "eo",
      "descriptor": "()Lgc;",
      "javadoc": [
        "gets the Direction for the camera if this entity is sleeping"
      ]
    },
    {
      "name": "f",
      "descriptor": "(FF)F"
    },
    {
      "name": "f",
      "descriptor": "(Lapk;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lapu;)V"
    },
    {
      "name": "f",
      "descriptor": "(Laqf;)B"
    },
    {
      "name": "f",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntitySource"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Laqx;)Ldci;",
      "parameters": [
        {
          "index": 1,
          "name": "pPose"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbmb;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pShootable"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lfx;)V"
    },
    {
      "name": "g",
      "descriptor": "()V",
      "javadoc": [
        "Sends an ENTER_COMBAT packet to the client"
      ]
    },
    {
      "name": "g",
      "descriptor": "(Lapk;)Z",
      "javadoc": [
        "Determines whether the entity can block the damage source based on the damage source's location, whether the damage source is blockable, and whether the entity is blocking."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Laqm;)V"
    },
    {
      "name": "g",
      "descriptor": "(Lbmb;)V",
      "javadoc": [
        "Renders broken item particles using the given ItemStack"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Ldcn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pTravelVector"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Lfx;)Ldcn;"
    },
    {
      "name": "g",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set sprinting switch for Entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSprinting"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "()V",
      "javadoc": [
        "Sends an END_COMBAT packet to the client"
      ]
    },
    {
      "name": "h",
      "descriptor": "(F)F",
      "javadoc": [
        "Gets the current yaw of the entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Laqm;)V"
    },
    {
      "name": "h",
      "descriptor": "(Ldcn;)Ldcn;"
    },
    {
      "name": "h",
      "descriptor": "(Lfx;)Ljava/lang/Boolean;"
    },
    {
      "name": "i",
      "descriptor": "(Laqa;)V",
      "javadoc": [
        "Applies a velocity to the entities, to push them away from eachother."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Laqm;)V"
    },
    {
      "name": "i",
      "descriptor": "(Ldcn;)Ldcn;"
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "j",
      "descriptor": "(Laqm;)V"
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "l",
      "descriptor": "()V",
      "javadoc": [
        "Dismounts this entity from the entity it is riding."
      ]
    },
    {
      "name": "l",
      "descriptor": "(I)I",
      "javadoc": [
        "Decrements the entity's air supply when underwater"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAir"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "()I",
      "javadoc": [
        "Returns an integer indicating the end point of the swing animation, used by {@link #swingProgress} to provide a progress indicator. Takes dig speed enchantments into account."
      ]
    },
    {
      "name": "m",
      "descriptor": "(F)V",
      "javadoc": [
        "Sets the head's yaw rotation of the entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pRotation"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "(I)I",
      "parameters": [
        {
          "index": 1,
          "name": "pCurrentAir"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(F)V",
      "javadoc": [
        "Set the render yaw offset"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pOffset"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pIdleTimeIn"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "o",
      "descriptor": "(I)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pHeightIn"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pJumping"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "()V"
    },
    {
      "name": "p",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "(I)V",
      "javadoc": [
        "sets the amount of arrows stuck in the entity. used for rendering those"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "()Ljava/util/Map;"
    },
    {
      "name": "q",
      "descriptor": "(F)V",
      "javadoc": [
        "set the movespeed used for the new AI system"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSpeedIn"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "(I)V"
    },
    {
      "name": "r",
      "descriptor": "()V",
      "javadoc": [
        "Called each tick. Updates state for the elytra."
      ]
    },
    {
      "name": "r",
      "descriptor": "(F)F",
      "javadoc": [
        "Gets the progression of the swing animation, ranges from 0.0 to 1.0."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTickTime"
        }
      ]
    },
    {
      "name": "r",
      "descriptor": "(I)V"
    },
    {
      "name": "s",
      "descriptor": "()V",
      "javadoc": [
        "Used for when item use count runs out, ie: eating completed"
      ]
    },
    {
      "name": "s",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "t",
      "descriptor": "()V"
    },
    {
      "name": "t",
      "descriptor": "(F)F"
    },
    {
      "name": "u",
      "descriptor": "()Z"
    },
    {
      "name": "v",
      "descriptor": "()V"
    },
    {
      "name": "w_",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "x",
      "descriptor": "()Z"
    },
    {
      "name": "z",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        }
      ]
    }
  ]
}