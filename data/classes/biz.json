{
  "name": "biz",
  "fields": [
    {
      "name": "bS",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "bT",
      "descriptor": "Lwf;"
    },
    {
      "name": "bU",
      "descriptor": "Lwf;"
    },
    {
      "name": "bV",
      "descriptor": "Lwf;"
    },
    {
      "name": "bW",
      "descriptor": "Ljava/util/UUID;"
    },
    {
      "name": "bX",
      "descriptor": "Laus;"
    },
    {
      "name": "bY",
      "descriptor": "I"
    },
    {
      "name": "bZ",
      "descriptor": "F"
    },
    {
      "name": "ca",
      "descriptor": "I"
    },
    {
      "name": "cb",
      "descriptor": "F"
    },
    {
      "name": "cc",
      "descriptor": "F"
    },
    {
      "name": "cd",
      "descriptor": "I"
    },
    {
      "name": "ce",
      "descriptor": "F"
    },
    {
      "name": "cf",
      "descriptor": "F"
    },
    {
      "name": "cg",
      "descriptor": "D"
    },
    {
      "name": "ch",
      "descriptor": "Lasf;"
    },
    {
      "name": "ci",
      "descriptor": "Z"
    },
    {
      "name": "e",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "Q",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "(Lafd;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lary;)V",
      "javadoc": [
        "Gives armor or weapon for entity based on given DifficultyInstance"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDifficulty"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lasp;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lasp;IZ)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pLooting"
        },
        {
          "index": 3,
          "name": "pRecentlyHit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        },
        {
          "index": 2,
          "name": "pForce"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;F)V",
      "javadoc": [
        "Attack the specified entity using a ranged attack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pTarget"
        },
        {
          "index": 2,
          "name": "pDistanceFactor"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;Lbqp;Lbkt;F)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;Lbqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pCandidate"
        },
        {
          "index": 2,
          "name": "pExisting"
        },
        {
          "index": 3,
          "name": "pSlotType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrd;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/serialization/Dynamic;)Lauo;",
      "parameters": [
        {
          "index": 1,
          "name": "pDynamic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lwf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set whether this zombie is a child."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pChildZombie"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(Latf;I)Latf;"
    },
    {
      "name": "b",
      "descriptor": "(Latj;Lbwq;Latx;Lgg;Ljava/util/Random;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lauf;Latg;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPose"
        },
        {
          "index": 2,
          "name": "pSize"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbhc;)V",
      "javadoc": [
        "Tests if this entity should pickup a weapon or an armor. Entity drops current weapon or armor if the new one is better."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pItemEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;Larz;)Lasa;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pIsCharging"
        }
      ]
    },
    {
      "name": "bl",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y offset from the entity's position for any entity riding this one."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Labr;)V"
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Latk;Lbqp;)V"
    },
    {
      "name": "d",
      "descriptor": "(Lbkd;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "do",
      "descriptor": "()Lauo;"
    },
    {
      "name": "dp",
      "descriptor": "()Lauo$b;"
    },
    {
      "name": "eX",
      "descriptor": "()V"
    },
    {
      "name": "fB",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "fC",
      "descriptor": "()Z"
    },
    {
      "name": "fD",
      "descriptor": "()Lbqp;"
    },
    {
      "name": "fE",
      "descriptor": "()Z"
    },
    {
      "name": "fF",
      "descriptor": "()Lart;"
    },
    {
      "name": "fw",
      "descriptor": "()Lbjb;"
    },
    {
      "name": "fy",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "m",
      "descriptor": "(Lbqp;)Lbqp;"
    },
    {
      "name": "n",
      "descriptor": "()Z"
    },
    {
      "name": "n",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "o",
      "descriptor": "(Lbqp;)V"
    },
    {
      "name": "p",
      "descriptor": "(Lbqp;)V"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "q",
      "descriptor": "(Lbqp;)Z"
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "w",
      "descriptor": "(Z)V"
    },
    {
      "name": "w_",
      "descriptor": "()Z",
      "javadoc": [
        "If Animal, checks if the age timer is negative"
      ]
    },
    {
      "name": "x",
      "descriptor": "(Z)V"
    }
  ]
}