{
  "name": "bfl",
  "fields": [
    {
      "name": "ci",
      "descriptor": "I"
    },
    {
      "name": "cj",
      "descriptor": "I"
    },
    {
      "name": "ck",
      "descriptor": "Lbte;"
    },
    {
      "name": "cl",
      "descriptor": "Lwf;"
    },
    {
      "name": "cm",
      "descriptor": "Lwf;"
    },
    {
      "name": "cn",
      "descriptor": "Lwf;"
    },
    {
      "name": "co",
      "descriptor": "Z"
    },
    {
      "name": "cp",
      "descriptor": "Lbfl;"
    },
    {
      "name": "cq",
      "descriptor": "Lbfl;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "C",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "didSpit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FFLasp;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latd;)Latd;"
    },
    {
      "name": "a",
      "descriptor": "(Lart;)V",
      "javadoc": [
        "Called by InventoryBasic.onInventoryChanged() on a array that is never filled."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "invBasic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;F)V",
      "javadoc": [
        "Attack the specified entity using a ranged attack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "target"
        },
        {
          "index": 2,
          "name": "distanceFactor"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbdx;)Z",
      "javadoc": [
        "Returns true if the mob is currently able to mate with the specified mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "otherAnimal"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfl;)V",
      "parameters": [
        {
          "index": 1,
          "name": "caravanHead"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbpl;)V",
      "parameters": [
        {
          "index": 1,
          "name": "color"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "difficulty"
        },
        {
          "index": 3,
          "name": "reason"
        },
        {
          "index": 4,
          "name": "spawnData"
        },
        {
          "index": 5,
          "name": "dataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(Labr;Latd;)Lbfl;"
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;Lbqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "stack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "block"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "bl",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y offset from the entity's position for any entity riding this one."
      ]
    },
    {
      "name": "c",
      "descriptor": "()Z"
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;",
      "parameters": [
        {
          "index": 1,
          "name": "damageSource"
        }
      ]
    },
    {
      "name": "cu",
      "descriptor": "()Ldna;"
    },
    {
      "name": "eq",
      "descriptor": "()Z",
      "javadoc": [
        "Dead and sleeping entities cannot move"
      ]
    },
    {
      "name": "fD",
      "descriptor": "()I"
    },
    {
      "name": "fN",
      "descriptor": "()V"
    },
    {
      "name": "fP",
      "descriptor": "()Lafd;"
    },
    {
      "name": "fQ",
      "descriptor": "()Lafd;"
    },
    {
      "name": "fS",
      "descriptor": "()I"
    },
    {
      "name": "fT",
      "descriptor": "()V"
    },
    {
      "name": "fU",
      "descriptor": "()Z"
    },
    {
      "name": "fV",
      "descriptor": "()V"
    },
    {
      "name": "fc",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if all the conditions for steering the entity are met. For pigs, this is true if it is being ridden by a player and the player is holding a carrot-on-a-stick"
      ]
    },
    {
      "name": "fu",
      "descriptor": "()D"
    },
    {
      "name": "fw",
      "descriptor": "()I"
    },
    {
      "name": "fx",
      "descriptor": "()V"
    },
    {
      "name": "gb",
      "descriptor": "()Z"
    },
    {
      "name": "gc",
      "descriptor": "()Z"
    },
    {
      "name": "gd",
      "descriptor": "()Z"
    },
    {
      "name": "ge",
      "descriptor": "()I"
    },
    {
      "name": "gf",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "gg",
      "descriptor": "()I"
    },
    {
      "name": "gh",
      "descriptor": "()Lbpl;"
    },
    {
      "name": "gi",
      "descriptor": "()Lbfl;"
    },
    {
      "name": "gj",
      "descriptor": "()V"
    },
    {
      "name": "gk",
      "descriptor": "()Z"
    },
    {
      "name": "gl",
      "descriptor": "()Z"
    },
    {
      "name": "gm",
      "descriptor": "()Lbfl;"
    },
    {
      "name": "gn",
      "descriptor": "()V"
    },
    {
      "name": "i",
      "descriptor": "(Latf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "passenger"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "(Latt;)V",
      "parameters": [
        {
          "index": 1,
          "name": "target"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "(Lbqp;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(Lbqp;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "stack"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "(Lbqp;)Lbpl;"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "v",
      "descriptor": "()V"
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "x",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "variant"
        }
      ]
    },
    {
      "name": "y",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "strength"
        }
      ]
    }
  ]
}