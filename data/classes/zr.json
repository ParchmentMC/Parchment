{
  "name": "zr",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcom/mojang/datafixers/util/Either;"
    },
    {
      "name": "b",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "c",
      "descriptor": "Lcom/mojang/datafixers/util/Either;"
    },
    {
      "name": "d",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "e",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "f",
      "descriptor": "[Lzr$b;"
    },
    {
      "name": "g",
      "descriptor": "Ljava/util/concurrent/atomic/AtomicReferenceArray;"
    },
    {
      "name": "h",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;",
      "javadoc": [
        "A future that returns the chunk if it is a border chunk, {@link net.minecraft.world.server.ChunkHolder.IChunkLoadingError#UNLOADED} otherwise."
      ]
    },
    {
      "name": "i",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;",
      "javadoc": [
        "A future that returns the chunk if it is a ticking chunk, {@link net.minecraft.world.server.ChunkHolder.IChunkLoadingError#UNLOADED} otherwise."
      ]
    },
    {
      "name": "j",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;",
      "javadoc": [
        "A future that returns the chunk if it is an entity ticking chunk, {@link net.minecraft.world.server.ChunkHolder.IChunkLoadingError#UNLOADED} otherwise."
      ]
    },
    {
      "name": "k",
      "descriptor": "Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "l",
      "descriptor": "I"
    },
    {
      "name": "m",
      "descriptor": "I"
    },
    {
      "name": "n",
      "descriptor": "I"
    },
    {
      "name": "o",
      "descriptor": "Lbrd;"
    },
    {
      "name": "p",
      "descriptor": "Z"
    },
    {
      "name": "q",
      "descriptor": "[Lit/unimi/dsi/fastutil/shorts/ShortSet;"
    },
    {
      "name": "r",
      "descriptor": "I"
    },
    {
      "name": "s",
      "descriptor": "I"
    },
    {
      "name": "t",
      "descriptor": "Lcuo;"
    },
    {
      "name": "u",
      "descriptor": "Lzr$c;"
    },
    {
      "name": "v",
      "descriptor": "Lzr$d;"
    },
    {
      "name": "w",
      "descriptor": "Z"
    },
    {
      "name": "x",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbrd;ILcuo;Lzr$c;Lzr$d;)V"
    },
    {
      "name": "a",
      "descriptor": "()Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPosIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lceh;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbsf;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pType"
        },
        {
          "index": 2,
          "name": "pSectionY"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcfw;)Lcfw;"
    },
    {
      "name": "a",
      "descriptor": "(Lcfw;Lcom/mojang/datafixers/util/Either;)Lcfw;"
    },
    {
      "name": "a",
      "descriptor": "(Lcfw;Lzr$a;)Lcfw;"
    },
    {
      "name": "a",
      "descriptor": "(Lcga;)Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "a",
      "descriptor": "(Lcga;Lzs;)Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "a",
      "descriptor": "(Lcgg;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lcgh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pChunkIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/concurrent/CompletableFuture;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEitherChunk"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Loj;Laah;)V"
    },
    {
      "name": "a",
      "descriptor": "(Loj;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPacketIn"
        },
        {
          "index": 2,
          "name": "pBoundaryOnly"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lzr;)Lbrd;"
    },
    {
      "name": "a",
      "descriptor": "(Lzs;)V",
      "javadoc": [
        "Updates chunk futures based on current chunk level"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pChunkManagerIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lzs;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;"
    },
    {
      "name": "b",
      "descriptor": "()Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "b",
      "descriptor": "(I)Lcga;",
      "parameters": [
        {
          "index": 0,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbrx;Lfx;Lceh;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lcga;)Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "c",
      "descriptor": "()Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "c",
      "descriptor": "(I)Lzr$b;",
      "parameters": [
        {
          "index": 0,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Lcgh;"
    },
    {
      "name": "d",
      "descriptor": "(I)V"
    },
    {
      "name": "e",
      "descriptor": "()Lcga;"
    },
    {
      "name": "f",
      "descriptor": "()Lcfw;"
    },
    {
      "name": "g",
      "descriptor": "()Ljava/util/concurrent/CompletableFuture;"
    },
    {
      "name": "h",
      "descriptor": "()Lzr$b;"
    },
    {
      "name": "i",
      "descriptor": "()Lbrd;"
    },
    {
      "name": "j",
      "descriptor": "()I"
    },
    {
      "name": "k",
      "descriptor": "()I"
    },
    {
      "name": "l",
      "descriptor": "()Z"
    },
    {
      "name": "m",
      "descriptor": "()V"
    }
  ]
}