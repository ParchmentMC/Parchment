{
  "name": "byj",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcfe;"
    },
    {
      "name": "b",
      "descriptor": "Lddh;"
    },
    {
      "name": "c",
      "descriptor": "Lddh;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lceg$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbrc;Lfx;Lceh;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStateIn"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbzm;)Lceh;",
      "javadoc": [
        "Returns the blockstate with the given rotation from the passed blockstate. If inapplicable, returns the passed blockstate.",
        "@deprecated call via {@link IBlockState#withRotation(Rotation)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pRot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lgc;Lceh;Lbry;Lfx;Lfx;)Lceh;",
      "javadoc": [
        "Update the provided state given the provided neighbor facing and neighbor state, returning a new state.",
        "For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.",
        "Note that this method should ideally consider only the specific face passed in."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStateIn"
        },
        {
          "index": 2,
          "name": "pFacing"
        },
        {
          "index": 3,
          "name": "pFacingState"
        },
        {
          "index": 4,
          "name": "pLevelIn"
        },
        {
          "index": 5,
          "name": "pCurrentPos"
        },
        {
          "index": 6,
          "name": "pFacingPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcei$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBuilder"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;Laag;Lfx;Ljava/util/Random;)V",
      "javadoc": [
        "Performs a random tick on a block."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRandom"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;Lbrc;Lfx;Ldcs;)Lddh;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pContext"
        }
      ]
    }
  ]
}