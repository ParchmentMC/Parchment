{
  "name": "cju",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "b",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "I"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "J"
    },
    {
      "name": "h",
      "descriptor": "I"
    },
    {
      "name": "i",
      "descriptor": "Lgg;"
    },
    {
      "name": "j",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "Y_",
      "descriptor": "()Lpy;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "Z_",
      "descriptor": "()Lna;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "partialTicks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Labr;Ldna;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lgg;)Lgg;"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lgg;Lcvf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Latf;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbvt;Lgg;IZ)Lgg;",
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "pos"
        },
        {
          "index": 2,
          "name": "radius"
        },
        {
          "index": 3,
          "name": "allowBedrock"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Ldna;)Lcmw;",
      "parameters": [
        {
          "index": 0,
          "name": "level"
        },
        {
          "index": 1,
          "name": "vec3"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;)Lgg;"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Latf;Lcju;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Lcju;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lcmw;)Lgg;",
      "parameters": [
        {
          "index": 0,
          "name": "chunk"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "exitPortal"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgl;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "face"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V"
    },
    {
      "name": "a_",
      "descriptor": "(II)Z",
      "javadoc": [
        "See {@link Block#eventReceived} for more information. This must return true serverside before it is called clientside."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "id"
        },
        {
          "index": 2,
          "name": "type"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "partialTicks"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Labr;Lgg;)Ldna;"
    },
    {
      "name": "b",
      "descriptor": "(Lbwp;Lgg;Lcks;Lcju;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lna;)Lna;",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbwp;Lgg;Lcks;Lcju;)V"
    },
    {
      "name": "d",
      "descriptor": "()Z"
    },
    {
      "name": "f",
      "descriptor": "()Z"
    },
    {
      "name": "g",
      "descriptor": "()I"
    }
  ]
}