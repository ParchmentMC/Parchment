{
  "name": "ae",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lae;"
    },
    {
      "name": "b",
      "descriptor": "Lan;"
    },
    {
      "name": "c",
      "descriptor": "Lah;"
    },
    {
      "name": "d",
      "descriptor": "Lww;"
    },
    {
      "name": "e",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "f",
      "descriptor": "[[Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "Ljava/util/Set;"
    },
    {
      "name": "h",
      "descriptor": "Los;"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lww;Lae;Lan;Lah;Ljava/util/Map;[[Ljava/lang/String;)V"
    },
    {
      "name": "a",
      "descriptor": "()Lae$a;",
      "javadoc": [
        "Creates a new advancement builder with the data from this advancement"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lae;)V",
      "javadoc": [
        "Add the given {@code Advancement} as a child of this {@code Advancement}.",
        "",
        "@see #getParent()"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAdvancement"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Los;Lpc;)Lpc;"
    },
    {
      "name": "b",
      "descriptor": "()Lae;",
      "javadoc": [
        "Get the {@code Advancement} that is this {@code Advancement}'s parent. This determines the tree structure that appears in the {@linkplain GuiScreenAdvancements GUI}.",
        "",
        "@return the parent {@code Advancement} of this {@code Advancement}, or {@code null} to signify that this {@code Advancement} is a root with no parent."
      ]
    },
    {
      "name": "c",
      "descriptor": "()Lan;",
      "javadoc": [
        "Get information that defines this {@code Advancement}'s appearance in GUIs.",
        "",
        "@return information that defines this {@code Advancement}'s appearance in GUIs. If {@code null}, signifies an invisible {@code Advancement}."
      ]
    },
    {
      "name": "d",
      "descriptor": "()Lah;"
    },
    {
      "name": "e",
      "descriptor": "()Ljava/lang/Iterable;",
      "javadoc": [
        "Get the children of this {@code Advancement}.",
        "",
        "@return an {@code Iterable} of this {@code Advancement}'s children.",
        "@see #getParent()"
      ]
    },
    {
      "name": "equals",
      "descriptor": "(Ljava/lang/Object;)Z"
    },
    {
      "name": "f",
      "descriptor": "()Ljava/util/Map;",
      "javadoc": [
        "Get the {@link Criterion Criteria} used to decide the completion of this {@code Advancement}. Each key-value pair consists of a {@code Criterion} and its name.",
        "",
        "@return the criteria used to decide the completion of this {@code Advancement}",
        "@see #getRequirements()"
      ]
    },
    {
      "name": "g",
      "descriptor": "()I",
      "javadoc": [
        "Get how many requirements this {@code Advancement} has.",
        "",
        "@return {@code this.getRequirements().length}",
        "@see #getRequirements()"
      ]
    },
    {
      "name": "h",
      "descriptor": "()Lww;",
      "javadoc": [
        "Get this {@code Advancement}'s unique identifier.",
        "",
        "@return this {@code Advancement}'s unique identifier"
      ]
    },
    {
      "name": "hashCode",
      "descriptor": "()I"
    },
    {
      "name": "i",
      "descriptor": "()[[Ljava/lang/String;"
    },
    {
      "name": "j",
      "descriptor": "()Los;",
      "javadoc": [
        "Returns the {@code ITextComponent} that is shown in the chat message sent after this {@code Advancement} is completed.",
        "",
        "@return the {@code ITextComponent} that is shown in the chat message sent after this {@code Advancement} is completed. If this {@code Advancement} is {@linkplain #getDisplay() invisible}, then it consists simply of {@link #getId()}. Otherwise, it is the {@linkplain DisplayInfo#getTitle() title} inside square brackets, colored by the {@linkplain net.minecraft.advancements.FrameType#getFormat frame type}, and hovering over it shows the {@linkplain DisplayInfo#getDescription() description}."
      ]
    },
    {
      "name": "toString",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}