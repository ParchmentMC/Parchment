{
  "name": "bac",
  "fields": [
    {
      "name": "bo",
      "descriptor": "F"
    },
    {
      "name": "bp",
      "descriptor": "F"
    },
    {
      "name": "bq",
      "descriptor": "F"
    },
    {
      "name": "br",
      "descriptor": "F"
    },
    {
      "name": "bs",
      "descriptor": "F"
    },
    {
      "name": "bt",
      "descriptor": "I"
    },
    {
      "name": "bu",
      "descriptor": "Z"
    },
    {
      "name": "bv",
      "descriptor": "Lbon;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lapy;)Lapy;",
      "parameters": [
        {
          "index": 1,
          "name": "pWorld"
        },
        {
          "index": 2,
          "name": "pMate"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(FF)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laag;Lapy;)Lbac;",
      "parameters": [
        {
          "index": 1,
          "name": "pWorld"
        },
        {
          "index": 2,
          "name": "pMate"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPoseIn"
        },
        {
          "index": 2,
          "name": "pSizeIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlockIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbfw;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSourceIn"
        }
      ]
    },
    {
      "name": "eK",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "eL",
      "descriptor": "()Z",
      "javadoc": [
        "Determines if this chicken is a jokey with a zombie riding it."
      ]
    },
    {
      "name": "h",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "k",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPassenger"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "t",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets whether this chicken is a jockey or not."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pJockey"
        }
      ]
    }
  ]
}