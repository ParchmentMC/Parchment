{
  "name": "ir",
  "fields": [
    {
      "name": "a",
      "descriptor": "Ldlh$a;"
    },
    {
      "name": "b",
      "descriptor": "Ldlh$a;"
    },
    {
      "name": "c",
      "descriptor": "Ldlh$a;"
    },
    {
      "name": "d",
      "descriptor": "Ldlh$a;"
    },
    {
      "name": "e",
      "descriptor": "Ldlh$a;"
    },
    {
      "name": "f",
      "descriptor": "Ljava/util/Set;"
    },
    {
      "name": "g",
      "descriptor": "[F"
    },
    {
      "name": "h",
      "descriptor": "[F"
    },
    {
      "name": "i",
      "descriptor": "Ljava/util/Map;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "A",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "B",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "C",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "D",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "E",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "F",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "G",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "H",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "I",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "J",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "K",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "L",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "M",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "N",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "O",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "P",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "Q",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "R",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "S",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "T",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "U",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "V",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "W",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "X",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "Y",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "Z",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "a",
      "descriptor": "()Ldis$a;"
    },
    {
      "name": "a",
      "descriptor": "(Lbwo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwo;Ldjx;)Ljava/lang/Object;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        },
        {
          "index": 1,
          "name": "function"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwo;Ldla;)Ljava/lang/Object;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        },
        {
          "index": 1,
          "name": "condition"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwo;Ldmc;)Ldis$a;"
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "door"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbql;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "item"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbql;Lbql;Ldlh$a;)Ldis$a;",
      "javadoc": [
        "Drops the first item parameter always, and the second item parameter plus more of the first when the loot condition is met, applying fortune to only the second argument."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "itemConditional"
        },
        {
          "index": 2,
          "name": "withBonus"
        },
        {
          "index": 3,
          "name": "conditionBuilder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbwo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        },
        {
          "index": 2,
          "name": "drop"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbwo;Ldmc;)Ldis$a;"
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbzo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        },
        {
          "index": 2,
          "name": "silkTouchDrop"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbzo;[F)Ldis$a;",
      "javadoc": [
        "Used for all leaves, drops self with silk touch, otherwise drops the second Block param with the passed chances for fortune levels, adding in sticks."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "sapling"
        },
        {
          "index": 2,
          "name": "chances"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lclv;Ljava/lang/Comparable;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "property"
        },
        {
          "index": 2,
          "name": "value"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Ldis$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        },
        {
          "index": 2,
          "name": "table"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Ldjh$a;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "builder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Ldlh$a;Ldjh$a;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "conditionBuilder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Ljava/util/function/Function;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        },
        {
          "index": 2,
          "name": "factory"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/function/BiConsumer;)V"
    },
    {
      "name": "aA",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aB",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aC",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aD",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aE",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aF",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aG",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aH",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aI",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aJ",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aK",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aL",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aM",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aN",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aO",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aP",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aQ",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aR",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aS",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aT",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aU",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aV",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aW",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aX",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aa",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ab",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ac",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "accept",
      "descriptor": "(Ljava/lang/Object;)V"
    },
    {
      "name": "ad",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ae",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "af",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ag",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ah",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ai",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aj",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ak",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "al",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "am",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "an",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ao",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ap",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aq",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ar",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "as",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "at",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "au",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "av",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "aw",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ax",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "ay",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "az",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "b",
      "descriptor": "(Lbwo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "flowerPot"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;Lbql;)Ldis$a;",
      "javadoc": [
        "Creates a builder that drops the given IItemProvider in amounts between 0 and 3, based on the AGE property. Only used in vanilla for pumpkin and melon stems."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "stemFruit"
        },
        {
          "index": 1,
          "name": "item"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;Lbwo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "noSilkTouch"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "sheared"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;Lbzo;[F)Ldis$a;",
      "javadoc": [
        "Used for oak and dark oak, same as droppingWithChancesAndSticks but adding in apples."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "sapling"
        },
        {
          "index": 2,
          "name": "chances"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbzo;Ldjh$a;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "noShearAlternativeEntry"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbwo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "flower"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbzo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbzo;Lbql;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "stem"
        },
        {
          "index": 1,
          "name": "stemSeed"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbzo;Lbwo;)Ldis$a;",
      "javadoc": [
        "Creates a builder that drops the given IItemProvider in amounts between 0 and 2, most often 0. Only used in vanilla for huge mushroom blocks."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "item"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbzo;Lbzo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "vines"
        },
        {
          "index": 2,
          "name": "plant"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbzo;Ldjh$a;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        },
        {
          "index": 1,
          "name": "alternativeLootEntry"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbwo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "item"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbzo;)V",
      "parameters": [
        {
          "index": 1,
          "name": "block"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "slab"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "shulker"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "i",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "j",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "k",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "banner"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "nest"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "hive"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "o",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "block"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "q",
      "descriptor": "(Lbzo;)Ldis$a;",
      "parameters": [
        {
          "index": 0,
          "name": "sheared"
        }
      ]
    },
    {
      "name": "r",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "s",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "t",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "u",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "v",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "w",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "x",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "y",
      "descriptor": "(Lbzo;)Ldis$a;"
    },
    {
      "name": "z",
      "descriptor": "(Lbzo;)Ldis$a;"
    }
  ]
}