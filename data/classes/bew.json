{
  "name": "bew",
  "fields": [
    {
      "name": "bS",
      "descriptor": "Lbte;"
    },
    {
      "name": "bT",
      "descriptor": "Ljava/util/function/Predicate;"
    },
    {
      "name": "bV",
      "descriptor": "Lwf;"
    },
    {
      "name": "bW",
      "descriptor": "Lwf;"
    },
    {
      "name": "bX",
      "descriptor": "Lwf;"
    },
    {
      "name": "bY",
      "descriptor": "Lwf;"
    },
    {
      "name": "bZ",
      "descriptor": "Lwf;"
    },
    {
      "name": "ca",
      "descriptor": "Lwf;"
    },
    {
      "name": "cb",
      "descriptor": "I"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "J",
      "descriptor": "()I",
      "javadoc": [
        "Get number of ticks, at least during which the living entity will be silent."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Labr;Latd;)Latd;"
    },
    {
      "name": "a",
      "descriptor": "(Labr;Lats;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbew;)Ljava/util/Random;"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;)Lbbz;",
      "javadoc": [
        "Returns new PathNavigateGround instance"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbxd;Lary;Latx;Laul;Lna;)Laul;"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lbws;)F"
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ]
    },
    {
      "name": "aA",
      "descriptor": "()Lafd;"
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "az",
      "descriptor": "()F"
    },
    {
      "name": "b",
      "descriptor": "(Lbew;)Ljava/util/Random;"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V"
    },
    {
      "name": "c",
      "descriptor": "(Lasp;)Lafd;"
    },
    {
      "name": "c",
      "descriptor": "(Latj;Lbwq;Latx;Lgg;Ljava/util/Random;)Z"
    },
    {
      "name": "c",
      "descriptor": "(Lbew;)Z"
    },
    {
      "name": "ck",
      "descriptor": "()Z"
    },
    {
      "name": "d",
      "descriptor": "(F)V"
    },
    {
      "name": "dr",
      "descriptor": "()Z"
    },
    {
      "name": "dz",
      "descriptor": "()F"
    },
    {
      "name": "ek",
      "descriptor": "()Laty;"
    },
    {
      "name": "fD",
      "descriptor": "()Z"
    },
    {
      "name": "fE",
      "descriptor": "()Z"
    },
    {
      "name": "fv",
      "descriptor": "()Laut$a;"
    },
    {
      "name": "fw",
      "descriptor": "()Lgg;"
    },
    {
      "name": "fx",
      "descriptor": "()Lgg;"
    },
    {
      "name": "fy",
      "descriptor": "()Z"
    },
    {
      "name": "g",
      "descriptor": "(Ldna;)V"
    },
    {
      "name": "g",
      "descriptor": "(Lgg;)V"
    },
    {
      "name": "h",
      "descriptor": "(Lgg;)V"
    },
    {
      "name": "j",
      "descriptor": "(Latt;)Z"
    },
    {
      "name": "n",
      "descriptor": "()V"
    },
    {
      "name": "n",
      "descriptor": "(Lbqp;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ]
    },
    {
      "name": "p",
      "descriptor": "()Z"
    },
    {
      "name": "q",
      "descriptor": "()Lafd;"
    },
    {
      "name": "t",
      "descriptor": "()Z"
    },
    {
      "name": "u_",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "v",
      "descriptor": "()V"
    },
    {
      "name": "v",
      "descriptor": "(Z)V"
    },
    {
      "name": "v_",
      "descriptor": "()Lafd;"
    },
    {
      "name": "w",
      "descriptor": "(Z)V"
    },
    {
      "name": "x",
      "descriptor": "(Z)V"
    },
    {
      "name": "y",
      "descriptor": "(Z)V"
    }
  ]
}