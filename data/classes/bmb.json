{
  "name": "bmb",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcom/mojang/serialization/Codec;"
    },
    {
      "name": "b",
      "descriptor": "Lbmb;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/text/DecimalFormat;"
    },
    {
      "name": "d",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "e",
      "descriptor": "Lob;"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "I"
    },
    {
      "name": "h",
      "descriptor": "Lblx;"
    },
    {
      "name": "i",
      "descriptor": "Lmd;"
    },
    {
      "name": "j",
      "descriptor": "Z"
    },
    {
      "name": "k",
      "descriptor": "Laqa;",
      "javadoc": [
        "The entity the item is attached to, like an Item Frame."
      ]
    },
    {
      "name": "l",
      "descriptor": "Lcel;"
    },
    {
      "name": "m",
      "descriptor": "Z"
    },
    {
      "name": "n",
      "descriptor": "Lcel;"
    },
    {
      "name": "o",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbrw;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbrw;I)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lbrw;ILjava/util/Optional;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lmd;)V"
    },
    {
      "name": "A",
      "descriptor": "()Laqa;",
      "javadoc": [
        "For example it'll return a ItemFrameEntity if it is in an itemframe"
      ]
    },
    {
      "name": "B",
      "descriptor": "()I",
      "javadoc": [
        "Get this stack's repair cost, or 0 if no repair cost is defined."
      ]
    },
    {
      "name": "C",
      "descriptor": "()Lnr;",
      "javadoc": [
        "Get a ChatComponent for this Item's display name that shows this Item on hover"
      ]
    },
    {
      "name": "D",
      "descriptor": "()I"
    },
    {
      "name": "E",
      "descriptor": "()I"
    },
    {
      "name": "F",
      "descriptor": "()Z"
    },
    {
      "name": "G",
      "descriptor": "()Ladp;"
    },
    {
      "name": "H",
      "descriptor": "()Ladp;"
    },
    {
      "name": "I",
      "descriptor": "()V"
    },
    {
      "name": "J",
      "descriptor": "()I"
    },
    {
      "name": "a",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(I)Lbmb;",
      "javadoc": [
        "Splits off a stack of the given amount of this stack and reduces this stack by the amount."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILaqm;Ljava/util/function/Consumer;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        },
        {
          "index": 2,
          "name": "pEntityIn"
        },
        {
          "index": 3,
          "name": "pOnBroken"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILbmb$a;)Z"
    },
    {
      "name": "a",
      "descriptor": "(ILjava/util/Random;Laah;)Z",
      "javadoc": [
        "Attempts to damage the ItemStack with par1 amount of damage, If the ItemStack has the Unbreaking enchantment there is a chance for each point of damage to be negated. Returns true if it takes more damage than getMaxDamage(). Returns false otherwise or if the ItemStack can't be damaged or if all points of damage are negated."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAmount"
        },
        {
          "index": 2,
          "name": "pRand"
        },
        {
          "index": 3,
          "name": "pDamager"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laen;Lcel;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqf;)Lcom/google/common/collect/Multimap;",
      "javadoc": [
        "Gets the attribute modifiers for this ItemStack.",
        "Will check for an NBT tag list containing modifiers for the stack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEquipmentSlot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqm;Lbfw;)V",
      "javadoc": [
        "Calls the delegated method to the Item to damage the incoming Entity, and if necessary, triggers a stats increase."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityIn"
        },
        {
          "index": 2,
          "name": "pPlayerIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Larg;Larj;Laqf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAttributeName"
        },
        {
          "index": 2,
          "name": "pModifier"
        },
        {
          "index": 3,
          "name": "pEquipmentSlot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Laqm;Laot;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayerIn"
        },
        {
          "index": 2,
          "name": "pEntityIn"
        },
        {
          "index": 3,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Lbnl;)Ljava/util/List;",
      "javadoc": [
        "Return a list of strings containing information about the item"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayerIn"
        },
        {
          "index": 2,
          "name": "pAdvanced"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb$a;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "compares ItemStack argument to the instance ItemStack returns true if the Items contained in both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pOther"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pStackA"
        },
        {
          "index": 1,
          "name": "pStackB"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lboa;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pContext"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbps;I)V",
      "javadoc": [
        "Adds an enchantment with a desired level on the ItemStack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEnch"
        },
        {
          "index": 2,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Laqa;IZ)V",
      "javadoc": [
        "Called each tick as long the ItemStack in on player inventory. Used to progress the pickup animation and update maps."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pEntityIn"
        },
        {
          "index": 3,
          "name": "pInventorySlot"
        },
        {
          "index": 4,
          "name": "pIsCurrentItem"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Laqm;)Lbmb;",
      "javadoc": [
        "Called when the item in use count reach 0, e.g. item food eaten. Return the new ItemStack. Args : world, entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pEntityLiving"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Laqm;I)V",
      "javadoc": [
        "Called when the player releases the use item button."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pEntityLiving"
        },
        {
          "index": 3,
          "name": "pTimeLeft"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lbfw;I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPlayerIn"
        },
        {
          "index": 3,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lbfw;Laot;)Laov;",
      "javadoc": [
        "Called whenr the item stack is equipped and right clicked. Replaces the item stack with the return value."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPlayerIn"
        },
        {
          "index": 3,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lceh;Lfx;Lbfw;)V",
      "javadoc": [
        "Called when a Block is destroyed using this ItemStack"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pBlockIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pPlayerIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pBlockIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcel;Lcel;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;)Lmd;",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;Lmt;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        },
        {
          "index": 2,
          "name": "pValue"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/text/DecimalFormat;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;Lmd;Lbps;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;Lmj;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)Lbmb;",
      "parameters": [
        {
          "index": 0,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lnr;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pName"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lnx;)Lnx;"
    },
    {
      "name": "a",
      "descriptor": "(Lob;)Lob;"
    },
    {
      "name": "b",
      "descriptor": "()Lblx;",
      "javadoc": [
        "Returns the object corresponding to the stack."
      ]
    },
    {
      "name": "b",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laen;Lcel;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "javadoc": [
        "compares ItemStack argument1 with ItemStack argument2 returns true if both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pStackA"
        },
        {
          "index": 1,
          "name": "pStackB"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbrx;Laqm;I)V",
      "javadoc": [
        "Called as the stack is being used by an entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pLivingEntityIn"
        },
        {
          "index": 3,
          "name": "pCountIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;)Z",
      "javadoc": [
        "Check whether the given Block can be harvested using this ItemStack."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pBlockIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/lang/String;)Lmd;",
      "javadoc": [
        "Get an NBTTagCompound from this stack's NBT data."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)Lmd;",
      "javadoc": [
        "Write the stack fields to a NBT object. Return the new NBT object."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "()I",
      "javadoc": [
        "Returns maximum size of the stack."
      ]
    },
    {
      "name": "c",
      "descriptor": "(I)V",
      "javadoc": [
        "Set this stack's repair cost."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCost"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "compares ItemStack argument to the instance ItemStack returns true if both ItemStacks are equal"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pOther"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "javadoc": [
        "Compares Item and damage value of the two stacks"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pStackA"
        },
        {
          "index": 1,
          "name": "pStackB"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ljava/lang/String;)V"
    },
    {
      "name": "c",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "Assigns a NBTTagCompound to the ItemStack, minecraft validates that only non-stackable items can have it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the ItemStack can hold 2 or more units of the item."
      ]
    },
    {
      "name": "d",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pAnimations"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbmb;)Ljava/util/Optional;"
    },
    {
      "name": "d",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pStackA"
        },
        {
          "index": 1,
          "name": "pStackB"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Ljava/lang/String;)Ljava/util/Collection;",
      "parameters": [
        {
          "index": 0,
          "name": "pStateString"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "()Z",
      "javadoc": [
        "true if this itemStack is damageable"
      ]
    },
    {
      "name": "e",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lbmb;)Ljava/lang/Integer;"
    },
    {
      "name": "f",
      "descriptor": "()Z",
      "javadoc": [
        "returns true when a damageable item is damaged"
      ]
    },
    {
      "name": "f",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbmb;)Lblx;"
    },
    {
      "name": "g",
      "descriptor": "()I"
    },
    {
      "name": "g",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCount"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "()I",
      "javadoc": [
        "Returns the max damage an item in the stack can take."
      ]
    },
    {
      "name": "i",
      "descriptor": "()Lbmb;",
      "javadoc": [
        "Returns a new stack with the same properties."
      ]
    },
    {
      "name": "j",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "k",
      "descriptor": "()I"
    },
    {
      "name": "l",
      "descriptor": "()Lbnn;"
    },
    {
      "name": "m",
      "descriptor": "()Z"
    },
    {
      "name": "n",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the ItemStack has an NBTTagCompound. Currently used to store enchantments."
      ]
    },
    {
      "name": "o",
      "descriptor": "()Lmd;"
    },
    {
      "name": "p",
      "descriptor": "()Lmd;"
    },
    {
      "name": "q",
      "descriptor": "()Lmj;"
    },
    {
      "name": "r",
      "descriptor": "()Lnr;"
    },
    {
      "name": "s",
      "descriptor": "()V",
      "javadoc": [
        "Clear any custom name set for this ItemStack"
      ]
    },
    {
      "name": "t",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the itemstack has a display name"
      ]
    },
    {
      "name": "toString",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "u",
      "descriptor": "()Z"
    },
    {
      "name": "v",
      "descriptor": "()Lbmp;"
    },
    {
      "name": "w",
      "descriptor": "()Z",
      "javadoc": [
        "True if it is a tool and has no enchantments to begin with"
      ]
    },
    {
      "name": "x",
      "descriptor": "()Z",
      "javadoc": [
        "True if the item has enchantment data"
      ]
    },
    {
      "name": "y",
      "descriptor": "()Z",
      "javadoc": [
        "Return whether this stack is on an item frame."
      ]
    },
    {
      "name": "z",
      "descriptor": "()Lbcp;",
      "javadoc": [
        "Return the item frame this stack is on. Returns null if not on an item frame."
      ]
    }
  ]
}