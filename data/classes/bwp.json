{
  "name": "bwp",
  "fields": [
    {
      "name": "A",
      "descriptor": "Z"
    },
    {
      "name": "B",
      "descriptor": "I"
    },
    {
      "name": "C",
      "descriptor": "Lcnu;"
    },
    {
      "name": "D",
      "descriptor": "Ljava/util/function/Supplier;"
    },
    {
      "name": "E",
      "descriptor": "Lcmi;"
    },
    {
      "name": "F",
      "descriptor": "Lbxq;"
    },
    {
      "name": "G",
      "descriptor": "Lwv;"
    },
    {
      "name": "a",
      "descriptor": "[Lgl;"
    },
    {
      "name": "b",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "c",
      "descriptor": "Z"
    },
    {
      "name": "d",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "e",
      "descriptor": "Lcom/mojang/serialization/Codec;"
    },
    {
      "name": "f",
      "descriptor": "Lwv;"
    },
    {
      "name": "g",
      "descriptor": "Lwv;"
    },
    {
      "name": "h",
      "descriptor": "Lwv;"
    },
    {
      "name": "i",
      "descriptor": "I"
    },
    {
      "name": "j",
      "descriptor": "I"
    },
    {
      "name": "k",
      "descriptor": "I"
    },
    {
      "name": "l",
      "descriptor": "I"
    },
    {
      "name": "m",
      "descriptor": "I"
    },
    {
      "name": "n",
      "descriptor": "I"
    },
    {
      "name": "o",
      "descriptor": "I"
    },
    {
      "name": "p",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "q",
      "descriptor": "I",
      "javadoc": [
        "Contains the current Linear Congruential Generator seed for block updates. Used with an A value of 3 and a C value of 0x3c6ef35f, producing a highly planar series of values ill-suited for choosing random blocks in a 16x128x16 field."
      ]
    },
    {
      "name": "r",
      "descriptor": "I"
    },
    {
      "name": "s",
      "descriptor": "F"
    },
    {
      "name": "t",
      "descriptor": "F"
    },
    {
      "name": "u",
      "descriptor": "F"
    },
    {
      "name": "v",
      "descriptor": "F"
    },
    {
      "name": "w",
      "descriptor": "Ljava/util/Random;"
    },
    {
      "name": "x",
      "descriptor": "Ldij;"
    },
    {
      "name": "y",
      "descriptor": "Z"
    },
    {
      "name": "z",
      "descriptor": "Ljava/lang/Thread;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Ldij;Lwv;Lcnu;Ljava/util/function/Supplier;ZZJ)V"
    },
    {
      "name": "E",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "I",
      "descriptor": "()Lcol;"
    },
    {
      "name": "J",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Returns the name of the current chunk provider, by calling chunkprovider.makeString()"
      ]
    },
    {
      "name": "K",
      "descriptor": "()Ldny;"
    },
    {
      "name": "P",
      "descriptor": "()Z",
      "javadoc": [
        "Checks whether its daytime by seeing if the light subtracted from the skylight is less than 4. Always returns true on the client because vanilla has no need for it on the client, therefore it is not synced to the client"
      ]
    },
    {
      "name": "Q",
      "descriptor": "()Z"
    },
    {
      "name": "R",
      "descriptor": "()V"
    },
    {
      "name": "S",
      "descriptor": "()V",
      "javadoc": [
        "Called on construction of the World class to setup the initial skylight values"
      ]
    },
    {
      "name": "T",
      "descriptor": "()V",
      "javadoc": [
        "Called from World constructor to set rainingStrength and thunderingStrength"
      ]
    },
    {
      "name": "U",
      "descriptor": "()V",
      "javadoc": [
        "If on MP, sends a quitting packet."
      ]
    },
    {
      "name": "V",
      "descriptor": "()J"
    },
    {
      "name": "W",
      "descriptor": "()J"
    },
    {
      "name": "X",
      "descriptor": "()Lbwl;",
      "javadoc": [
        "Gets the GameRules instance."
      ]
    },
    {
      "name": "Y",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the current thunder strength (weighted with the rain strength) is greater than 0.9"
      ]
    },
    {
      "name": "Z",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if the current rain strength is greater than 0.2"
      ]
    },
    {
      "name": "a",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "a",
      "descriptor": "(DDDDDDLna;)V"
    },
    {
      "name": "a",
      "descriptor": "(DDDLafd;Laff;FFZ)V"
    },
    {
      "name": "a",
      "descriptor": "(F)F",
      "javadoc": [
        "Return getCelestialAngle()*2*PI"
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)Latf;",
      "javadoc": [
        "Returns the Entity with the given ID, or null if it doesn't exist in this World."
      ]
    },
    {
      "name": "a",
      "descriptor": "(II)Lcml;"
    },
    {
      "name": "a",
      "descriptor": "(IIII)Lgg;"
    },
    {
      "name": "a",
      "descriptor": "(IILcmp;Z)Lcml;"
    },
    {
      "name": "a",
      "descriptor": "(ILgg;I)V"
    },
    {
      "name": "a",
      "descriptor": "(Latf;B)V",
      "javadoc": [
        "sends a Packet 38 (Entity Status) to all tracked players of that entity"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;DDDFLbwh$a;)Lbwh;"
    },
    {
      "name": "a",
      "descriptor": "(Latf;DDDFZLbwh$a;)Lbwh;"
    },
    {
      "name": "a",
      "descriptor": "(Latf;Lasp;Lbwi;DDDFZLbwh$a;)Lbwh;"
    },
    {
      "name": "a",
      "descriptor": "(Latf;Lcov;Lgg;I)V"
    },
    {
      "name": "a",
      "descriptor": "(Latf;Ldmv;Ljava/util/function/Predicate;)Ljava/util/List;",
      "javadoc": [
        "Gets all entities within the specified AABB excluding the one passed into it."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;Ljava/util/function/Predicate;Ljava/util/List;Latf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;DDDLafd;Laff;FF)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Latf;Lafd;Laff;FF)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Lgg;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Lgg;Lafd;Laff;FF)V",
      "javadoc": [
        "Plays a sound. On the server, the sound is broadcast to all nearby <em>except</em> the given player. On the client, the sound only plays if the given player is the client player. Thus, this method is intended to be called from code running on both sides. The client plays it locally and the server plays it for everyone else."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;)Ljava/lang/String;"
    },
    {
      "name": "a",
      "descriptor": "(Lcip;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lcjw;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lcoj;Ldmv;Ljava/util/function/Predicate;)Ljava/util/List;"
    },
    {
      "name": "a",
      "descriptor": "(Lcps$a;II)I"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Latf;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Latf;Lgl;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lbzo;II)V"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lbzo;Lgg;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lbzo;Lgl;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;I)Z",
      "javadoc": [
        "Sets a block state into this world.Flags are as follows:",
        "1 will cause a block update.",
        "2 will send the change to clients.",
        "4 will prevent the block from being re-rendered.",
        "8 will force any re-renders to run on the main thread instead",
        "16 will prevent neighbor reactions (e.g. fences connecting, observers pulsing).",
        "32 will prevent neighbor reactions from spawning drops.",
        "64 will signify the block is being moved.",
        "Flags can be OR-ed"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;II)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;Lcks;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;Lcks;I)V",
      "javadoc": [
        "Flags are as in setBlockState"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lgl;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Ljava/util/function/Predicate;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Z)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lgg;ZLatf;I)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lht;DDDDDD)V"
    },
    {
      "name": "a",
      "descriptor": "(Lht;ZDDDDDD)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;)Ldhs;"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;Ldhs;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/function/Consumer;Latf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/function/Predicate;Ljava/util/List;Lcoj;Latf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lpk;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lq;)Lr;",
      "javadoc": [
        "Adds some basic stats of the world to the given crash report."
      ]
    },
    {
      "name": "a_",
      "descriptor": "(Lgg;)Lcks;"
    },
    {
      "name": "aa",
      "descriptor": "()Lwv;"
    },
    {
      "name": "ab",
      "descriptor": "()Lapu;"
    },
    {
      "name": "ac",
      "descriptor": "()Ljava/util/function/Supplier;"
    },
    {
      "name": "ad",
      "descriptor": "()Z"
    },
    {
      "name": "b",
      "descriptor": "(F)F"
    },
    {
      "name": "b",
      "descriptor": "(I)Z"
    },
    {
      "name": "b",
      "descriptor": "(ILgg;I)V"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lbzo;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;)Z",
      "javadoc": [
        "Convenience method to update the block on both the client and server"
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lcks;Lcks;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Lgl;)I"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;Ljava/util/function/Predicate;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Lht;DDDDDD)V"
    },
    {
      "name": "b",
      "descriptor": "(Lht;ZDDDDDD)V"
    },
    {
      "name": "b",
      "descriptor": "(ZZ)V",
      "javadoc": [
        "first boolean for hostile mobs and second for peaceful mobs"
      ]
    },
    {
      "name": "b_",
      "descriptor": "(Lgg;)Ldes;"
    },
    {
      "name": "c",
      "descriptor": "(F)V",
      "javadoc": [
        "Sets the strength of the thunder."
      ]
    },
    {
      "name": "c",
      "descriptor": "(I)V"
    },
    {
      "name": "c",
      "descriptor": "(II)Lbvt;"
    },
    {
      "name": "c",
      "descriptor": "(Lgg;Lbzo;)V"
    },
    {
      "name": "c_",
      "descriptor": "(Lgg;)Lcip;"
    },
    {
      "name": "close",
      "descriptor": "()V"
    },
    {
      "name": "d",
      "descriptor": "(F)F",
      "javadoc": [
        "Returns rain strength."
      ]
    },
    {
      "name": "d",
      "descriptor": "(II)Lcmw;"
    },
    {
      "name": "d_",
      "descriptor": "(Lgg;)Lary;"
    },
    {
      "name": "e",
      "descriptor": "(F)V",
      "javadoc": [
        "Sets the strength of the rain."
      ]
    },
    {
      "name": "j_",
      "descriptor": "()Z"
    },
    {
      "name": "k",
      "descriptor": "(Lgg;)Z",
      "javadoc": [
        "Check if the given BlockPos has valid coordinates"
      ]
    },
    {
      "name": "k_",
      "descriptor": "()Ldej;"
    },
    {
      "name": "l",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "l_",
      "descriptor": "()I"
    },
    {
      "name": "m",
      "descriptor": "(Lgg;)Lcmw;"
    },
    {
      "name": "m_",
      "descriptor": "()Ldhy;",
      "javadoc": [
        "Returns the world's WorldInfo object"
      ]
    },
    {
      "name": "n",
      "descriptor": "()Lnet/minecraft/server/MinecraftServer;"
    },
    {
      "name": "n",
      "descriptor": "(Lgg;)V"
    },
    {
      "name": "n_",
      "descriptor": "()I"
    },
    {
      "name": "o",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "o",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "o_",
      "descriptor": "()Lcmi;"
    },
    {
      "name": "p",
      "descriptor": "(Lgg;)V"
    },
    {
      "name": "p_",
      "descriptor": "()Lcnu;"
    },
    {
      "name": "q",
      "descriptor": "()Lbti;"
    },
    {
      "name": "q",
      "descriptor": "(Lgg;)I",
      "javadoc": [
        "Returns the single highest strong power out of all directions using getStrongPower(BlockPos, EnumFacing)"
      ]
    },
    {
      "name": "q_",
      "descriptor": "()Ljava/util/Random;"
    },
    {
      "name": "r",
      "descriptor": "()Lagc;"
    },
    {
      "name": "r",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "r_",
      "descriptor": "()Lbxq;"
    },
    {
      "name": "s",
      "descriptor": "()Z"
    },
    {
      "name": "s",
      "descriptor": "(Lgg;)I",
      "javadoc": [
        "Checks if the specified block or its neighbors are powered by a neighboring block. Used by blocks like TNT and Doors."
      ]
    },
    {
      "name": "t",
      "descriptor": "(Lgg;)Z",
      "javadoc": [
        "Check if precipitation is currently happening at a position"
      ]
    },
    {
      "name": "u",
      "descriptor": "(Lgg;)Z"
    },
    {
      "name": "v",
      "descriptor": "()I"
    }
  ]
}