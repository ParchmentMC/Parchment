{
  "name": "cig",
  "fields": [
    {
      "name": "a",
      "descriptor": "I"
    },
    {
      "name": "b",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "d",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "e",
      "descriptor": "Los;"
    },
    {
      "name": "f",
      "descriptor": "Lbpl;"
    },
    {
      "name": "g",
      "descriptor": "Lng;",
      "javadoc": [
        "A list of all the banner patterns."
      ]
    },
    {
      "name": "h",
      "descriptor": "Z"
    },
    {
      "name": "i",
      "descriptor": "Ljava/util/List;",
      "javadoc": [
        "A list of all patterns stored on this banner."
      ]
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lgg;Lcks;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lgg;Lcks;Lbpl;)V"
    },
    {
      "name": "S",
      "descriptor": "()Los;"
    },
    {
      "name": "U",
      "descriptor": "()Los;"
    },
    {
      "name": "Y_",
      "descriptor": "()Lpy;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "Z_",
      "descriptor": "()Lna;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbpl;Lng;)Ljava/util/List;"
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;)Lng;"
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;Lbpl;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V"
    },
    {
      "name": "a",
      "descriptor": "(Los;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lbqp;)I",
      "javadoc": [
        "Retrieves the amount of patterns stored on an ItemStack. If the tag does not exist this value will be 0."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)Lna;"
    },
    {
      "name": "c",
      "descriptor": "()Ljava/util/List;",
      "javadoc": [
        "Retrieves the list of patterns for this tile entity. The banner data will be initialized/refreshed before this happens."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbqp;)V",
      "javadoc": [
        "Removes all the banner related data from a provided instance of ItemStack."
      ]
    },
    {
      "name": "f",
      "descriptor": "()Lbqp;"
    },
    {
      "name": "g",
      "descriptor": "()Lbpl;"
    }
  ]
}