{
  "name": "dgz",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lbxb;"
    },
    {
      "name": "b",
      "descriptor": "Latv;"
    },
    {
      "name": "c",
      "descriptor": "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;"
    },
    {
      "name": "d",
      "descriptor": "I"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "Z"
    },
    {
      "name": "h",
      "descriptor": "Z"
    },
    {
      "name": "i",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "()V",
      "javadoc": [
        "This method is called when all nodes have been processed and PathEntity is created.",
        "{@link net.minecraft.world.pathfinder.WalkNodeProcessor WalkNodeProcessor} uses this to change its field {@link net.minecraft.world.pathfinder.WalkNodeProcessor#avoidsWater avoidsWater}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDD)Ldhe;"
    },
    {
      "name": "a",
      "descriptor": "(III)Ldgy;",
      "javadoc": [
        "Returns a mapped point or creates and adds one"
      ]
    },
    {
      "name": "a",
      "descriptor": "(IIII)Ldgy;"
    },
    {
      "name": "a",
      "descriptor": "(Lbvt;III)Ldgw;",
      "javadoc": [
        "Returns the node type at the specified postion taking the block below into account"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbvt;IIILatv;IIIZZ)Ldgw;",
      "javadoc": [
        "Returns the significant (e.g LAVA if the entity were half in lava) node type at the location taking the surroundings and the entity size in account"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbxb;Latv;)V"
    },
    {
      "name": "a",
      "descriptor": "(Z)V"
    },
    {
      "name": "a",
      "descriptor": "([Ldgy;Ldgy;)I"
    },
    {
      "name": "b",
      "descriptor": "()Ldgy;"
    },
    {
      "name": "b",
      "descriptor": "(Lgg;)Ldgy;"
    },
    {
      "name": "b",
      "descriptor": "(Z)V"
    },
    {
      "name": "c",
      "descriptor": "(Z)V"
    },
    {
      "name": "d",
      "descriptor": "()Z"
    },
    {
      "name": "e",
      "descriptor": "()Z"
    },
    {
      "name": "f",
      "descriptor": "()Z"
    }
  ]
}