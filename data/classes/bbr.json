{
  "name": "bbr",
  "fields": [
    {
      "name": "b",
      "descriptor": "Lus;"
    },
    {
      "name": "bA",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bB",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bC",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bD",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bE",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bF",
      "descriptor": "Lchg;"
    },
    {
      "name": "bG",
      "descriptor": "Lbci;"
    },
    {
      "name": "bH",
      "descriptor": "I"
    },
    {
      "name": "bI",
      "descriptor": "I"
    },
    {
      "name": "bJ",
      "descriptor": "[Lcxb;"
    },
    {
      "name": "bK",
      "descriptor": "[I"
    },
    {
      "name": "bL",
      "descriptor": "Lcwy;"
    },
    {
      "name": "bo",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bp",
      "descriptor": "F"
    },
    {
      "name": "bq",
      "descriptor": "F"
    },
    {
      "name": "br",
      "descriptor": "Z"
    },
    {
      "name": "bs",
      "descriptor": "I"
    },
    {
      "name": "bt",
      "descriptor": "F"
    },
    {
      "name": "bu",
      "descriptor": "Lbbq;"
    },
    {
      "name": "bv",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "bw",
      "descriptor": "Lazg;"
    },
    {
      "name": "bx",
      "descriptor": "[Lbbp;"
    },
    {
      "name": "by",
      "descriptor": "Lbbp;"
    },
    {
      "name": "bz",
      "descriptor": "Lbbp;"
    },
    {
      "name": "c",
      "descriptor": "[[D"
    },
    {
      "name": "d",
      "descriptor": "I"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pXp"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(IF)[D",
      "javadoc": [
        "Returns a double[3] array with movement offsets, used to calculate trailing tail/neck positions. [0] = yaw offset, [1] = y offset, [2] = unused, always 0. Parameters: buffer index offset, partial ticks."
      ],
      "parameters": [
        {
          "index": 2,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(IILcxb;)Lcxd;",
      "javadoc": [
        "Find and return a path among the circles described by pathPoints, or null if the shortest path would just be directly between the start and finish with no intermediate points.",
        "",
        "Starting with pathPoint[startIdx], it searches the neighboring points (and their neighboring points, and so on) until it reaches pathPoint[finishIdx], at which point it calls makePath to seal the deal."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStartIdx"
        },
        {
          "index": 2,
          "name": "pFinishIdx"
        },
        {
          "index": 3,
          "name": "pAndThen"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I[D[D)F",
      "parameters": [
        {
          "index": 2,
          "name": "pSpineEndOffsets"
        },
        {
          "index": 3,
          "name": "pHeadPartOffsets"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbp;DDD)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPart"
        },
        {
          "index": 2,
          "name": "pOffsetX"
        },
        {
          "index": 4,
          "name": "pOffsetY"
        },
        {
          "index": 6,
          "name": "pOffsetZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbp;Lapk;F)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPart"
        },
        {
          "index": 2,
          "name": "pSource"
        },
        {
          "index": 3,
          "name": "pDamage"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbbq;Lfx;Lapk;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCrystal"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pDmgSrc"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcxb;Lcxb;)Lcxd;",
      "javadoc": [
        "Create and return a new PathEntity defining a path from the start to the finish, using the connections already made by the caller, findPath."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStart"
        },
        {
          "index": 2,
          "name": "pFinish"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;)V",
      "javadoc": [
        "Pushes all entities inside the list away from the enderdragon."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntities"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lus;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "aT",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if other Entities should be prevented from moving through this Entity."
      ]
    },
    {
      "name": "aa",
      "descriptor": "()V",
      "javadoc": [
        "Called by the /kill command."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ldci;)Z",
      "javadoc": [
        "Destroys all blocks that aren't associated with 'The End' inside the given bounding box."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pArea"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/util/List;)V",
      "javadoc": [
        "Attacks all entities inside this list, dealing 5 hearts of damage."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntities"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bO",
      "descriptor": "()Z",
      "javadoc": [
        "Returns false if this Entity can't move between dimensions. True if it can."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lapu;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEffectInstance"
        }
      ]
    },
    {
      "name": "cI",
      "descriptor": "()V",
      "javadoc": [
        "Makes the entity despawn if requirements are reached"
      ]
    },
    {
      "name": "cU",
      "descriptor": "()V",
      "javadoc": [
        "handles entity death timer, experience orb and particle creation"
      ]
    },
    {
      "name": "cu",
      "descriptor": "()Ladr;"
    },
    {
      "name": "dG",
      "descriptor": "()F",
      "javadoc": [
        "Returns the volume for the sounds this mob makes."
      ]
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "eI",
      "descriptor": "()I",
      "javadoc": [
        "Generates values for the fields pathPoints, and neighbors, and then returns the nearest pathPoint to the specified position."
      ]
    },
    {
      "name": "eJ",
      "descriptor": "()[Lbbp;"
    },
    {
      "name": "eK",
      "descriptor": "()Lbci;"
    },
    {
      "name": "eL",
      "descriptor": "()Lchg;"
    },
    {
      "name": "eM",
      "descriptor": "()F"
    },
    {
      "name": "eN",
      "descriptor": "()V",
      "javadoc": [
        "Updates the state of the enderdragon's current endercrystal."
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Provides a way to cause damage to an ender dragon."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(D)F",
      "javadoc": [
        "Simplifies the value of a number by adding/subtracting 180 to the point that the number is between -180 and 180."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAngle"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "m",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "n",
      "descriptor": "(Laqa;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "p",
      "descriptor": "(DDD)I",
      "javadoc": [
        "Returns the index into pathPoints of the nearest PathPoint."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pY"
        },
        {
          "index": 5,
          "name": "pZ"
        }
      ]
    },
    {
      "name": "x",
      "descriptor": "(F)Ldcn;",
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    }
  ]
}