{
  "name": "cdf",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lclj;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lckr$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Latt;Lbqp;)V",
      "javadoc": [
        "Called by ItemBlocks after a block is set in the world, to allow post-place logic"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        },
        {
          "index": 4,
          "name": "placer"
        },
        {
          "index": 5,
          "name": "stack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwq;Lgg;Lcks;Lbqp;)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        },
        {
          "index": 2,
          "name": "pos"
        },
        {
          "index": 3,
          "name": "state"
        },
        {
          "index": 4,
          "name": "recordStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;)I",
      "javadoc": [
        "@deprecated call via {@link IBlockState#getComparatorInputOverride(World,BlockPos)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "blockState"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lbkd;Larz;Ldmw;)Lasa;",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "player"
        },
        {
          "index": 5,
          "name": "hand"
        },
        {
          "index": 6,
          "name": "hit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lcks;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "state"
        },
        {
          "index": 2,
          "name": "level"
        },
        {
          "index": 3,
          "name": "pos"
        },
        {
          "index": 4,
          "name": "newState"
        },
        {
          "index": 5,
          "name": "isMoving"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lckt$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "builder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;Lcks;)Lcip;"
    },
    {
      "name": "b_",
      "descriptor": "(Lcks;)Lcfd;",
      "javadoc": [
        "The type of render function called. MODEL for mixed tesr and static model, MODELBLOCK_ANIMATED for TESR-only, LIQUID for vanilla liquids, INVISIBLE to skip all rendering",
        "@deprecated call via {@link IBlockState#getRenderType()} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    },
    {
      "name": "d_",
      "descriptor": "(Lcks;)Z",
      "javadoc": [
        "@deprecated call via {@link IBlockState#hasComparatorInputOverride()} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "state"
        }
      ]
    }
  ]
}