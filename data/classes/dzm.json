{
  "name": "dzm",
  "fields": [
    {
      "name": "bJ",
      "descriptor": "I"
    },
    {
      "name": "bK",
      "descriptor": "I"
    },
    {
      "name": "bL",
      "descriptor": "F"
    },
    {
      "name": "bM",
      "descriptor": "F"
    },
    {
      "name": "bN",
      "descriptor": "F"
    },
    {
      "name": "bO",
      "descriptor": "F"
    },
    {
      "name": "bP",
      "descriptor": "F"
    },
    {
      "name": "bQ",
      "descriptor": "F"
    },
    {
      "name": "bR",
      "descriptor": "Laeb;"
    },
    {
      "name": "bS",
      "descriptor": "Ldjm;"
    },
    {
      "name": "bT",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "bU",
      "descriptor": "I"
    },
    {
      "name": "bV",
      "descriptor": "D",
      "javadoc": [
        "The last X position which was transmitted to the server, used to determine when the X position changes and needs to be re-trasmitted"
      ]
    },
    {
      "name": "bW",
      "descriptor": "D",
      "javadoc": [
        "The last Y position which was transmitted to the server, used to determine when the Y position changes and needs to be re-transmitted"
      ]
    },
    {
      "name": "bX",
      "descriptor": "D",
      "javadoc": [
        "The last Z position which was transmitted to the server, used to determine when the Z position changes and needs to be re-transmitted"
      ]
    },
    {
      "name": "bY",
      "descriptor": "F",
      "javadoc": [
        "The last yaw value which was transmitted to the server, used to determine when the yaw changes and needs to be re-transmitted"
      ]
    },
    {
      "name": "bZ",
      "descriptor": "F",
      "javadoc": [
        "The last pitch value which was transmitted to the server, used to determine when the pitch changes and needs to be re-transmitted"
      ]
    },
    {
      "name": "ca",
      "descriptor": "Z"
    },
    {
      "name": "cb",
      "descriptor": "Z"
    },
    {
      "name": "cc",
      "descriptor": "Z"
    },
    {
      "name": "cd",
      "descriptor": "Z",
      "javadoc": [
        "the last sprinting state sent to the server"
      ]
    },
    {
      "name": "ce",
      "descriptor": "I",
      "javadoc": [
        "Reset to 0 every time position is sent to the server, used to send periodic updates every 20 ticks even when the player is not moving."
      ]
    },
    {
      "name": "cf",
      "descriptor": "Z"
    },
    {
      "name": "cg",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "ch",
      "descriptor": "I"
    },
    {
      "name": "ci",
      "descriptor": "F"
    },
    {
      "name": "cj",
      "descriptor": "Z"
    },
    {
      "name": "ck",
      "descriptor": "Laot;"
    },
    {
      "name": "cl",
      "descriptor": "Z"
    },
    {
      "name": "cm",
      "descriptor": "Z"
    },
    {
      "name": "cn",
      "descriptor": "I"
    },
    {
      "name": "co",
      "descriptor": "Z"
    },
    {
      "name": "cp",
      "descriptor": "I"
    },
    {
      "name": "cq",
      "descriptor": "Z"
    },
    {
      "name": "e",
      "descriptor": "Ldwu;"
    },
    {
      "name": "f",
      "descriptor": "Ldzk;"
    },
    {
      "name": "g",
      "descriptor": "Ldjz;"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Ldjz;Ldwt;Ldwu;Laeb;Ldjm;ZZ)V"
    },
    {
      "name": "A",
      "descriptor": "()V"
    },
    {
      "name": "B",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Gets the brand of the currently connected server. May be null if the server hasn't yet sent brand information. Server brand information is sent over the {@code MC|Brand} plugin channel, and is used to identify modded servers in crash reports."
      ]
    },
    {
      "name": "D",
      "descriptor": "()Laeb;"
    },
    {
      "name": "F",
      "descriptor": "()Ldjm;"
    },
    {
      "name": "G",
      "descriptor": "()Z"
    },
    {
      "name": "H",
      "descriptor": "()Z"
    },
    {
      "name": "I",
      "descriptor": "()F"
    },
    {
      "name": "J",
      "descriptor": "()Z"
    },
    {
      "name": "K",
      "descriptor": "()Z"
    },
    {
      "name": "L",
      "descriptor": "()Z"
    },
    {
      "name": "M",
      "descriptor": "()Z"
    },
    {
      "name": "N",
      "descriptor": "()F"
    },
    {
      "name": "O",
      "descriptor": "()V",
      "javadoc": [
        "called every tick when the player is on foot. Performs all the things that normally happen during movement."
      ]
    },
    {
      "name": "Q",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(FII)V",
      "javadoc": [
        "Sets the current XP, total XP, and level number."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCurrentXP"
        },
        {
          "index": 2,
          "name": "pMaxXP"
        },
        {
          "index": 3,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPermissionLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ladp;FF)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSound"
        },
        {
          "index": 2,
          "name": "pVolume"
        },
        {
          "index": 3,
          "name": "pPitch"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ladp;Ladr;FF)V"
    },
    {
      "name": "a",
      "descriptor": "(Laot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;)V",
      "javadoc": [
        "Called when the entity is dealt a critical hit."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pEntityHit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;Z)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        },
        {
          "index": 2,
          "name": "pForce"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqr;Ldcn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pType"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Laot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lboq;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pRecipe"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbqy;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCommandBlock"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcco;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCommandBlock"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lccz;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lcdf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSignTile"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcdj;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStructure"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lfx;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lddh;)Ljava/util/stream/Stream;"
    },
    {
      "name": "a",
      "descriptor": "(Lnr;Ljava/util/UUID;)V",
      "javadoc": [
        "Send a chat message to the CommandSender"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pComponent"
        },
        {
          "index": 2,
          "name": "pSenderUUID"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lnr;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pChatComponent"
        },
        {
          "index": 2,
          "name": "pActionBar"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lus;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pKey"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)Z"
    },
    {
      "name": "aI",
      "descriptor": "()Z"
    },
    {
      "name": "aO",
      "descriptor": "()Z"
    },
    {
      "name": "b",
      "descriptor": "(DD)V",
      "parameters": [
        {
          "index": 1,
          "name": "pX"
        },
        {
          "index": 3,
          "name": "pZ"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(F)V",
      "javadoc": [
        "Heal living entity (param: amount of half-hearts)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pHealAmount"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntityHit"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pShow"
        }
      ]
    },
    {
      "name": "ba",
      "descriptor": "()V",
      "javadoc": [
        "Handles updating while riding another entity"
      ]
    },
    {
      "name": "bf",
      "descriptor": "()V"
    },
    {
      "name": "bu",
      "descriptor": "()Z"
    },
    {
      "name": "bz",
      "descriptor": "()Z"
    },
    {
      "name": "c",
      "descriptor": "(Laot;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laps;)Lapu;",
      "javadoc": [
        "Removes the given potion effect from the active potion map and returns it. Does not call cleanup callbacks for the end of the potion effect."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPotioneffectin"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laqa;)Z"
    },
    {
      "name": "cN",
      "descriptor": "()Z"
    },
    {
      "name": "dP",
      "descriptor": "()V"
    },
    {
      "name": "dS",
      "descriptor": "()Z",
      "javadoc": [
        "Returns whether the entity is in a server world"
      ]
    },
    {
      "name": "dW",
      "descriptor": "()Z"
    },
    {
      "name": "dX",
      "descriptor": "()Laot;"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;F)V",
      "javadoc": [
        "Deals damage to the entity. This will take the armor of the entity into consideration before damaging the health bar."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSrc"
        },
        {
          "index": 2,
          "name": "pDamageAmount"
        }
      ]
    },
    {
      "name": "eW",
      "descriptor": "()Z"
    },
    {
      "name": "eX",
      "descriptor": "()Z"
    },
    {
      "name": "eY",
      "descriptor": "()Z"
    },
    {
      "name": "ec",
      "descriptor": "()V"
    },
    {
      "name": "ee",
      "descriptor": "()Z"
    },
    {
      "name": "et",
      "descriptor": "()Z"
    },
    {
      "name": "ey",
      "descriptor": "()V"
    },
    {
      "name": "ez",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if this is an EntityPlayerSP, or the logged in player."
      ]
    },
    {
      "name": "f",
      "descriptor": "(Ljava/lang/String;)V",
      "javadoc": [
        "Sends a chat message from the player."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pMessage"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(F)F",
      "javadoc": [
        "Gets the current pitch of the entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(FF)V",
      "parameters": [
        {
          "index": 1,
          "name": "pMovementX"
        },
        {
          "index": 2,
          "name": "pMovementZ"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Lfx;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Ljava/lang/String;)V",
      "javadoc": [
        "Sets the brand of the currently connected server. Server brand information is sent over the {@code MC|Brand} plugin channel, and is used to identify modded servers in crash reports."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pBrand"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(Z)V",
      "javadoc": [
        "Set sprinting switch for Entity."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSprinting"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(F)F",
      "javadoc": [
        "Gets the current yaw of the entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "m",
      "descriptor": "()V",
      "javadoc": [
        "set current crafting inventory back to the 2x2 square"
      ]
    },
    {
      "name": "o",
      "descriptor": "(F)Ldcn;",
      "parameters": [
        {
          "index": 1,
          "name": "pPartialTicks"
        }
      ]
    },
    {
      "name": "t",
      "descriptor": "()V",
      "javadoc": [
        "Sends the player's abilities to the server (if there is one)."
      ]
    },
    {
      "name": "v",
      "descriptor": "(F)V",
      "javadoc": [
        "Updates health locally."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pHealth"
        }
      ]
    },
    {
      "name": "w",
      "descriptor": "()F"
    },
    {
      "name": "x",
      "descriptor": "()V"
    },
    {
      "name": "y",
      "descriptor": "()I"
    },
    {
      "name": "z",
      "descriptor": "()V"
    }
  ]
}