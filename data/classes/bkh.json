{
  "name": "bkh",
  "fields": [
    {
      "name": "ao",
      "descriptor": "Lwf;"
    },
    {
      "name": "ap",
      "descriptor": "Lwf;"
    },
    {
      "name": "aq",
      "descriptor": "I"
    },
    {
      "name": "ar",
      "descriptor": "I"
    },
    {
      "name": "as",
      "descriptor": "I"
    },
    {
      "name": "at",
      "descriptor": "Lcks;"
    },
    {
      "name": "au",
      "descriptor": "I"
    },
    {
      "name": "av",
      "descriptor": "D"
    },
    {
      "name": "aw",
      "descriptor": "I"
    },
    {
      "name": "ax",
      "descriptor": "Lafd;"
    },
    {
      "name": "ay",
      "descriptor": "Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;"
    },
    {
      "name": "az",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "b",
      "descriptor": "Z"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "Lbkh$a;"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "D"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;DDDLbwp;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Latt;Lbwp;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(Latj;Lbwp;)V"
    },
    {
      "name": "A",
      "descriptor": "()V"
    },
    {
      "name": "B",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "(D)Z",
      "javadoc": [
        "Checks if the entity is in range to render."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "distance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(DDDFFIZ)V",
      "javadoc": [
        "Sets a target for the client to interpolate towards over the next few ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "yaw"
        },
        {
          "index": 8,
          "name": "pitch"
        },
        {
          "index": 9,
          "name": "posRotationIncrements"
        },
        {
          "index": 10,
          "name": "teleport"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)V",
      "javadoc": [
        "Sets the amount of knockback the arrow applies when it hits a mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "knockbackStrength"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(IZ)V"
    },
    {
      "name": "a",
      "descriptor": "(Lafd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "sound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latf;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Latt;)V",
      "parameters": [
        {
          "index": 1,
          "name": "living"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Latt;F)V"
    },
    {
      "name": "a",
      "descriptor": "(Latz;Ldna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "type"
        },
        {
          "index": 2,
          "name": "pos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lauf;Latg;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pose"
        },
        {
          "index": 2,
          "name": "size"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Ldmw;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ldmx;)V",
      "javadoc": [
        "Called when the arrow hits an entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "result"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldna;Ldna;)Ldmx;",
      "javadoc": [
        "Gets the EntityRayTraceResult representing the entity hit"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "startVec"
        },
        {
          "index": 2,
          "name": "endVec"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lna;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Z)V",
      "javadoc": [
        "Whether the arrow has a stream of critical hit particles flying behind it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "critical"
        }
      ]
    },
    {
      "name": "aI",
      "descriptor": "()Latf$b;"
    },
    {
      "name": "a_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(B)V",
      "parameters": [
        {
          "index": 1,
          "name": "level"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Latf;)V",
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;)V",
      "javadoc": [
        "Called by a player entity when they collide with an entity"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "entity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lna;)V",
      "parameters": [
        {
          "index": 1,
          "name": "compound"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(DDDFF)V",
      "javadoc": [
        "Similar to setArrowHeading, it's point the throwable entity to a x, y, z direction."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        },
        {
          "index": 7,
          "name": "velocity"
        },
        {
          "index": 8,
          "name": "inaccuracy"
        }
      ]
    },
    {
      "name": "ca",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if it's possible to attack this entity with an item."
      ]
    },
    {
      "name": "h",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "(D)V",
      "parameters": [
        {
          "index": 1,
          "name": "damage"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "()Lafd;",
      "javadoc": [
        "The sound made when an entity is hit by this projectile"
      ]
    },
    {
      "name": "j",
      "descriptor": "()Lafd;"
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "(DDD)V",
      "javadoc": [
        "Updates the entity motion clientside, called by packets from the server"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "x"
        },
        {
          "index": 3,
          "name": "y"
        },
        {
          "index": 5,
          "name": "z"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "()Lbqp;"
    },
    {
      "name": "n",
      "descriptor": "()D"
    },
    {
      "name": "o",
      "descriptor": "()I"
    },
    {
      "name": "p",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow has a stream of critical hit particles flying behind it."
      ]
    },
    {
      "name": "p",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets if this arrow can noClip"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "noClip"
        }
      ]
    },
    {
      "name": "q",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow was shot from a crossbow."
      ]
    },
    {
      "name": "q",
      "descriptor": "(Z)V",
      "javadoc": [
        "Sets data about if this arrow entity was shot from a crossbow"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "fromCrossbow"
        }
      ]
    },
    {
      "name": "r",
      "descriptor": "()B"
    },
    {
      "name": "s",
      "descriptor": "()F"
    },
    {
      "name": "t",
      "descriptor": "()Z",
      "javadoc": [
        "Whether the arrow can noClip"
      ]
    },
    {
      "name": "v",
      "descriptor": "()Z"
    }
  ]
}