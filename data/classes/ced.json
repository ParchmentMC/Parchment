{
  "name": "ced",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lceh;"
    },
    {
      "name": "b",
      "descriptor": "Lgc;"
    },
    {
      "name": "c",
      "descriptor": "Z",
      "javadoc": [
        "if this piston is extending or not"
      ]
    },
    {
      "name": "g",
      "descriptor": "Z"
    },
    {
      "name": "h",
      "descriptor": "Ljava/lang/ThreadLocal;"
    },
    {
      "name": "i",
      "descriptor": "F"
    },
    {
      "name": "j",
      "descriptor": "F",
      "javadoc": [
        "the progress in (de)extending"
      ]
    },
    {
      "name": "k",
      "descriptor": "J"
    },
    {
      "name": "l",
      "descriptor": "I"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lceh;Lgc;ZZ)V"
    },
    {
      "name": "a",
      "descriptor": "(F)F",
      "javadoc": [
        "Get interpolated progress value (between lastProgress and progress) given the fractional time between ticks as an argument"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pTicks"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqa;Lgc;D)V",
      "parameters": [
        {
          "index": 3,
          "name": "pProgress"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrc;Lfx;)Lddh;",
      "parameters": [
        {
          "index": 1,
          "name": "pReader"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldci;)Ldci;",
      "parameters": [
        {
          "index": 1,
          "name": "pBoundingBox"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldci;Laqa;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pShape"
        },
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldci;Lgc;Ldci;)D",
      "parameters": [
        {
          "index": 0,
          "name": "pHeadShape"
        },
        {
          "index": 1,
          "name": "pDirection"
        },
        {
          "index": 2,
          "name": "pFacing"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgc;Laqa;DLgc;)V",
      "parameters": [
        {
          "index": 0,
          "name": "pDirection"
        },
        {
          "index": 1,
          "name": "pEntity"
        },
        {
          "index": 2,
          "name": "pProgress"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)Lmd;",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "aj_",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "()Lmd;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "b",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "pTicks"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ldci;Laqa;)Z"
    },
    {
      "name": "c",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "pTicks"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if a piston is extending"
      ]
    },
    {
      "name": "d",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "pTicks"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(F)F",
      "parameters": [
        {
          "index": 1,
          "name": "pProgress"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "()Lgc;"
    },
    {
      "name": "f",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pProgress"
        }
      ]
    },
    {
      "name": "g",
      "descriptor": "(F)V"
    },
    {
      "name": "h",
      "descriptor": "()Z"
    },
    {
      "name": "i",
      "descriptor": "()D"
    },
    {
      "name": "j",
      "descriptor": "()Lgc;"
    },
    {
      "name": "k",
      "descriptor": "()Lceh;"
    },
    {
      "name": "l",
      "descriptor": "()V",
      "javadoc": [
        "removes a piston's tile entity (and if the piston is moving, stops it)"
      ]
    },
    {
      "name": "m",
      "descriptor": "()J"
    },
    {
      "name": "x",
      "descriptor": "()Lceh;"
    },
    {
      "name": "y",
      "descriptor": "()Z"
    },
    {
      "name": "z",
      "descriptor": "()Lgc;"
    }
  ]
}