{
  "name": "bzj",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcfg;"
    },
    {
      "name": "b",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "c",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lceg$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(Laqe;Lbrg;Lfx;)Ljava/util/Optional;",
      "parameters": [
        {
          "index": 0,
          "name": "pEntity"
        },
        {
          "index": 1,
          "name": "pReader"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laqe;Lbrg;Lfx;Z)Ljava/util/Optional;"
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pWorld"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 0,
          "name": "pWorld"
        },
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;)Z",
      "javadoc": [
        "@deprecated call via {@link IBlockState#hasComparatorInputOverride()} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;I)I",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pScale"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrc;Lfx;Lcxe;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pWorldIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;)I",
      "javadoc": [
        "@deprecated call via {@link IBlockState#getComparatorInputOverride(World,BlockPos)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pBlockState"
        },
        {
          "index": 2,
          "name": "pWorldIn"
        },
        {
          "index": 3,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Lbfw;Laot;Ldcj;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pWorldIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pPlayer"
        },
        {
          "index": 5,
          "name": "pHandIn"
        },
        {
          "index": 6,
          "name": "pHit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStateIn"
        },
        {
          "index": 2,
          "name": "pWorldIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcei$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBuilder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;Lbrx;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pPos"
        },
        {
          "index": 1,
          "name": "pWorld"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lceh;Lbrx;Lfx;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pWorld"
        },
        {
          "index": 3,
          "name": "pPos2"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lceh;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        }
      ]
    }
  ]
}