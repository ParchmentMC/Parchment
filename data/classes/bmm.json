{
  "name": "bmm",
  "fields": [
    {
      "name": "k",
      "descriptor": "I"
    },
    {
      "name": "l",
      "descriptor": "I"
    },
    {
      "name": "m",
      "descriptor": "I"
    },
    {
      "name": "n",
      "descriptor": "I"
    },
    {
      "name": "o",
      "descriptor": "I"
    },
    {
      "name": "p",
      "descriptor": "I"
    },
    {
      "name": "q",
      "descriptor": "I"
    },
    {
      "name": "r",
      "descriptor": "Lart;"
    },
    {
      "name": "s",
      "descriptor": "Lbmm$a;"
    },
    {
      "name": "t",
      "descriptor": "Lbmu;"
    },
    {
      "name": "u",
      "descriptor": "Lbmt;"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(ILart;)V"
    },
    {
      "name": "<init>",
      "descriptor": "(ILart;Lbmt;Lbmu;)V"
    },
    {
      "name": "a",
      "descriptor": "(II)V",
      "parameters": [
        {
          "index": 1,
          "name": "id"
        },
        {
          "index": 2,
          "name": "data"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z",
      "javadoc": [
        "Determines whether supplied player can use this container"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;)V",
      "javadoc": [
        "Called when the container is closed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;I)Lbqp;",
      "javadoc": [
        "Handle when the stack in slot {@code index} is shift-clicked. Normally this moves the stack between the player inventory and the other inventory(s)."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "player"
        },
        {
          "index": 2,
          "name": "index"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(II)V"
    },
    {
      "name": "i",
      "descriptor": "()I"
    },
    {
      "name": "j",
      "descriptor": "()Lasx;"
    },
    {
      "name": "k",
      "descriptor": "()Lasx;"
    },
    {
      "name": "l",
      "descriptor": "()Z"
    }
  ]
}