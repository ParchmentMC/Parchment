{
  "name": "buo",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lcom/google/common/cache/LoadingCache;"
    },
    {
      "name": "b",
      "descriptor": "Lceh;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "d",
      "descriptor": "Lblx;"
    },
    {
      "name": "e",
      "descriptor": "Ljava/lang/ThreadLocal;"
    },
    {
      "name": "l",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "m",
      "descriptor": "Lgh;"
    },
    {
      "name": "n",
      "descriptor": "Lcei;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lceg$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(DDDDDD)Lddh;",
      "parameters": [
        {
          "index": 0,
          "name": "pX1"
        },
        {
          "index": 2,
          "name": "pY1"
        },
        {
          "index": 4,
          "name": "pZ1"
        },
        {
          "index": 6,
          "name": "pX2"
        },
        {
          "index": 8,
          "name": "pY2"
        },
        {
          "index": 10,
          "name": "pZ2"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)Lceh;",
      "parameters": [
        {
          "index": 0,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lfx;I)V",
      "javadoc": [
        "Spawns the given amount of experience into the World as XP orb entities"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lfx;Lbmb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lael;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pTagIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbks;Lgj;)V",
      "javadoc": [
        "returns a list of blocks with the same ID, but different meta (eg: wood returns 4 blocks)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pGroup"
        },
        {
          "index": 2,
          "name": "pItems"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lblx;)Lbuo;",
      "parameters": [
        {
          "index": 0,
          "name": "pItemIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbrc;Ljava/util/List;Lbnl;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pTooltip"
        },
        {
          "index": 4,
          "name": "pFlagIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbny;)Lceh;",
      "parameters": [
        {
          "index": 1,
          "name": "pContext"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrc;Laqa;)V",
      "javadoc": [
        "Called when an Entity lands on this Block. This method *must* update motionY because the entity will not do that on its own"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrc;Lfx;Lceh;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrp;)Z",
      "javadoc": [
        "Return whether this block can drop from an explosion."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pExplosionIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lbfw;Lfx;Lceh;Lccj;Lbmb;)V",
      "javadoc": [
        "Spawns the block's drops in the world. By the time this is called the Block has possibly been set to air via Block.removedByPlayer"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPlayer"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pState"
        },
        {
          "index": 5,
          "name": "pBlockEntity"
        },
        {
          "index": 6,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Laqa;)V",
      "javadoc": [
        "Called when the given entity walks on this Block"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pEntityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Laqa;F)V",
      "javadoc": [
        "Block's chance to react to a living entity falling on it."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pEntityIn"
        },
        {
          "index": 4,
          "name": "pFallDistance"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lbmb;)V",
      "javadoc": [
        "Spawns the given stack into the World at the given position, respecting the doTileDrops gamerule"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pLevelIn"
        },
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lbrp;)V",
      "javadoc": [
        "Called when this Block is destroyed by an Explosion"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pExplosionIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lceh;Laqm;Lbmb;)V",
      "javadoc": [
        "Called by ItemBlocks after a block is set in the world, to allow post-place logic"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        },
        {
          "index": 4,
          "name": "pPlacer"
        },
        {
          "index": 5,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrx;Lfx;Lceh;Lbfw;)V",
      "javadoc": [
        "Called before the Block is set to air in the world. Called regardless of if the player's tool can actually collect this block"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        },
        {
          "index": 4,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbry;Lfx;Lbmb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbry;Lfx;Lceh;)V",
      "javadoc": [
        "Called after a player destroys this Block - the posiiton pos may no longer hold the state indicated."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrz;)I",
      "javadoc": [
        "How many world ticks before ticking"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbrz;Lfx;Lgc;)Z",
      "javadoc": [
        "Returns true if the block can stay on position if attached to given side"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pLevelIn"
        },
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pDirectionIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbuo;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Laag;Lfx;Lccj;)Ljava/util/List;",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pBlockEntityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Laag;Lfx;Lccj;Laqa;Lbmb;)Ljava/util/List;",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pBlockEntityIn"
        },
        {
          "index": 4,
          "name": "pEntityIn"
        },
        {
          "index": 5,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Lccj;Laqa;Lbmb;)V",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pBlockEntityIn"
        },
        {
          "index": 4,
          "name": "pEntityIn"
        },
        {
          "index": 5,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbrx;Lfx;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStateIn"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lbry;Lfx;Lccj;)V",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pBlockEntityIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lceh;Lbrx;Lfx;)Lceh;",
      "parameters": [
        {
          "index": 0,
          "name": "pOldState"
        },
        {
          "index": 1,
          "name": "pNewState"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lceh;Lbry;Lfx;I)V",
      "javadoc": [
        "Replaces oldState with newState, possibly playing effects and creating drops. Flags are as in {@link World#setBlockState}"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pOldState"
        },
        {
          "index": 1,
          "name": "pNewState"
        },
        {
          "index": 2,
          "name": "pLevelIn"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pFlags"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lceh;Lbry;Lfx;II)V",
      "parameters": [
        {
          "index": 0,
          "name": "pOldState"
        },
        {
          "index": 1,
          "name": "pNewState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pFlags"
        },
        {
          "index": 5,
          "name": "pRecursionLeft"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcei$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBuilder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lddh;)Z",
      "javadoc": [
        "Gets whether the provided {@link VoxelShape} is opaque"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pShape"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lddh;Lgc;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pShape"
        },
        {
          "index": 1,
          "name": "pSide"
        }
      ]
    },
    {
      "name": "a_",
      "descriptor": "(Lceh;)Z",
      "javadoc": [
        "Returns whether or not this block is of a type that needs random ticking. Called for ref-counting purposes by ExtendedBlockStorage in order to broadly cull a chunk from the random chunk update list for efficiency's sake."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "ai_",
      "descriptor": "()Z",
      "javadoc": [
        "Return true if an entity can be spawned inside the block (used to get the player's bed spawn location)"
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbrx;Lfx;Lbmb;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lbuo;)Z",
      "javadoc": [
        "Checks if the provided block is in the hardcoded list of blocks that will not attach to fences/panes/walls"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pBlockIn"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;Lbrc;Lfx;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pReader"
        },
        {
          "index": 3,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;Lbry;Lfx;)Lceh;",
      "javadoc": [
        "With the provided block state, performs neighbor checks for all neighboring blocks to get an \"adjusted\" blockstate for placement in the world, if the current state is not valid."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pCurrentState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lceh;Lcyv$a;)V"
    },
    {
      "name": "c",
      "descriptor": "()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;"
    },
    {
      "name": "c",
      "descriptor": "(Lbrc;Lfx;)Z",
      "javadoc": [
        "Returns true if the block in given position has a solid top face"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pLevelIn"
        },
        {
          "index": 1,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbrx;Lfx;)V",
      "javadoc": [
        "Called similar to random ticks, but only when it is raining."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbrx;Lfx;Lbmb;)V"
    },
    {
      "name": "c",
      "descriptor": "(Lceh;Lbrc;Lfx;Lgc;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pAdjacentState"
        },
        {
          "index": 1,
          "name": "pBlockState"
        },
        {
          "index": 2,
          "name": "pBlockAccess"
        },
        {
          "index": 3,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lceh;Lbrx;Lfx;)V",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevelIn"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "(Lbrc;Lfx;)V"
    },
    {
      "name": "f",
      "descriptor": "()F",
      "javadoc": [
        "Returns how much this block can resist explosions from the passed in entity."
      ]
    },
    {
      "name": "g",
      "descriptor": "()Lnx;"
    },
    {
      "name": "h",
      "descriptor": "()Lblx;"
    },
    {
      "name": "i",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Returns the unlocalized name of the block with \"tile.\" appended to the front."
      ]
    },
    {
      "name": "i",
      "descriptor": "(Lceh;)I",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "()F"
    },
    {
      "name": "j",
      "descriptor": "(Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "()F"
    },
    {
      "name": "k",
      "descriptor": "(Lceh;)Lcae;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "()F"
    },
    {
      "name": "m",
      "descriptor": "()Lcei;"
    },
    {
      "name": "n",
      "descriptor": "()Lceh;",
      "javadoc": [
        "Gets the default state for this block"
      ]
    },
    {
      "name": "o",
      "descriptor": "()Z"
    },
    {
      "name": "p",
      "descriptor": "()Lbuo;"
    },
    {
      "name": "toString",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}