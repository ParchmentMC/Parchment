{
  "name": "jp",
  "fields": [
    {
      "name": "b",
      "descriptor": "Ljava/nio/file/Path;"
    },
    {
      "name": "c",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "d",
      "descriptor": "Lhl;"
    },
    {
      "name": "e",
      "descriptor": "Ljava/util/List;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lhl;)V"
    },
    {
      "name": "a",
      "descriptor": "()Ljava/lang/String;",
      "javadoc": [
        "Gets a name for this provider, to use in logging."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lhn;)V",
      "javadoc": [
        "Performs this provider's action."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCache"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lhn;Ljava/nio/file/Path;Ljp$b;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lhn;Ljp$b;Ljava/nio/file/Path;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDirectory"
        },
        {
          "index": 2,
          "name": "pTaskResult"
        },
        {
          "index": 3,
          "name": "pPathIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/String;Lmd;)Lmd;",
      "parameters": [
        {
          "index": 1,
          "name": "pFileName"
        },
        {
          "index": 2,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/nio/file/Path;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/nio/file/Path;Ljava/lang/String;)Ljp$b;",
      "parameters": [
        {
          "index": 1,
          "name": "pFilePath"
        },
        {
          "index": 2,
          "name": "pFileName"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;",
      "javadoc": [
        "Gets the name of the given SNBT file, based on its path and the input directory. The result does not have the \".snbt\" extension."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pInputFolder"
        },
        {
          "index": 2,
          "name": "pFileIn"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;Ljava/nio/file/Path;Ljava/nio/file/Path;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljp$a;)Ljp;",
      "parameters": [
        {
          "index": 1,
          "name": "pTransformer"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljp$b;"
    }
  ]
}