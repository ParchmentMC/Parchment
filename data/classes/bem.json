{
  "name": "bem",
  "fields": [
    {
      "name": "bo",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "bp",
      "descriptor": "Lcom/google/common/collect/ImmutableList;"
    },
    {
      "name": "bq",
      "descriptor": "Lus;"
    },
    {
      "name": "br",
      "descriptor": "I"
    },
    {
      "name": "bs",
      "descriptor": "I"
    },
    {
      "name": "bt",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "B",
      "descriptor": "(Laqa;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "M",
      "descriptor": "()V"
    },
    {
      "name": "N",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lapy;)Lapy;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pMate"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ladp;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lapk;F)Z",
      "javadoc": [
        "Called when the entity is attacked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSource"
        },
        {
          "index": 2,
          "name": "pAmount"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbsk;Laos;Laqp;Larc;Lmd;)Larc;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcom/mojang/serialization/Dynamic;)Larf;",
      "parameters": [
        {
          "index": 1,
          "name": "pDynamic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lfx;Lbrz;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pLevel"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "av",
      "descriptor": "()Ladp;"
    },
    {
      "name": "aw",
      "descriptor": "()Ladp;"
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;Laot;)Laou;",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pHand"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "bc",
      "descriptor": "()D",
      "javadoc": [
        "Returns the Y offset from the entity's position for any entity riding this one."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Laag;)V"
    },
    {
      "name": "c",
      "descriptor": "(Laqe;Lbry;Laqp;Lfx;Ljava/util/Random;)Z"
    },
    {
      "name": "cJ",
      "descriptor": "()Larf;"
    },
    {
      "name": "cK",
      "descriptor": "()Larf$b;"
    },
    {
      "name": "cV",
      "descriptor": "()Z",
      "javadoc": [
        "Entity won't drop items or experience points if this returns false"
      ]
    },
    {
      "name": "cu",
      "descriptor": "()Ladr;"
    },
    {
      "name": "d",
      "descriptor": "(Lbfw;)I",
      "javadoc": [
        "Get the experience points the entity currently has."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Laqm;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pEntity"
        }
      ]
    },
    {
      "name": "eK",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "eL",
      "descriptor": "()Z"
    },
    {
      "name": "eM",
      "descriptor": "()I"
    },
    {
      "name": "eN",
      "descriptor": "()Z"
    },
    {
      "name": "eO",
      "descriptor": "()Z"
    },
    {
      "name": "eP",
      "descriptor": "()Z"
    },
    {
      "name": "eU",
      "descriptor": "()F"
    },
    {
      "name": "eV",
      "descriptor": "()Z"
    },
    {
      "name": "h",
      "descriptor": "(D)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistanceToClosestPlayer"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "k",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "m",
      "descriptor": "()V",
      "javadoc": [
        "This is called when Entity's growing age timer reaches 0 (negative values are considered as a child, positive as an adult)"
      ]
    },
    {
      "name": "t",
      "descriptor": "(Z)V"
    },
    {
      "name": "u",
      "descriptor": "(Z)V"
    }
  ]
}