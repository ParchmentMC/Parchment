{
  "name": "aex",
  "fields": [
    {
      "name": "d",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "e",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "f",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "g",
      "descriptor": "J"
    },
    {
      "name": "h",
      "descriptor": "J"
    },
    {
      "name": "i",
      "descriptor": "J"
    },
    {
      "name": "j",
      "descriptor": "I"
    },
    {
      "name": "k",
      "descriptor": "I"
    },
    {
      "name": "l",
      "descriptor": "I"
    },
    {
      "name": "m",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "n",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "o",
      "descriptor": "Ljava/net/DatagramSocket;"
    },
    {
      "name": "p",
      "descriptor": "[B"
    },
    {
      "name": "q",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "r",
      "descriptor": "Ljava/lang/String;"
    },
    {
      "name": "s",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "t",
      "descriptor": "Laes;"
    },
    {
      "name": "u",
      "descriptor": "J"
    },
    {
      "name": "v",
      "descriptor": "Lxj;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lxj;I)V"
    },
    {
      "name": "a",
      "descriptor": "()Z"
    },
    {
      "name": "a",
      "descriptor": "(JLaex$a;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/lang/Exception;)V",
      "javadoc": [
        "Stops the query server and reports the given Exception"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "exception"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/net/DatagramPacket;)Z",
      "javadoc": [
        "Parses an incoming DatagramPacket, returning true if the packet was valid"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "requestPacket"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/net/SocketAddress;)[B",
      "javadoc": [
        "Returns the request ID provided by the authorized client"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "address"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lxj;)Laex;"
    },
    {
      "name": "a",
      "descriptor": "([BLjava/net/DatagramPacket;)V",
      "javadoc": [
        "Sends a byte array as a DatagramPacket response to the client who sent the given DatagramPacket"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "data"
        },
        {
          "index": 2,
          "name": "requestPacket"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/net/DatagramPacket;)[B",
      "javadoc": [
        "Creates a query response as a byte array for the specified query DatagramPacket"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "requestPacket"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;",
      "javadoc": [
        "Returns true if the client has a valid auth, otherwise false"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "requestPacket"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()V",
      "javadoc": [
        "Removes all clients whose auth is no longer valid"
      ]
    },
    {
      "name": "d",
      "descriptor": "(Ljava/net/DatagramPacket;)V",
      "javadoc": [
        "Sends an auth challenge DatagramPacket to the client and adds the client to the queryClients map"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "requestPacket"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "()Z",
      "javadoc": [
        "Initializes the query system by binding it to a port"
      ]
    },
    {
      "name": "run",
      "descriptor": "()V"
    }
  ]
}