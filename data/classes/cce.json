{
  "name": "cce",
  "fields": [
    {
      "name": "a",
      "descriptor": "[[Laps;",
      "javadoc": [
        "List of effects that Beacons can apply"
      ]
    },
    {
      "name": "b",
      "descriptor": "Ljava/util/Set;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/util/List;",
      "javadoc": [
        "A list of beam segments for this beacon"
      ]
    },
    {
      "name": "g",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "h",
      "descriptor": "I",
      "javadoc": [
        "Level of this beacon's pyramid."
      ]
    },
    {
      "name": "i",
      "descriptor": "I"
    },
    {
      "name": "j",
      "descriptor": "Laps;",
      "javadoc": [
        "Primary potion effect given by this beacon"
      ]
    },
    {
      "name": "k",
      "descriptor": "Laps;",
      "javadoc": [
        "Secondary potion effect given by this beacon."
      ]
    },
    {
      "name": "l",
      "descriptor": "Lnr;",
      "javadoc": [
        "The custom name for this beacon. This was unused until 1.14 see https://bugs.mojang.com/browse/MC-124395"
      ]
    },
    {
      "name": "m",
      "descriptor": "Laow;"
    },
    {
      "name": "n",
      "descriptor": "Lbil;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "()V"
    },
    {
      "name": "a",
      "descriptor": "()Low;",
      "javadoc": [
        "Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}"
      ]
    },
    {
      "name": "a",
      "descriptor": "(I)Laps;"
    },
    {
      "name": "a",
      "descriptor": "(III)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBeaconX"
        },
        {
          "index": 2,
          "name": "pBeaconY"
        },
        {
          "index": 3,
          "name": "pBeaconZ"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ladp;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pSound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcce;)I"
    },
    {
      "name": "a",
      "descriptor": "(Lcce;I)I"
    },
    {
      "name": "a",
      "descriptor": "(Lcce;Laps;)Laps;"
    },
    {
      "name": "a",
      "descriptor": "(Lceh;Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pNbt"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)Lmd;",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lnr;)V",
      "javadoc": [
        "Sets the custom name for this beacon."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pAname"
        }
      ]
    },
    {
      "name": "aj_",
      "descriptor": "()V"
    },
    {
      "name": "al_",
      "descriptor": "()V",
      "javadoc": [
        "invalidates a tile entity"
      ]
    },
    {
      "name": "b",
      "descriptor": "()Lmd;",
      "javadoc": [
        "Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}"
      ]
    },
    {
      "name": "b",
      "descriptor": "(I)Laps;",
      "parameters": [
        {
          "index": 0,
          "name": "pEffectId"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lcce;)Laps;"
    },
    {
      "name": "b",
      "descriptor": "(Lcce;Laps;)Laps;"
    },
    {
      "name": "c",
      "descriptor": "(Lcce;)Laps;"
    },
    {
      "name": "createMenu",
      "descriptor": "(ILbfv;Lbfw;)Lbic;"
    },
    {
      "name": "d",
      "descriptor": "()Lnr;"
    },
    {
      "name": "d",
      "descriptor": "(Lcce;)Ljava/util/List;"
    },
    {
      "name": "f",
      "descriptor": "()Ljava/util/List;"
    },
    {
      "name": "h",
      "descriptor": "()I"
    },
    {
      "name": "i",
      "descriptor": "()D"
    },
    {
      "name": "j",
      "descriptor": "()V"
    }
  ]
}