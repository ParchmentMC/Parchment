{
  "name": "cgl",
  "fields": [
    {
      "name": "F",
      "descriptor": "[Ldnt;"
    },
    {
      "name": "G",
      "descriptor": "[Ldnt;"
    },
    {
      "name": "H",
      "descriptor": "[I"
    },
    {
      "name": "I",
      "descriptor": "Lbzo;"
    },
    {
      "name": "J",
      "descriptor": "Lcks;"
    },
    {
      "name": "a",
      "descriptor": "Lclm;"
    },
    {
      "name": "b",
      "descriptor": "Lclq;"
    },
    {
      "name": "c",
      "descriptor": "Lclq;"
    },
    {
      "name": "d",
      "descriptor": "Lclj;"
    },
    {
      "name": "e",
      "descriptor": "Ldnt;"
    },
    {
      "name": "f",
      "descriptor": "Ldnt;"
    },
    {
      "name": "g",
      "descriptor": "Ldnt;"
    },
    {
      "name": "h",
      "descriptor": "Ldnt;"
    },
    {
      "name": "i",
      "descriptor": "Ldnt;"
    },
    {
      "name": "j",
      "descriptor": "Ldnt;"
    },
    {
      "name": "k",
      "descriptor": "Ldnt;"
    },
    {
      "name": "l",
      "descriptor": "Ldnt;"
    },
    {
      "name": "m",
      "descriptor": "Ldnt;"
    },
    {
      "name": "n",
      "descriptor": "Ldnt;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Lcks;Lckr$c;)V"
    },
    {
      "name": "a",
      "descriptor": "(ILdnt;Ldnt;Ldnt;Ldnt;Ldnt;)Ldnt;",
      "javadoc": [
        "combines the shapes according to the mode set in the bitfield"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pBitfield"
        },
        {
          "index": 1,
          "name": "pSlabShape"
        },
        {
          "index": 2,
          "name": "pNwCorner"
        },
        {
          "index": 3,
          "name": "pNeCorner"
        },
        {
          "index": 4,
          "name": "pSwCorner"
        },
        {
          "index": 5,
          "name": "pSeCorner"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbsp;)Lcks;",
      "parameters": [
        {
          "index": 1,
          "name": "pContext"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lbwh;)V",
      "javadoc": [
        "Called when this Block is destroyed by an Explosion"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pExplosion"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbwp;Lgg;Lcks;Latf;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbwq;Lgg;Lcks;)V",
      "javadoc": [
        "Called after a player destroys this Block - the posiiton pos may no longer hold the state indicated."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pState"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Labr;Lgg;Ljava/util/Random;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbvt;Lgg;Ldhb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pType"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbvt;Lgg;Ldnf;)Ldnt;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pContext"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lbkd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lbkd;Larz;Ldmw;)Lasa;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pPlayer"
        },
        {
          "index": 5,
          "name": "pHand"
        },
        {
          "index": 6,
          "name": "pHit"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Lcks;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pNewState"
        },
        {
          "index": 5,
          "name": "pIsMoving"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lbwp;Lgg;Ljava/util/Random;)V",
      "javadoc": [
        "Called periodically clientside on blocks near the player to show effects (like furnace fire particles). Note that this method is unrelated to {@link randomTick} and {@link #needsRandomTick}, and will always be called regardless of whether the block can receive random update ticks"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRand"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lcdx;)Lcks;",
      "javadoc": [
        "Returns the blockstate with the given mirror of the passed blockstate. If inapplicable, returns the passed blockstate.",
        "@deprecated call via {@link IBlockState#withMirror(Mirror)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pMirror"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lcfk;)Lcks;",
      "javadoc": [
        "Returns the blockstate with the given rotation from the passed blockstate. If inapplicable, returns the passed blockstate.",
        "@deprecated call via {@link IBlockState#withRotation(Rotation)} whenever possible. Implementing/overriding is fine."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pRot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcks;Lgl;Lcks;Lbwq;Lgg;Lgg;)Lcks;",
      "javadoc": [
        "Update the provided state given the provided neighbor facing and neighbor state, returning a new state.",
        "For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.",
        "Note that this method should ideally consider only the specific face passed in."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pFacing"
        },
        {
          "index": 3,
          "name": "pFacingState"
        },
        {
          "index": 4,
          "name": "pLevel"
        },
        {
          "index": 5,
          "name": "pCurrentPos"
        },
        {
          "index": 6,
          "name": "pFacingPos"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lckt$a;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBuilder"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldnt;Ldnt;Ldnt;Ldnt;Ldnt;)[Ldnt;",
      "parameters": [
        {
          "index": 0,
          "name": "pSlabShape"
        },
        {
          "index": 1,
          "name": "pNwCorner"
        },
        {
          "index": 2,
          "name": "pNeCorner"
        },
        {
          "index": 3,
          "name": "pSwCorner"
        },
        {
          "index": 4,
          "name": "pSeCorner"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ldnt;Ldnt;Ldnt;Ldnt;Ldnt;I)Ldnt;"
    },
    {
      "name": "b",
      "descriptor": "(I)[Ldnt;"
    },
    {
      "name": "b",
      "descriptor": "(Lcks;Labr;Lgg;Ljava/util/Random;)V",
      "javadoc": [
        "Performs a random tick on a block."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pRandom"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lcks;Lbwp;Lgg;Lcks;Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pPos"
        },
        {
          "index": 4,
          "name": "pOldState"
        },
        {
          "index": 5,
          "name": "pIsMoving"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lcks;Lbvt;Lgg;Lgl;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pPos"
        },
        {
          "index": 3,
          "name": "pFace"
        }
      ]
    },
    {
      "name": "c_",
      "descriptor": "(Lcks;)Ldes;",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "e_",
      "descriptor": "(Lcks;)Z",
      "javadoc": [
        "Returns whether or not this block is of a type that needs random ticking. Called for ref-counting purposes by ExtendedBlockStorage in order to broadly cull a chunk from the random chunk update list for efficiency's sake."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "f",
      "descriptor": "()F",
      "javadoc": [
        "Returns how much this block can resist explosions from the passed in entity."
      ]
    },
    {
      "name": "g_",
      "descriptor": "(Lcks;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lcks;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lcks;Lbvt;Lgg;)Lcma;",
      "javadoc": [
        "Returns a stair shape property based on the surrounding stairs from the given blockstate and position"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pState"
        },
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pPos"
        }
      ]
    },
    {
      "name": "n",
      "descriptor": "(Lcks;)I",
      "parameters": [
        {
          "index": 1,
          "name": "pState"
        }
      ]
    }
  ]
}