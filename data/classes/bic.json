{
  "name": "bic",
  "fields": [
    {
      "name": "a",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "b",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "Lgj;"
    },
    {
      "name": "d",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "e",
      "descriptor": "Lbje;"
    },
    {
      "name": "f",
      "descriptor": "S"
    },
    {
      "name": "g",
      "descriptor": "I"
    },
    {
      "name": "h",
      "descriptor": "I"
    },
    {
      "name": "i",
      "descriptor": "Ljava/util/Set;"
    },
    {
      "name": "j",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "k",
      "descriptor": "Ljava/util/Set;"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lbje;I)V"
    },
    {
      "name": "a",
      "descriptor": "()Lbje;"
    },
    {
      "name": "a",
      "descriptor": "(I)Lbjr;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(II)V",
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        },
        {
          "index": 2,
          "name": "pData"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(IILbik;Lbfw;)Lbmb;",
      "parameters": [
        {
          "index": 1,
          "name": "pSlotId"
        },
        {
          "index": 2,
          "name": "pDragType"
        },
        {
          "index": 3,
          "name": "pClickType"
        },
        {
          "index": 4,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILbfw;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pDragMode"
        },
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(ILbmb;)V",
      "javadoc": [
        "Puts an ItemStack in a slot."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSlotID"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laon;)V",
      "javadoc": [
        "Callback for when the crafting matrix is changed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pInventory"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laon;I)V",
      "parameters": [
        {
          "index": 0,
          "name": "pInventory"
        },
        {
          "index": 1,
          "name": "pMinSize"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfv;)S",
      "javadoc": [
        "Gets a unique transaction ID. Parameter is unused."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pInvPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;)Z",
      "javadoc": [
        "Determines whether supplied player can use this container"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;I)Z",
      "javadoc": [
        "Handles the given Button-click on the server, currently only used by enchanting. Name is for legacy."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Lbrx;Laon;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pLevel"
        },
        {
          "index": 3,
          "name": "pInventory"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbfw;Z)V",
      "javadoc": [
        "sets whether the player can craft in this inventory or not"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pCanCraft"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbil;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pArray"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbil;I)V",
      "parameters": [
        {
          "index": 0,
          "name": "pIntArray"
        },
        {
          "index": 1,
          "name": "pMinSize"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbim;Lbfw;Lbuo;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pLevelPos"
        },
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pTargetBlock"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbin;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pListener"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbiq;)Lbiq;",
      "parameters": [
        {
          "index": 1,
          "name": "pIntValue"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbjr;)Lbjr;",
      "javadoc": [
        "Adds an item slot to this container"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbjr;Lbmb;Z)Z",
      "javadoc": [
        "Checks if it's possible to add the given itemstack to the given slot."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pSlot"
        },
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pStackSizeMatters"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;IIZ)Z",
      "javadoc": [
        "Merges provided ItemStack with the first avaliable one in the container/player inventor between minIndex (included) and maxIndex (excluded). Args : stack, minIndex, maxIndex, negativDirection. /!\\ the Container implementation do not check if the item is valid for the slot"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pStartIndex"
        },
        {
          "index": 3,
          "name": "pEndIndex"
        },
        {
          "index": 4,
          "name": "pReverseDirection"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbjr;)Z",
      "javadoc": [
        "Called to determine if the current slot is valid for the stack merging (double-click) code. The stack passed in is null for the initial slot that was double-clicked."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        },
        {
          "index": 2,
          "name": "pSlot"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbmb;Lbmb;)Z",
      "parameters": [
        {
          "index": 0,
          "name": "pStack1"
        },
        {
          "index": 1,
          "name": "pStack2"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbuo;Lbfw;Lbrx;Lfx;)Ljava/lang/Boolean;"
    },
    {
      "name": "a",
      "descriptor": "(Lccj;)I",
      "javadoc": [
        "Like the version that takes an inventory. If the given TileEntity is not an Inventory, 0 is returned instead."
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pTe"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Set;ILbmb;I)V",
      "javadoc": [
        "Compute the new stack size, Returns the stack with the new size. Args : dragSlots, dragMode, dragStack, slotStackSize"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pDragSlots"
        },
        {
          "index": 1,
          "name": "pDragMode"
        },
        {
          "index": 2,
          "name": "pStack"
        },
        {
          "index": 3,
          "name": "pSlotStackSize"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "()Lgj;",
      "javadoc": [
        "returns a list if itemStacks, for each slot."
      ]
    },
    {
      "name": "b",
      "descriptor": "(I)I",
      "javadoc": [
        "Extracts the drag mode. Args : eventButton. Return (0 : evenly split, 1 : one item by slot, 2 : not used ?)"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pEventButton"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(II)I"
    },
    {
      "name": "b",
      "descriptor": "(IILbik;Lbfw;)Lbmb;"
    },
    {
      "name": "b",
      "descriptor": "(ILbmb;)V"
    },
    {
      "name": "b",
      "descriptor": "(Laon;)I",
      "parameters": [
        {
          "index": 0,
          "name": "pInv"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laon;I)Lbjr;"
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;)V",
      "javadoc": [
        "Called when the container is closed."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;I)Lbmb;",
      "javadoc": [
        "Handle when the stack in slot {@code index} is shift-clicked. Normally this moves the stack between the player inventory and the other inventory(s)."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pIndex"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbin;)V",
      "javadoc": [
        "Remove the given Listener. Method name is for legacy."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pListener"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbjr;)Z",
      "javadoc": [
        "Returns true if the player can \"drag-spilt\" items into this slot,. returns true by default. Called to check if the slot can be added to a list of Slots to split the held ItemStack across."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pSlot"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "()V",
      "javadoc": [
        "Looks for changes made in the container, sends them to every listener."
      ]
    },
    {
      "name": "c",
      "descriptor": "(I)I",
      "javadoc": [
        "Args : clickedButton, Returns (0 : start drag, 1 : add slot, 2 : end drag)"
      ],
      "parameters": [
        {
          "index": 0,
          "name": "pClickedButton"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "(Lbfw;)Z",
      "javadoc": [
        "gets whether or not the player can craft in this inventory or not"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "d",
      "descriptor": "()V",
      "javadoc": [
        "Reset the drag fields"
      ]
    },
    {
      "name": "e",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "f",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}