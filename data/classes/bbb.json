{
  "name": "bbb",
  "fields": [
    {
      "name": "bA",
      "descriptor": "Lus;"
    },
    {
      "name": "bB",
      "descriptor": "I"
    },
    {
      "name": "bC",
      "descriptor": "I"
    },
    {
      "name": "bD",
      "descriptor": "I"
    },
    {
      "name": "bE",
      "descriptor": "Z"
    },
    {
      "name": "bF",
      "descriptor": "F"
    },
    {
      "name": "bG",
      "descriptor": "F"
    },
    {
      "name": "bH",
      "descriptor": "F"
    },
    {
      "name": "bI",
      "descriptor": "F"
    },
    {
      "name": "bJ",
      "descriptor": "F"
    },
    {
      "name": "bK",
      "descriptor": "F"
    },
    {
      "name": "bo",
      "descriptor": "I"
    },
    {
      "name": "bp",
      "descriptor": "I"
    },
    {
      "name": "bq",
      "descriptor": "Z"
    },
    {
      "name": "br",
      "descriptor": "Lapa;"
    },
    {
      "name": "bs",
      "descriptor": "I",
      "javadoc": [
        "The higher this value, the more likely the horse is to be tamed next time a player rides it."
      ]
    },
    {
      "name": "bt",
      "descriptor": "F"
    },
    {
      "name": "bu",
      "descriptor": "Z"
    },
    {
      "name": "bv",
      "descriptor": "I",
      "javadoc": [
        "Used to determine the sound that the horse should make when it steps"
      ]
    },
    {
      "name": "bw",
      "descriptor": "Ljava/util/function/Predicate;"
    },
    {
      "name": "bx",
      "descriptor": "Lazg;"
    },
    {
      "name": "by",
      "descriptor": "Lbon;"
    },
    {
      "name": "bz",
      "descriptor": "Lus;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Laqe;Lbrx;)V"
    },
    {
      "name": "A",
      "descriptor": "(F)F"
    },
    {
      "name": "D",
      "descriptor": "()I",
      "javadoc": [
        "Get number of ticks, at least during which the living entity will be silent."
      ]
    },
    {
      "name": "I",
      "descriptor": "()Ladp;"
    },
    {
      "name": "L_",
      "descriptor": "()Z"
    },
    {
      "name": "M_",
      "descriptor": "()Z"
    },
    {
      "name": "P_",
      "descriptor": "()Z"
    },
    {
      "name": "Q_",
      "descriptor": "()F"
    },
    {
      "name": "a",
      "descriptor": "(B)V",
      "javadoc": [
        "Handler for {@link World#setEntityState}"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pId"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Laag;Lapy;)Lapy;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pMate"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ladr;)V"
    },
    {
      "name": "a",
      "descriptor": "(Laon;)V",
      "javadoc": [
        "Called by InventoryBasic.onInventoryChanged() on a array that is never filled."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pInvBasic"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lapy;Lbbb;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lazz;)Z",
      "javadoc": [
        "Returns true if the mob is currently able to mate with the specified mob."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pOtherAnimal"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbsk;Laos;Laqp;Larc;Lmd;)Larc;",
      "parameters": [
        {
          "index": 1,
          "name": "pLevel"
        },
        {
          "index": 2,
          "name": "pDifficulty"
        },
        {
          "index": 3,
          "name": "pReason"
        },
        {
          "index": 4,
          "name": "pSpawnData"
        },
        {
          "index": 5,
          "name": "pDataTag"
        }
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lcae;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ldcn;Laqm;)Ldcn;"
    },
    {
      "name": "a",
      "descriptor": "(Lmd;)V",
      "javadoc": [
        "(abstract) Protected helper method to read subclass entity data from NBT."
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "aU",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should push and be pushed by other entities when colliding."
      ]
    },
    {
      "name": "a_",
      "descriptor": "(F)V"
    },
    {
      "name": "a_",
      "descriptor": "(ILbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pInventorySlot"
        },
        {
          "index": 2,
          "name": "pItemStack"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(FF)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pJumpPower"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqm;)Ldcn;",
      "parameters": [
        {
          "index": 1,
          "name": "pLivingEntity"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Laqx;Laqb;)F",
      "parameters": [
        {
          "index": 1,
          "name": "pPose"
        },
        {
          "index": 2,
          "name": "pSize"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbfw;Lbmb;)Laou;"
    },
    {
      "name": "b",
      "descriptor": "(Lfx;Lceh;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPos"
        },
        {
          "index": 2,
          "name": "pBlock"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Ljava/util/UUID;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pUniqueId"
        }
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lmd;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pCompound"
        }
      ]
    },
    {
      "name": "b_",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pJumpPower"
        }
      ]
    },
    {
      "name": "c",
      "descriptor": "()V"
    },
    {
      "name": "c",
      "descriptor": "(Lbfw;Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        },
        {
          "index": 2,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "c_",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this entity should move as if it were on a ladder (either because it's actually on a ladder, or for AI reasons)"
      ]
    },
    {
      "name": "cm",
      "descriptor": "()Laqa;",
      "javadoc": [
        "For vehicles, the first passenger is generally considered the controller and \"drives\" the vehicle. For example, Pigs, Horses, and Boats are generally \"steered\" by the controlling passenger."
      ]
    },
    {
      "name": "d",
      "descriptor": "(IZ)V"
    },
    {
      "name": "dG",
      "descriptor": "()F",
      "javadoc": [
        "Returns the volume for the sounds this mob makes."
      ]
    },
    {
      "name": "dI",
      "descriptor": "()Z",
      "javadoc": [
        "Dead and sleeping entities cannot move"
      ]
    },
    {
      "name": "dn",
      "descriptor": "()V"
    },
    {
      "name": "dq",
      "descriptor": "()Ladp;"
    },
    {
      "name": "e",
      "descriptor": "()V"
    },
    {
      "name": "e",
      "descriptor": "(FF)I",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        },
        {
          "index": 2,
          "name": "pDamageMultiplier"
        }
      ]
    },
    {
      "name": "e",
      "descriptor": "(Lapk;)Ladp;",
      "parameters": [
        {
          "index": 1,
          "name": "pDamageSource"
        }
      ]
    },
    {
      "name": "eK",
      "descriptor": "()V"
    },
    {
      "name": "eL",
      "descriptor": "()V"
    },
    {
      "name": "eM",
      "descriptor": "()V"
    },
    {
      "name": "eN",
      "descriptor": "()I"
    },
    {
      "name": "eO",
      "descriptor": "()V"
    },
    {
      "name": "eU",
      "descriptor": "()V"
    },
    {
      "name": "eV",
      "descriptor": "()V"
    },
    {
      "name": "eW",
      "descriptor": "()Z"
    },
    {
      "name": "eX",
      "descriptor": "()Ljava/util/UUID;"
    },
    {
      "name": "eY",
      "descriptor": "()Z"
    },
    {
      "name": "eZ",
      "descriptor": "()Z"
    },
    {
      "name": "eq",
      "descriptor": "()I",
      "javadoc": [
        "Will return how many at most can spawn in a chunk at once."
      ]
    },
    {
      "name": "er",
      "descriptor": "()Z",
      "javadoc": [
        "returns true if all the conditions for steering the entity are met. For pigs, this is true if it is being ridden by a player and the player is holding a carrot-on-a-stick"
      ]
    },
    {
      "name": "f",
      "descriptor": "(Lbfw;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayerEntity"
        }
      ]
    },
    {
      "name": "fa",
      "descriptor": "()Z"
    },
    {
      "name": "fb",
      "descriptor": "()Z"
    },
    {
      "name": "fc",
      "descriptor": "()I"
    },
    {
      "name": "fd",
      "descriptor": "()V"
    },
    {
      "name": "fe",
      "descriptor": "()V"
    },
    {
      "name": "ff",
      "descriptor": "()D"
    },
    {
      "name": "fg",
      "descriptor": "()Ladp;"
    },
    {
      "name": "fh",
      "descriptor": "()Ladp;"
    },
    {
      "name": "fi",
      "descriptor": "()Lark$a;"
    },
    {
      "name": "fj",
      "descriptor": "()I"
    },
    {
      "name": "fk",
      "descriptor": "()V"
    },
    {
      "name": "fl",
      "descriptor": "()Z"
    },
    {
      "name": "fm",
      "descriptor": "()V"
    },
    {
      "name": "fn",
      "descriptor": "()V"
    },
    {
      "name": "fo",
      "descriptor": "()Z",
      "javadoc": [
        "Return true if the horse entity ready to mate. (no rider, not riding, tame, adult, not steril...)"
      ]
    },
    {
      "name": "fp",
      "descriptor": "()F",
      "javadoc": [
        "Returns randomized max health"
      ]
    },
    {
      "name": "fq",
      "descriptor": "()D",
      "javadoc": [
        "Returns randomized jump strength"
      ]
    },
    {
      "name": "fr",
      "descriptor": "()D",
      "javadoc": [
        "Returns randomized movement speed"
      ]
    },
    {
      "name": "fs",
      "descriptor": "()Z"
    },
    {
      "name": "ft",
      "descriptor": "()Z"
    },
    {
      "name": "g",
      "descriptor": "(Ldcn;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pTravelVector"
        }
      ]
    },
    {
      "name": "h",
      "descriptor": "(Lbfw;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "i",
      "descriptor": "(Laqm;)Z"
    },
    {
      "name": "i",
      "descriptor": "(Lbfw;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pPlayer"
        }
      ]
    },
    {
      "name": "j",
      "descriptor": "()V",
      "javadoc": [
        "Called to update the entity's position/logic."
      ]
    },
    {
      "name": "k",
      "descriptor": "()V",
      "javadoc": [
        "Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn."
      ]
    },
    {
      "name": "k",
      "descriptor": "(Laqa;)V",
      "parameters": [
        {
          "index": 1,
          "name": "pPassenger"
        }
      ]
    },
    {
      "name": "k",
      "descriptor": "(Lbmb;)Z",
      "javadoc": [
        "Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)"
      ],
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "l",
      "descriptor": "(Lbmb;)Z",
      "parameters": [
        {
          "index": 1,
          "name": "pStack"
        }
      ]
    },
    {
      "name": "o",
      "descriptor": "()V"
    },
    {
      "name": "t",
      "descriptor": "(I)Z"
    },
    {
      "name": "u",
      "descriptor": "(I)V",
      "parameters": [
        {
          "index": 1,
          "name": "pTemper"
        }
      ]
    },
    {
      "name": "u",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pTamed"
        }
      ]
    },
    {
      "name": "v",
      "descriptor": "(I)I"
    },
    {
      "name": "v",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pJumping"
        }
      ]
    },
    {
      "name": "w",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pBreeding"
        }
      ]
    },
    {
      "name": "x",
      "descriptor": "(F)V",
      "parameters": [
        {
          "index": 1,
          "name": "pDistance"
        }
      ]
    },
    {
      "name": "x",
      "descriptor": "(Z)V"
    },
    {
      "name": "y",
      "descriptor": "(F)F"
    },
    {
      "name": "y",
      "descriptor": "(Z)V",
      "parameters": [
        {
          "index": 1,
          "name": "pRearing"
        }
      ]
    },
    {
      "name": "z",
      "descriptor": "(F)F"
    },
    {
      "name": "z",
      "descriptor": "(Z)V",
      "javadoc": [
        "Spawns particles for the horse entity. par1 tells whether to spawn hearts. If it is false, it spawns smoke.\""
      ]
    }
  ]
}