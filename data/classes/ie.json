{
  "name": "ie",
  "fields": [
    {
      "name": "a",
      "descriptor": "Lorg/apache/logging/log4j/Logger;"
    },
    {
      "name": "b",
      "descriptor": "Ljava/nio/file/Path;"
    },
    {
      "name": "c",
      "descriptor": "Ljava/nio/file/Path;"
    },
    {
      "name": "d",
      "descriptor": "I"
    },
    {
      "name": "e",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "f",
      "descriptor": "Ljava/util/Map;"
    },
    {
      "name": "g",
      "descriptor": "Ljava/util/Set;"
    }
  ],
  "methods": [
    {
      "name": "<clinit>",
      "descriptor": "()V"
    },
    {
      "name": "<init>",
      "descriptor": "(Ljava/nio/file/Path;Ljava/lang/String;)V"
    },
    {
      "name": "a",
      "descriptor": "()V",
      "javadoc": [
        "Writes the cache file containing the hashes of newly created files to the disk, and deletes any stale files."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/nio/file/Path;)Ljava/lang/String;",
      "javadoc": [
        "Gets the previous hash of a file, so that it doesn't need to be written to disk. Only meaningful before {@link recordHash} has been called.",
        "",
        "@return The hash that was recorded when {@link recordHash} was called on the previous run, or <code>null</code> if the file does not exist, or an empty string if the file exists but was not recorded. Note that the hash is <em>not</em> based on the current bytes on disk."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/nio/file/Path;Ljava/lang/String;)V",
      "javadoc": [
        "Inform the cache that a file has been written to {@code fileIn} with contents hashing to {@code hash}."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Map$Entry;)Ljava/lang/String;"
    },
    {
      "name": "b",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(Ljava/nio/file/Path;)Z"
    },
    {
      "name": "b",
      "descriptor": "(Ljava/nio/file/Path;Ljava/lang/String;)V"
    },
    {
      "name": "c",
      "descriptor": "()Ljava/util/stream/Stream;",
      "javadoc": [
        "Gets all files in the directory, other than the cache file itself."
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ljava/nio/file/Path;)V"
    },
    {
      "name": "d",
      "descriptor": "(Ljava/nio/file/Path;)Z"
    },
    {
      "name": "e",
      "descriptor": "(Ljava/nio/file/Path;)V"
    },
    {
      "name": "f",
      "descriptor": "(Ljava/nio/file/Path;)V"
    }
  ]
}