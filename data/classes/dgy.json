{
  "name": "dgy",
  "fields": [
    {
      "name": "a",
      "descriptor": "I"
    },
    {
      "name": "b",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "I",
      "javadoc": [
        "The index in the PathHeap. -1 if not assigned."
      ]
    },
    {
      "name": "e",
      "descriptor": "F",
      "javadoc": [
        "The total cost of all path points up to this one. Corresponds to the A* g-score."
      ]
    },
    {
      "name": "f",
      "descriptor": "F",
      "javadoc": [
        "The estimated cost from this path point to the target. Corresponds to the A* h-score."
      ]
    },
    {
      "name": "g",
      "descriptor": "F",
      "javadoc": [
        "The total cost of the path containing this path point. Used as sort criteria in PathHeap. Corresponds to the A* f-score."
      ]
    },
    {
      "name": "h",
      "descriptor": "Ldgy;"
    },
    {
      "name": "i",
      "descriptor": "Z"
    },
    {
      "name": "j",
      "descriptor": "F"
    },
    {
      "name": "k",
      "descriptor": "F",
      "javadoc": [
        "The additional cost of the path point. If negative, the path point will be sorted out by NodeProcessors."
      ]
    },
    {
      "name": "l",
      "descriptor": "Ldgw;"
    },
    {
      "name": "m",
      "descriptor": "I"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(III)V"
    },
    {
      "name": "a",
      "descriptor": "()Lgg;"
    },
    {
      "name": "a",
      "descriptor": "(III)Ldgy;"
    },
    {
      "name": "a",
      "descriptor": "(Ldgy;)F",
      "javadoc": [
        "Returns the linear distance to another path point"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lgg;)F"
    },
    {
      "name": "a",
      "descriptor": "(Log;)V"
    },
    {
      "name": "b",
      "descriptor": "()Ldna;"
    },
    {
      "name": "b",
      "descriptor": "(III)I"
    },
    {
      "name": "b",
      "descriptor": "(Ldgy;)F",
      "javadoc": [
        "Returns the squared distance to another path point"
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lgg;)F"
    },
    {
      "name": "b",
      "descriptor": "(Log;)Ldgy;"
    },
    {
      "name": "c",
      "descriptor": "()Z",
      "javadoc": [
        "Returns true if this point has already been assigned to a path"
      ]
    },
    {
      "name": "c",
      "descriptor": "(Ldgy;)F"
    },
    {
      "name": "c",
      "descriptor": "(Lgg;)F"
    },
    {
      "name": "equals",
      "descriptor": "(Ljava/lang/Object;)Z"
    },
    {
      "name": "hashCode",
      "descriptor": "()I"
    },
    {
      "name": "toString",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}