{
  "name": "bmj",
  "fields": [
    {
      "name": "a",
      "descriptor": "I"
    },
    {
      "name": "b",
      "descriptor": "I"
    },
    {
      "name": "c",
      "descriptor": "I"
    },
    {
      "name": "d",
      "descriptor": "I"
    },
    {
      "name": "e",
      "descriptor": "I"
    },
    {
      "name": "f",
      "descriptor": "I"
    },
    {
      "name": "g",
      "descriptor": "I"
    },
    {
      "name": "h",
      "descriptor": "I"
    },
    {
      "name": "i",
      "descriptor": "Lgs;"
    },
    {
      "name": "j",
      "descriptor": "I"
    },
    {
      "name": "k",
      "descriptor": "Lgs;"
    },
    {
      "name": "l",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "m",
      "descriptor": "Lbqp;"
    },
    {
      "name": "n",
      "descriptor": "Lgs;"
    },
    {
      "name": "o",
      "descriptor": "Lit/unimi/dsi/fastutil/ints/IntList;"
    },
    {
      "name": "p",
      "descriptor": "Lbqp;"
    },
    {
      "name": "q",
      "descriptor": "Lbnn;"
    },
    {
      "name": "r",
      "descriptor": "I"
    },
    {
      "name": "s",
      "descriptor": "I"
    },
    {
      "name": "t",
      "descriptor": "Ljava/util/Set;"
    },
    {
      "name": "u",
      "descriptor": "Ljava/util/List;"
    },
    {
      "name": "v",
      "descriptor": "Lbmw;"
    },
    {
      "name": "w",
      "descriptor": "Z"
    }
  ],
  "methods": [
    {
      "name": "<init>",
      "descriptor": "(Lbnn;I)V"
    },
    {
      "name": "a",
      "descriptor": "()Lbnn;"
    },
    {
      "name": "a",
      "descriptor": "(I)Lboa;"
    },
    {
      "name": "a",
      "descriptor": "(II)V"
    },
    {
      "name": "a",
      "descriptor": "(IILbms;Lbkd;)V"
    },
    {
      "name": "a",
      "descriptor": "(ILbkd;)Z"
    },
    {
      "name": "a",
      "descriptor": "(ILbqp;)V"
    },
    {
      "name": "a",
      "descriptor": "(ILbqp;Ljava/util/function/Supplier;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lart;)V",
      "javadoc": [
        "Callback for when the crafting matrix is changed."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lart;I)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;)Z",
      "javadoc": [
        "Determines whether supplied player can use this container"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;I)Z",
      "javadoc": [
        "Handles the given Button-click on the server, currently only used by enchanting. Name is for legacy."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbkd;Lart;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmj;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmt;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmt;I)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmu;Lbkd;Lbzo;)Z"
    },
    {
      "name": "a",
      "descriptor": "(Lbmv;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmw;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbmz;)Lbmz;"
    },
    {
      "name": "a",
      "descriptor": "(Lboa;)Lboa;",
      "javadoc": [
        "Adds an item slot to this container"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lboa;Lbkd;Lbqp;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lboa;Lbqp;Z)Z",
      "javadoc": [
        "Checks if it's possible to add the given itemstack to the given slot."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;IIZ)Z",
      "javadoc": [
        "Merges provided ItemStack with the first avaliable one in the container/player inventor between minIndex (included) and maxIndex (excluded). Args : stack, minIndex, maxIndex, negativDirection. /!\\ the Container implementation do not check if the item is valid for the slot"
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;Lboa;)Z",
      "javadoc": [
        "Called to determine if the current slot is valid for the stack merging (double-click) code. The stack passed in is null for the initial slot that was double-clicked."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Lbqp;Lboa;Lbkd;Lbqp;)V"
    },
    {
      "name": "a",
      "descriptor": "(Lbzo;Lbkd;Lbwp;Lgg;)Ljava/lang/Boolean;"
    },
    {
      "name": "a",
      "descriptor": "(Lcip;)I",
      "javadoc": [
        "Like the version that takes an inventory. If the given TileEntity is not an Inventory, 0 is returned instead."
      ]
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/List;)V"
    },
    {
      "name": "a",
      "descriptor": "(Ljava/util/Set;ILbqp;I)V",
      "javadoc": [
        "Compute the new stack size, Returns the stack with the new size. Args : dragSlots, dragMode, dragStack, slotStackSize"
      ]
    },
    {
      "name": "b",
      "descriptor": "()V"
    },
    {
      "name": "b",
      "descriptor": "(I)I",
      "javadoc": [
        "Extracts the drag mode. Args : eventButton. Return (0 : evenly split, 1 : one item by slot, 2 : not used ?)"
      ]
    },
    {
      "name": "b",
      "descriptor": "(II)I"
    },
    {
      "name": "b",
      "descriptor": "(IILbms;Lbkd;)V"
    },
    {
      "name": "b",
      "descriptor": "(ILbqp;)V",
      "javadoc": [
        "Puts an ItemStack in a slot."
      ]
    },
    {
      "name": "b",
      "descriptor": "(ILbqp;Ljava/util/function/Supplier;)V"
    },
    {
      "name": "b",
      "descriptor": "(Lart;)I"
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;)V",
      "javadoc": [
        "Called when the container is closed."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbkd;I)Lbqp;",
      "javadoc": [
        "Handle when the stack in slot {@code index} is shift-clicked. Normally this moves the stack between the player inventory and the other inventory(s)."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbmv;)V",
      "javadoc": [
        "Remove the given Listener. Method name is for legacy."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lboa;)Z",
      "javadoc": [
        "Returns true if the player can \"drag-spilt\" items into this slot,. returns true by default. Called to check if the slot can be added to a list of Slots to split the held ItemStack across."
      ]
    },
    {
      "name": "b",
      "descriptor": "(Lbqp;)V"
    },
    {
      "name": "c",
      "descriptor": "()Lgs;",
      "javadoc": [
        "returns a list if itemStacks, for each slot."
      ]
    },
    {
      "name": "c",
      "descriptor": "(I)I",
      "javadoc": [
        "Args : clickedButton, Returns (0 : start drag, 1 : add slot, 2 : end drag)"
      ]
    },
    {
      "name": "c",
      "descriptor": "(II)V"
    },
    {
      "name": "d",
      "descriptor": "()V",
      "javadoc": [
        "Looks for changes made in the container, sends them to every listener."
      ]
    },
    {
      "name": "e",
      "descriptor": "()V",
      "javadoc": [
        "Reset the drag fields"
      ]
    },
    {
      "name": "f",
      "descriptor": "()Lbqp;"
    },
    {
      "name": "g",
      "descriptor": "()V"
    },
    {
      "name": "h",
      "descriptor": "()V"
    },
    {
      "name": "i",
      "descriptor": "()V"
    },
    {
      "name": "j",
      "descriptor": "()Lauk;"
    },
    {
      "name": "k",
      "descriptor": "()Ljava/lang/String;"
    },
    {
      "name": "l",
      "descriptor": "()Ljava/lang/String;"
    }
  ]
}