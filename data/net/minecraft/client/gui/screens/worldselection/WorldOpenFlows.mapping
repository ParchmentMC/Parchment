CLASS net/minecraft/client/gui/screens/worldselection/WorldOpenFlows
	METHOD <init> (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/level/storage/LevelStorageSource;)V
		ARG 1 minecraft
		ARG 2 levelSource
	METHOD askForBackup (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZLjava/lang/Runnable;)V
		ARG 1 lastScreen
		ARG 2 levelName
		ARG 3 customized
		ARG 4 loadLevel
	METHOD confirmWorldCreation (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V
		ARG 0 minecraft
		ARG 1 screen
		ARG 2 lifecycle
		ARG 3 loadWorld
		ARG 4 skipWarnings
	METHOD createFreshLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Ljava/util/function/Function;)V
		ARG 1 levelName
		ARG 2 levelSettings
		ARG 3 worldOptions
		ARG 4 dimensionsGetter
	METHOD createLevelFromExistingSettings (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/ReloadableServerResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V
		ARG 1 levelStorage
		ARG 2 resources
		ARG 3 registries
		ARG 4 worldData
	METHOD createWorldAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
		ARG 1 levelName
	METHOD doLoadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZZ)V
		ARG 1 lastScreen
		ARG 2 levelName
		ARG 3 safeMode
		ARG 4 checkAskForBackup
	METHOD getPackConfigFromLevelData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldLoader$PackConfig;
		ARG 1 levelStorage
		ARG 2 functionCompilationLevel
		ARG 3 packConfig
	METHOD lambda$askForBackup$12 (Ljava/lang/String;Ljava/lang/Runnable;ZZ)V
		ARG 3 confirmed
		ARG 4 eraseCache
	METHOD lambda$confirmWorldCreation$13 (Ljava/lang/Runnable;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Z)V
		ARG 3 yes
	METHOD lambda$createFreshLevel$0 (Ljava/util/function/Function;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/server/WorldLoader$DataLoadContext;)Lnet/minecraft/server/WorldLoader$DataLoadOutput;
		ARG 3 context
	METHOD lambda$doLoadLevel$10 (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/Boolean;)V
		ARG 1 levelId
		ARG 2 level
		ARG 3 packRepository
		ARG 4 worldStem
		ARG 6 load
	METHOD lambda$doLoadLevel$11 (Ljava/lang/Throwable;)Ljava/lang/Void;
		ARG 1 throwable
	METHOD lambda$doLoadLevel$7 (Ljava/lang/Void;)Ljava/lang/Boolean;
		ARG 0 v
	METHOD lambda$doLoadLevel$8 (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;
		ARG 1 throwable
	METHOD lambda$loadWorldStem$1 (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/WorldLoader$DataLoadContext;)Lnet/minecraft/server/WorldLoader$DataLoadOutput;
		ARG 1 contexty
	METHOD lambda$recreateWorldData$2 (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/WorldLoader$DataLoadContext;)Lnet/minecraft/server/WorldLoader$DataLoadOutput;
		ARG 1 context
	METHOD lambda$recreateWorldData$3 (Lnet/minecraft/server/packs/resources/CloseableResourceManager;Lnet/minecraft/server/ReloadableServerResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/client/gui/screens/worldselection/WorldOpenFlows$1Data;)Lcom/mojang/datafixers/util/Pair;
		ARG 0 manager
		ARG 1 resources
		ARG 2 registryAccess
		ARG 3 cookie
	METHOD loadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;)V
		ARG 1 lastScreen
		ARG 2 levelName
	METHOD loadWorldDataBlocking (Lnet/minecraft/server/WorldLoader$PackConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;)Ljava/lang/Object;
		ARG 1 packConfig
		ARG 2 worldDataSupplier
		ARG 3 resultFactory
	METHOD loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/server/WorldStem;
		ARG 1 levelStorage
		ARG 2 safeMode
	METHOD loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldStem;
		ARG 1 levelStorage
		ARG 2 safeMode
		ARG 3 packRepository
	METHOD recreateWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lcom/mojang/datafixers/util/Pair;
		ARG 1 levelStorage
	METHOD safeCloseAccess (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/lang/String;)V
		ARG 0 levelStorage
		ARG 1 levelName
