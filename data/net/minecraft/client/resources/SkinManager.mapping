CLASS net/minecraft/client/resources/SkinManager
	METHOD <init> (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/io/File;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V
		ARG 1 textureManager
		ARG 2 skinsDirectory
		ARG 3 sessionService
	METHOD <init> (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/nio/file/Path;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Ljava/util/concurrent/Executor;)V
		ARG 1 textureManager
		ARG 2 root
		ARG 3 sessionService
		ARG 4 executor
	METHOD getInsecureSkin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/resources/PlayerSkin;
		ARG 1 profile
	METHOD getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map;
		ARG 1 profile
	METHOD getInsecureSkinLocation (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/resources/ResourceLocation;
		ARG 1 profile
	METHOD getOrLoad (Lcom/mojang/authlib/GameProfile;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 profile
	METHOD getTextureLocation (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation;
		ARG 0 type
		ARG 1 id
	METHOD getTextureProperty (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/properties/Property;
		ARG 0 profile
	METHOD hasSecureTextureData (Lcom/mojang/authlib/GameProfile;)Z
		ARG 1 profile
	METHOD lambda$registerSkins$1 (Ljava/util/Map;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)V
		ARG 3 type
	METHOD lookupInsecure (Lcom/mojang/authlib/GameProfile;)Ljava/util/function/Supplier;
		ARG 1 profile
	METHOD registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V
		ARG 1 profile
		ARG 2 skinAvailableCallback
		ARG 3 requireSecure
	METHOD registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation;
		COMMENT Used in the Skull renderer to fetch a skin. May download the skin if it's not in the cache
		ARG 1 profileTexture
		ARG 2 textureType
	METHOD registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation;
		COMMENT May download the skin if it's not in the cache, can be passed a SkinManager#SkinAvailableCallback for handling
		ARG 1 profileTexture
		ARG 2 textureType
		ARG 3 skinAvailableCallback
	METHOD registerTextures (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$TextureInfo;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 profile
		ARG 2 textureInfo
	CLASS 1
		METHOD load (Ljava/lang/Object;)Ljava/lang/Object;
			ARG 1 cacheKey
		METHOD load (Ljava/lang/String;)Ljava/util/Map;
			ARG 1 value
	CLASS CacheKey
		METHOD equals (Ljava/lang/Object;)Z
			ARG 1 other
	CLASS TextureInfo
		METHOD unpack (Ljava/util/Map;Z)Lnet/minecraft/client/resources/SkinManager$TextureInfo;
			ARG 0 textureGetter
			ARG 1 secure
	CLASS TextureCache
		METHOD <init> (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/nio/file/Path;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)V
			ARG 1 textureManager
			ARG 2 root
			ARG 3 type
		METHOD getOrLoad (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 texture
		METHOD getTextureLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation;
			ARG 1 name
		METHOD registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 texture
	CLASS SkinTextureCallback
		METHOD onSkinTextureAvailable (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V
			ARG 1 textureType
			ARG 2 location
			ARG 3 profileTexture
