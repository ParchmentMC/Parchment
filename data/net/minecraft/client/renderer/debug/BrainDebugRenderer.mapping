CLASS net/minecraft/client/renderer/debug/BrainDebugRenderer
	METHOD <init> (Lnet/minecraft/client/Minecraft;)V
		ARG 1 minecraft
	METHOD addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V
		ARG 1 brainDump
	METHOD addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V
		ARG 1 poiInfo
	METHOD doRender (DDD)V
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD doRender (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V
		ARG 1 poseStack
		ARG 2 buffer
		ARG 3 x
		ARG 5 y
		ARG 7 z
	METHOD getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set;
		ARG 1 poiInfo
	METHOD getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection;
		ARG 1 pos
	METHOD getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set;
		ARG 1 poiInfo
	METHOD getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection;
		ARG 1 pos
	METHOD highlightPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V
		ARG 0 poseStack
		ARG 1 buffer
		ARG 2 pos
	METHOD highlightPoi (Lnet/minecraft/core/BlockPos;)V
		ARG 0 pos
	METHOD isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z
		ARG 1 brainDump
	METHOD isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z
		ARG 1 brainDump
	METHOD lambda$clearRemovedEntities$1 (Ljava/util/Map$Entry;)Z
		ARG 1 brainDump
	METHOD lambda$doRender$2 (DDDLnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V
		ARG 7 brainDump
	METHOD lambda$doRender$3 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V
		ARG 2 poiInfo
	METHOD lambda$doRender$4 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V
		ARG 2 pos
		ARG 3 names
	METHOD lambda$getGhostPois$7 (Lnet/minecraft/core/BlockPos;)Ljava/util/List;
		ARG 0 pos
	METHOD lambda$getPotentialTicketHolders$6 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z
		ARG 1 brainDump
	METHOD lambda$getTicketHolders$5 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z
		ARG 1 brainDump
	METHOD lambda$removeBrainDump$0 (ILnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z
		ARG 1 brainDump
	METHOD lambda$updateLastLookedAtUuid$8 (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 targetedEntity
	METHOD removeBrainDump (I)V
		ARG 1 id
	METHOD removePoi (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	METHOD renderBrainInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V
		ARG 1 poseStack
		ARG 2 buffer
		ARG 3 brainDump
		ARG 4 x
		ARG 6 y
		ARG 8 z
	METHOD renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V
		ARG 1 brainDump
		ARG 2 x
		ARG 4 y
		ARG 6 z
	METHOD renderGhostPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V
		ARG 1 poseStack
		ARG 2 buffer
		ARG 3 pos
	METHOD renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V
		ARG 1 pos
		ARG 2 names
	METHOD renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V
		ARG 1 poseStack
		ARG 2 buffer
		ARG 3 brainDump
		ARG 4 x
		ARG 6 y
		ARG 8 z
	METHOD renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V
		ARG 1 brainDump
		ARG 2 x
		ARG 4 y
		ARG 6 z
	METHOD renderPoiInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V
		ARG 1 poseStack
		ARG 2 buffer
		ARG 3 poiInfo
	METHOD renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V
		ARG 1 poiInfo
	METHOD renderTextOverMob (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/Position;ILjava/lang/String;IF)V
		ARG 0 poseStack
		ARG 1 buffer
		ARG 2 pos
		ARG 3 layer
		ARG 4 text
		ARG 5 color
		ARG 6 scale
	METHOD renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V
		ARG 0 pos
		ARG 1 yScale
		ARG 2 text
		ARG 3 color
		ARG 4 scale
	METHOD renderTextOverPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V
		ARG 0 poseStack
		ARG 1 buffer
		ARG 2 text
		ARG 3 poiInfo
		ARG 4 layer
		ARG 5 color
	METHOD renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V
		ARG 0 text
		ARG 1 poiInfo
		ARG 2 yScale
		ARG 3 color
	METHOD renderTextOverPos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V
		ARG 0 poseStack
		ARG 1 buffer
		ARG 2 text
		ARG 3 pos
		ARG 4 layer
		ARG 5 color
	METHOD renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V
		ARG 0 text
		ARG 1 pos
		ARG 2 yScale
		ARG 3 color
	METHOD setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V
		ARG 1 pos
		ARG 2 freeTicketCount
	CLASS PoiInfo
		METHOD <init> (Lnet/minecraft/core/BlockPos;Ljava/lang/String;I)V
			ARG 1 pos
			ARG 2 type
			ARG 3 freeTicketCount
	CLASS BrainDump
		METHOD <init> (Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLnet/minecraft/core/Position;Ljava/lang/String;Lnet/minecraft/world/level/pathfinder/Path;ZI)V
			ARG 1 uuid
			ARG 2 id
			ARG 3 name
			ARG 4 profession
			ARG 5 xp
			ARG 6 health
			ARG 7 maxHealth
			ARG 8 pos
			ARG 9 inventory
			ARG 10 path
			ARG 11 wantsGolem
			ARG 12 angerLevel
		METHOD hasPoi (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
		METHOD hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
