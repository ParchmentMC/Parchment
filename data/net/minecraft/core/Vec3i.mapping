CLASS net/minecraft/core/Vec3i
	FIELD ZERO Lnet/minecraft/core/Vec3i;
		COMMENT An immutable vector with zero as all coordinates.
	METHOD <init> (DDD)V
		COMMENT Creates a Vec3i with floored doubles.
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD <init> (III)V
		ARG 1 x
		ARG 2 y
		ARG 3 z
	METHOD above ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit up.
	METHOD above (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance upwards, otherwise will return this vector.
		ARG 1 distance
	METHOD below ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit down.
	METHOD below (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance downwards, otherwise will return this vector.
		ARG 1 distance
	METHOD closerThan (Lnet/minecraft/core/Position;D)Z
		ARG 1 position
		ARG 2 distance
	METHOD closerThan (Lnet/minecraft/core/Vec3i;D)Z
		ARG 1 vector
		ARG 2 distance
	METHOD cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i;
		COMMENT Calculate the cross product of this and the given Vector.
		ARG 1 crossWith
	METHOD distManhattan (Lnet/minecraft/core/Vec3i;)I
		ARG 1 to
	METHOD distSqr (DDDZ)D
		ARG 1 x
		ARG 3 y
		ARG 5 z
		ARG 7 useCenter
	METHOD distSqr (Lnet/minecraft/core/Position;Z)D
		ARG 1 position
		ARG 2 useCenter
	METHOD distSqr (Lnet/minecraft/core/Vec3i;)D
		COMMENT Calculate squared distance to the given Vector.
		ARG 1 to
	METHOD distSqr (Lnet/minecraft/core/Vec3i;Z)D
		ARG 1 to
		ARG 2 useCenter
	METHOD east ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit east.
	METHOD east (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance east, otherwise will return this vector.
		ARG 1 distance
	METHOD equals (Ljava/lang/Object;)Z
		ARG 1 other
	METHOD get (Lnet/minecraft/core/Direction$Axis;)I
		ARG 1 axis
	METHOD getX ()I
		COMMENT @return the X coordinate.
	METHOD getY ()I
		COMMENT @return the Y coordinate.
	METHOD getZ ()I
		COMMENT @return the Z coordinate.
	METHOD lambda$static$0 ([I)Lnet/minecraft/core/Vec3i;
		ARG 0 data
	METHOD lambda$static$1 (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;
		ARG 0 intStream
	METHOD lambda$static$2 (Lnet/minecraft/core/Vec3i;)Ljava/util/stream/IntStream;
		ARG 0 vec3i
	METHOD multiply (I)Lnet/minecraft/core/Vec3i;
		COMMENT If scalar is 1 will return this vector.
		COMMENT If scalar is 0 will return {@link Vec3i.ZERO}.
		COMMENT Will create a new Vec3i with all values multiplied by the scalar.
		ARG 1 scalar
	METHOD north ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit north.
	METHOD north (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance north, otherwise will return this vector.
		ARG 1 distance
	METHOD offset (DDD)Lnet/minecraft/core/Vec3i;
		COMMENT If all values are not 0, will create a new Vec3i with the given offset, otherwise will return this vector.
		COMMENT The values are getting floored.
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD offset (III)Lnet/minecraft/core/Vec3i;
		COMMENT If all values are not 0, will create a new Vec3i with the given offset, otherwise will return this vector.
		ARG 1 x
		ARG 2 y
		ARG 3 z
	METHOD offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i;
		COMMENT If offset does not equals {@link Vec3i#ZERO}, will create a new Vec3i with the given offset, otherwise will return this vector.
		ARG 1 offset
	METHOD relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance on the given axis.
		ARG 1 axis
		ARG 2 distance
	METHOD relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i offseted by 1 in the direction.
		ARG 1 direction
	METHOD relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance in the given direction, otherwise will return this vector.
		ARG 1 direction
		ARG 2 distance
	METHOD setX (I)Lnet/minecraft/core/Vec3i;
		ARG 1 x
	METHOD setY (I)Lnet/minecraft/core/Vec3i;
		ARG 1 y
	METHOD setZ (I)Lnet/minecraft/core/Vec3i;
		ARG 1 z
	METHOD south ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit south.
	METHOD south (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance south, otherwise will return this vector.
		ARG 1 distance
	METHOD subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i;
		COMMENT If the given vector does not equals {@link Vec3i#ZERO}, will create a new Vec3i subtracted by the given vector, otherwise will return this vector.
		ARG 1 vector
	METHOD west ()Lnet/minecraft/core/Vec3i;
		COMMENT Creates a new Vec3i one unit west.
	METHOD west (I)Lnet/minecraft/core/Vec3i;
		COMMENT If distance is not 0, will create a new Vec3i offset by the distance west, otherwise will return this vector.
		ARG 1 distance
