CLASS net/minecraft/server/level/ChunkMap
	FIELD entitiesInLevel Lit/unimi/dsi/fastutil/longs/LongSet;
		COMMENT Chunk positions in this set have fully loaded and their TE's and entities are accessible from the world
	FIELD modified Z
		COMMENT True if changes have been made to {@link #loadedChunks} and thus a new copy of the collection has to be made into {@link #immutableLoadedChunks}.
	FIELD toDrop Lit/unimi/dsi/fastutil/longs/LongSet;
		COMMENT Chunks that have been requested to be unloaded, but haven't been unloaded yet.
	FIELD updatingChunkMap Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;
		COMMENT Chunks in memory. This should only ever be manipulated by the main thread.
	FIELD visibleChunkMap Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;
		COMMENT Same as {@link #loadedChunks}, but immutable for access from other threads. <em>This should never be mutated.</em>
	METHOD <init> (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Ljava/util/concurrent/Executor;Lnet/minecraft/util/thread/BlockableEventLoop;Lnet/minecraft/world/level/chunk/LightChunkGetter;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/server/level/progress/ChunkProgressListener;Lnet/minecraft/world/level/entity/ChunkStatusUpdateListener;Ljava/util/function/Supplier;IZ)V
		ARG 1 level
		ARG 2 levelStorageAccess
		ARG 3 fixerUpper
		ARG 4 structureManager
		ARG 5 dispatcher
		ARG 6 mainThreadExecutor
		ARG 7 lightChunk
		ARG 8 generator
		ARG 9 progressListener
		ARG 10 chunkStatusListener
		ARG 11 overworldDataStorage
		ARG 12 viewDistance
		ARG 13 sync
	METHOD addEntity (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 entity
	METHOD anyPlayerCloseEnoughForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z
		ARG 1 chunkPos
	METHOD broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 entity
		ARG 2 packet
	METHOD broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 entity
		ARG 2 packet
	METHOD euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D
		COMMENT Returns the squared distance to the center of the chunk.
		ARG 0 chunkPos
		ARG 1 entity
	METHOD getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String;
		ARG 1 pos
	METHOD getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 chunkPos
	METHOD getChunks ()Ljava/lang/Iterable;
		COMMENT Gets an unmodifiable iterable of all loaded chunks in the chunk manager
	METHOD getPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List;
		ARG 1 chunkPos
	METHOD isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z
		ARG 1 chunkPos
	METHOD lambda$debugReloadGenerator$1 (Lnet/minecraft/world/level/chunk/ChunkGenerator;)V
		ARG 1 generator
	METHOD markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V
		ARG 1 chunkPos
	METHOD move (Lnet/minecraft/server/level/ServerPlayer;)V
		ARG 1 player
	METHOD onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V
		ARG 1 pos
		ARG 2 fullChunkStatus
	METHOD playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;Lorg/apache/commons/lang3/mutable/MutableObject;Lnet/minecraft/world/level/chunk/LevelChunk;)V
		ARG 1 player
		ARG 2 packetCache
		ARG 3 chunk
	METHOD postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V
		ARG 0 level
	METHOD prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 holder
	METHOD prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 holder
	METHOD processUnloads (Ljava/util/function/BooleanSupplier;)V
		ARG 1 hasMoreTime
	METHOD readChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 pos
	METHOD releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V
		ARG 1 chunkPos
	METHOD removeEntity (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 entity
	METHOD save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z
		ARG 1 chunk
	METHOD saveAllChunks (Z)V
		ARG 1 flush
	METHOD saveChunkIfNeeded (Lnet/minecraft/server/level/ChunkHolder;)Z
		ARG 1 holder
	METHOD schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 holder
		ARG 2 status
	METHOD scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 chunkHolder
		ARG 2 chunkStatus
	METHOD scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 chunkPos
	METHOD scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V
		ARG 1 chunkPos
		ARG 3 chunkHolder
	METHOD setViewDistance (I)V
		ARG 1 viewDistance
	METHOD skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z
		ARG 1 player
	METHOD tick (Ljava/util/function/BooleanSupplier;)V
		ARG 1 hasMoreTime
	METHOD updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder;
		COMMENT Sets level and loads/unloads chunk. Used by {@link net.minecraft.world.server.ChunkManager.ProxyTicketManager} to set chunk level.
		ARG 1 chunkPos
		ARG 3 newLevel
		ARG 4 holder
			COMMENT The {@link net.minecraft.world.server.ChunkHolder} of the chunk if it is loaded, and null otherwise.
		ARG 5 oldLevel
	METHOD updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V
		COMMENT Sends the chunk to the client, or tells it to unload it.
		ARG 1 player
		ARG 2 chunkPos
		ARG 3 packetCache
		ARG 4 wasLoaded
		ARG 5 load
	METHOD updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos;
		ARG 1 player
	METHOD updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V
		ARG 1 player
		ARG 2 track
	CLASS TrackedEntity
		METHOD <init> (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/world/entity/Entity;IIZ)V
			ARG 2 entity
			ARG 3 range
			ARG 4 updateInterval
			ARG 5 trackDelta
		METHOD broadcast (Lnet/minecraft/network/protocol/Packet;)V
			ARG 1 packet
		METHOD broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V
			ARG 1 packet
		METHOD equals (Ljava/lang/Object;)Z
			ARG 1 other
		METHOD removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V
			ARG 1 player
		METHOD updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V
			ARG 1 player
		METHOD updatePlayers (Ljava/util/List;)V
			ARG 1 playersList
	CLASS DistanceManager
		METHOD <init> (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V
			ARG 2 dispatcher
			ARG 3 mainThreadExecutor
		METHOD getChunk (J)Lnet/minecraft/server/level/ChunkHolder;
			ARG 1 chunkPos
		METHOD updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder;
			ARG 1 chunkPos
			ARG 3 newLevel
			ARG 4 holder
			ARG 5 oldLevel
