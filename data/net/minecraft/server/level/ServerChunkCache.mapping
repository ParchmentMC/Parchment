CLASS net/minecraft/server/level/ServerChunkCache
	METHOD addEntity (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 entity
	METHOD addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V
		ARG 1 type
		ARG 2 pos
		ARG 3 distance
		ARG 4 value
	METHOD blockChanged (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	METHOD broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 entity
		ARG 2 packet
	METHOD broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 entity
		ARG 2 packet
	METHOD checkChunkFuture (JLjava/util/function/Function;)Z
		ARG 1 pos
	METHOD gatherStats ()Ljava/lang/String;
		COMMENT Converts the instance data to a readable string.
	METHOD getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess;
		ARG 1 chunkX
		ARG 2 chunkZ
		ARG 3 requiredStatus
		ARG 4 load
	METHOD getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String;
		ARG 1 chunkPos
	METHOD getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter;
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk;
		ARG 1 chunkX
		ARG 2 chunkZ
	METHOD hasChunk (II)Z
		COMMENT Checks to see if a chunk exists at x, z
		ARG 1 x
		ARG 2 z
	METHOD move (Lnet/minecraft/server/level/ServerPlayer;)V
		ARG 1 player
	METHOD onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V
		ARG 1 type
		ARG 2 pos
	METHOD removeEntity (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 entity
	METHOD removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V
		ARG 1 type
		ARG 2 pos
		ARG 3 distance
		ARG 4 value
	METHOD save (Z)V
		ARG 1 flush
	METHOD setSpawnSettings (ZZ)V
		ARG 1 hostile
		ARG 2 peaceful
	METHOD setViewDistance (I)V
		ARG 1 viewDistance
	METHOD updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V
		ARG 1 pos
		ARG 2 add
	CLASS MainThreadExecutor
		METHOD doRunTask (Ljava/lang/Runnable;)V
			ARG 1 task
		METHOD shouldRun (Ljava/lang/Runnable;)Z
			ARG 1 runnable
		METHOD wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable;
			ARG 1 runnable
