CLASS net/minecraft/server/PlayerAdvancements
	METHOD <init> (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/players/PlayerList;Lnet/minecraft/server/ServerAdvancementManager;Ljava/nio/file/Path;Lnet/minecraft/server/level/ServerPlayer;)V
		ARG 1 dataFixer
		ARG 2 playerList
		ARG 3 manager
		ARG 4 playerSavePath
		ARG 5 player
	METHOD applyFrom (Lnet/minecraft/server/ServerAdvancementManager;Lnet/minecraft/server/PlayerAdvancements$Data;)V
		ARG 1 advancementManager
		ARG 2 data
	METHOD award (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z
		ARG 1 advancement
		ARG 2 criterionKey
	METHOD checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V
		ARG 1 manager
	METHOD flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V
		ARG 1 serverPlayer
	METHOD getOrStartProgress (Lnet/minecraft/advancements/AdvancementHolder;)Lnet/minecraft/advancements/AdvancementProgress;
		ARG 1 advancement
	METHOD lambda$applyFrom$0 (Lnet/minecraft/server/ServerAdvancementManager;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/AdvancementProgress;)V
		ARG 2 path
		ARG 3 progress
	METHOD lambda$asData$1 (Ljava/util/Map;Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/advancements/AdvancementProgress;)V
		ARG 1 advancementHolder
		ARG 2 progress
	METHOD lambda$award$2 (Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/advancements/DisplayInfo;)V
		ARG 2 displayInfo
	METHOD lambda$updateTreeVisibility$3 (Lnet/minecraft/advancements/AdvancementNode;)Z
		ARG 1 advancementNode
	METHOD lambda$updateTreeVisibility$4 (Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/advancements/AdvancementNode;Z)V
		ARG 3 node
		ARG 4 visible
	METHOD load (Lnet/minecraft/server/ServerAdvancementManager;)V
		ARG 1 manager
	METHOD markForVisibilityUpdate (Lnet/minecraft/advancements/AdvancementHolder;)V
		ARG 1 advancement
	METHOD registerListener (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V
		ARG 1 advancement
		ARG 2 criterionKey
		ARG 3 criterion
	METHOD registerListeners (Lnet/minecraft/advancements/AdvancementHolder;)V
		ARG 1 advancement
	METHOD registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V
		ARG 1 manager
	METHOD reload (Lnet/minecraft/server/ServerAdvancementManager;)V
		ARG 1 manager
	METHOD removeListener (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)V
		ARG 1 advancement
		ARG 2 criterionKey
		ARG 3 criterion
	METHOD revoke (Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;)Z
		ARG 1 advancement
		ARG 2 criterionKey
	METHOD setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V
		ARG 1 player
	METHOD setSelectedTab (Lnet/minecraft/advancements/AdvancementHolder;)V
		ARG 1 advancement
	METHOD startProgress (Lnet/minecraft/advancements/AdvancementHolder;Lnet/minecraft/advancements/AdvancementProgress;)V
		ARG 1 advancement
		ARG 2 advancementProgress
	METHOD unregisterListeners (Lnet/minecraft/advancements/AdvancementHolder;)V
		ARG 1 advancement
	METHOD updateTreeVisibility (Lnet/minecraft/advancements/AdvancementNode;Ljava/util/Set;Ljava/util/Set;)V
		ARG 1 root
		ARG 2 advancementOutput
		ARG 3 idOutput
	CLASS Data
		METHOD forEach (Ljava/util/function/BiConsumer;)V
			ARG 1 action
		METHOD lambda$forEach$0 (Ljava/util/function/BiConsumer;Ljava/util/Map$Entry;)V
			ARG 1 entry
