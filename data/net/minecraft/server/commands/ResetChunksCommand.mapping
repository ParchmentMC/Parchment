CLASS net/minecraft/server/commands/ResetChunksCommand
	METHOD lambda$register$0 (Lnet/minecraft/commands/CommandSourceStack;)Z
		ARG 0 source
	METHOD lambda$register$1 (Lcom/mojang/brigadier/context/CommandContext;)I
		ARG 0 context
	METHOD lambda$register$2 (Lcom/mojang/brigadier/context/CommandContext;)I
		ARG 0 context
	METHOD lambda$register$3 (Lcom/mojang/brigadier/context/CommandContext;)I
		ARG 0 context
	METHOD lambda$resetChunks$5 (Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture;
		ARG 0 chunk
	METHOD lambda$resetChunks$6 (Lnet/minecraft/world/level/chunk/ChunkAccess;)V
		ARG 0 chunk
	METHOD lambda$resetChunks$7 (Lnet/minecraft/world/level/chunk/ChunkStatus;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit;
		ARG 1 generateResult
	METHOD lambda$resetChunks$8 (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/util/thread/ProcessorMailbox;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerChunkCache;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage;
		ARG 5 unit
	METHOD register (Lcom/mojang/brigadier/CommandDispatcher;)V
		ARG 0 dispatcher
	METHOD resetChunks (Lnet/minecraft/commands/CommandSourceStack;IZ)I
		ARG 0 source
		ARG 1 range
		ARG 2 skipOldChunks
