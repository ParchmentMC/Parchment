CLASS net/minecraft/world/level/storage/LevelStorageSource
	FIELD FORMATTER Ljava/time/format/DateTimeFormatter;
	FIELD ICON_FILENAME Ljava/lang/String;
	FIELD LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD OLD_SETTINGS_KEYS Lcom/google/common/collect/ImmutableList;
	FIELD backupDir Ljava/nio/file/Path;
	FIELD baseDir Ljava/nio/file/Path;
	FIELD fixerUpper Lcom/mojang/datafixers/DataFixer;
	METHOD <clinit> ()V
	METHOD <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V
	METHOD createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
		ARG 1 saveName
	METHOD createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource;
		ARG 0 savesDir
	METHOD getBackupPath ()Ljava/nio/file/Path;
		COMMENT Gets the folder where backups are stored
	METHOD getBaseDir ()Ljava/nio/file/Path;
	METHOD getDataPacks (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig;
		ARG 0 levelDat
		ARG 1 fixer
	METHOD getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Ljava/util/function/BiFunction;
		ARG 0 nbt
		ARG 1 datapackCodec
	METHOD getLevelList ()Ljava/util/List;
	METHOD getName ()Ljava/lang/String;
	METHOD getStorageVersion ()I
	METHOD isNewLevelIdAcceptable (Ljava/lang/String;)Z
		ARG 1 saveName
	METHOD lambda$getLevelData$4 (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/storage/PrimaryLevelData;
	METHOD lambda$levelSummaryReader$5 (Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/storage/LevelSummary;
	METHOD lambda$readWorldGenSettings$0 ()Ljava/lang/IllegalStateException;
	METHOD lambda$readWorldGenSettings$1 ()Ljava/lang/IllegalStateException;
	METHOD lambda$readWorldGenSettings$2 ()Ljava/lang/IllegalStateException;
	METHOD lambda$readWorldGenSettings$3 (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/WorldGenSettings;
	METHOD levelExists (Ljava/lang/String;)Z
		COMMENT Return whether the given world can be loaded.
		ARG 1 saveName
	METHOD levelSummaryReader (Ljava/io/File;Z)Ljava/util/function/BiFunction;
		ARG 1 saveDir
		ARG 2 locked
	METHOD readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig;
		ARG 0 nbt
	METHOD readLevelData (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object;
		ARG 1 saveDir
		ARG 2 levelDatReader
	METHOD readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair;
		ARG 0 nbt
		ARG 1 fixer
		ARG 2 version
	CLASS LevelStorageAccess
		FIELD levelId Ljava/lang/String;
		FIELD levelPath Ljava/nio/file/Path;
		FIELD lock Lnet/minecraft/util/DirectoryLock;
		FIELD resources Ljava/util/Map;
		FIELD this$0 Lnet/minecraft/world/level/storage/LevelStorageSource;
		METHOD <init> (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V
		METHOD checkLock ()V
		METHOD close ()V
		METHOD convertLevel (Lnet/minecraft/util/ProgressListener;)Z
			ARG 1 progress
		METHOD createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage;
		METHOD deleteLevel ()V
		METHOD getDataPacks ()Lnet/minecraft/world/level/DataPackConfig;
		METHOD getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData;
			ARG 1 nbt
			ARG 2 datapackCodec
		METHOD getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/io/File;
			ARG 1 dimensionKey
		METHOD getIconFile ()Ljava/io/File;
		METHOD getLevelId ()Ljava/lang/String;
		METHOD getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path;
			ARG 1 folderName
		METHOD getSummary ()Lnet/minecraft/world/level/storage/LevelSummary;
		METHOD lambda$getLevelPath$0 (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path;
		METHOD makeWorldBackup ()J
		METHOD renameLevel (Ljava/lang/String;)V
			ARG 1 saveName
		METHOD requiresConversion ()Z
		METHOD saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V
			ARG 1 registries
			ARG 2 serverConfiguration
		METHOD saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V
			ARG 1 registries
			ARG 2 serverConfiguration
			ARG 3 hostPlayerNBT
		CLASS 1
			FIELD this$1 Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
			FIELD val$lockPath Ljava/nio/file/Path;
			METHOD <init> (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/nio/file/Path;)V
			METHOD postVisitDirectory (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
			METHOD postVisitDirectory (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
			METHOD visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
			METHOD visitFile (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
		CLASS 2
			FIELD this$1 Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
			FIELD val$rootPath Ljava/nio/file/Path;
			FIELD val$stream Ljava/util/zip/ZipOutputStream;
			METHOD <init> (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/nio/file/Path;Ljava/util/zip/ZipOutputStream;)V
			METHOD visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
			METHOD visitFile (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
