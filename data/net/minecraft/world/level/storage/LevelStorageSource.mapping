CLASS net/minecraft/world/level/storage/LevelStorageSource
	METHOD <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/world/level/validation/DirectoryValidator;Lcom/mojang/datafixers/DataFixer;)V
		ARG 1 baseDir
		ARG 2 backupDir
		ARG 3 worldDirValidator
		ARG 4 fixerUpper
	METHOD createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
		ARG 1 saveName
	METHOD createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource;
		ARG 0 savesDir
	METHOD getBackupPath ()Ljava/nio/file/Path;
		COMMENT Gets the folder where backups are stored
	METHOD getDataConfiguration (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/WorldDataConfiguration;
		ARG 0 dataFile
		ARG 1 fixer
	METHOD getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction;
		ARG 0 ops
		ARG 1 dataConfiguration
		ARG 2 levelStemRegistry
		ARG 3 lifecycle
	METHOD getLevelPath (Ljava/lang/String;)Ljava/nio/file/Path;
		ARG 1 saveName
	METHOD isNewLevelIdAcceptable (Ljava/lang/String;)Z
		ARG 1 saveName
	METHOD levelExists (Ljava/lang/String;)Z
		COMMENT Return whether the given world can be loaded.
		ARG 1 saveName
	METHOD levelSummaryReader (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Z)Ljava/util/function/BiFunction;
		ARG 1 levelDirectory
		ARG 2 locked
	METHOD loadLevelSummaries (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates;)Ljava/util/concurrent/CompletableFuture;
		ARG 1 candidates
	METHOD parseFeatureFlagsFromSummary (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/flag/FeatureFlagSet;
		ARG 0 dataDynamic
	METHOD parseValidator (Ljava/nio/file/Path;)Lnet/minecraft/world/level/validation/DirectoryValidator;
		ARG 0 validator
	METHOD readDataConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/WorldDataConfiguration;
		ARG 0 dynamic
	METHOD readLevelData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Ljava/util/function/BiFunction;)Ljava/lang/Object;
		ARG 1 levelDirectory
		ARG 2 levelDatReader
	METHOD readLightweightData (Ljava/nio/file/Path;)Lnet/minecraft/nbt/Tag;
		ARG 0 file
	METHOD readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult;
		ARG 0 dynamic
		ARG 1 fixer
		ARG 2 version
	METHOD validateAndCreateAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;
		ARG 1 saveName
	CLASS LevelDirectory
		METHOD corruptedDataFile (Ljava/time/LocalDateTime;)Ljava/nio/file/Path;
			ARG 1 dateTime
		METHOD resourcePath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path;
			ARG 1 resource
	CLASS LevelStorageAccess
		METHOD <init> (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;Ljava/nio/file/Path;)V
			ARG 2 levelId
			ARG 3 levelDir
		METHOD getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair;
			ARG 1 ops
			ARG 2 dataConfiguration
			ARG 3 levelStemRegistry
			ARG 4 lifecycle
		METHOD getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path;
			ARG 1 dimensionPath
		METHOD getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path;
			ARG 1 folderName
		METHOD renameLevel (Ljava/lang/String;)V
			ARG 1 saveName
		METHOD saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V
			ARG 1 registries
			ARG 2 serverConfiguration
		METHOD saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V
			ARG 1 registries
			ARG 2 serverConfiguration
			ARG 3 hostPlayerNBT
		CLASS 1
			METHOD postVisitDirectory (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
				ARG 1 dir
				ARG 2 exception
			METHOD visitFile (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
				ARG 1 file
				ARG 2 attrs
		CLASS 2
			METHOD visitFile (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
				ARG 1 file
				ARG 2 attrs
