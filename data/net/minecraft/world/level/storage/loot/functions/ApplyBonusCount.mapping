CLASS net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	COMMENT LootItemFunction that modifies the stack's count based on an enchantment level on the {@linkplain LootContextParams#TOOL tool} using various formulas.
	METHOD <init> (Ljava/util/List;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;)V
		ARG 1 predicates
		ARG 2 enchantment
		ARG 3 formula
	METHOD <init> ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;)V
		ARG 1 conditions
		ARG 2 enchantment
		ARG 3 formula
	METHOD addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;
		ARG 0 enchantment
		ARG 1 probability
		ARG 2 extraRounds
	METHOD addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;
		ARG 0 enchantment
	METHOD addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;
		ARG 0 enchantment
	METHOD addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder;
		ARG 0 enchantment
		ARG 1 bonusMultiplier
	METHOD lambda$addBonusBinomialDistributionCount$0 (Lnet/minecraft/world/item/enchantment/Enchantment;IF[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;
		ARG 3 conditions
	METHOD lambda$addOreBonusCount$1 (Lnet/minecraft/world/item/enchantment/Enchantment;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;
		ARG 1 conditions
	METHOD lambda$addUniformBonusCount$2 (Lnet/minecraft/world/item/enchantment/Enchantment;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;
		ARG 1 conditions
	METHOD lambda$addUniformBonusCount$3 (Lnet/minecraft/world/item/enchantment/Enchantment;I[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;
		ARG 2 conditions
	METHOD run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack;
		ARG 1 stack
		ARG 2 context
	CLASS 1
		METHOD decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;
			ARG 1 ops
			ARG 2 input
		METHOD encode (Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;
			ARG 1 codec
			ARG 2 input
			ARG 3 ops
		METHOD encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;
			ARG 1 input
			ARG 2 ops
			ARG 3 value
		METHOD keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;
			ARG 1 value
	CLASS Formula
		METHOD calculateNewCount (Lnet/minecraft/util/RandomSource;II)I
			ARG 1 random
			ARG 2 originalCount
			ARG 3 enchantmentLevel
		METHOD serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V
			ARG 1 json
			ARG 2 serializationContext
	CLASS OreDrops
		COMMENT Applies a bonus count with a special formula used for fortune ore drops.
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;
			ARG 0 json
			ARG 1 deserializationContext
	CLASS Serializer
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;
			ARG 1 object
			ARG 2 deserializationContext
			ARG 3 conditions
		METHOD serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V
			COMMENT Serialize the {@link ApplyBonusCount} by putting its data into the JsonObject.
			ARG 1 json
			ARG 2 applyBonusCount
			ARG 3 serializationContext
	CLASS UniformBonusCount
		COMMENT Adds a bonus count based on the enchantment level scaled by a constant multiplier.
		METHOD <init> (I)V
			ARG 1 bonusMultiplier
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;
			ARG 0 json
			ARG 1 deserializationContext
	CLASS FormulaDeserializer
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;
			ARG 1 json
			ARG 2 deserializationContext
	CLASS BinomialWithBonusCount
		COMMENT Applies a bonus based on a binomial distribution with {@code n = enchantmentLevel + extraRounds} and {@code p = probability}.
		METHOD <init> (IF)V
			ARG 1 extraRounds
			ARG 2 probability
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula;
			ARG 0 json
			ARG 1 deserializationContext
