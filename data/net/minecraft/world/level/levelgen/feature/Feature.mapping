CLASS net/minecraft/world/level/levelgen/feature/Feature
	METHOD <init> (Lcom/mojang/serialization/Codec;)V
		ARG 1 codec
	METHOD checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z
		COMMENT @return true if any of the six adjacent blocks to the block at {@code pos} return {@code true} to the given filter.
		ARG 0 adjacentStateAccessor
			COMMENT An accessor for the adjacent blocks. Essentially {@code level::getBlockState}.
		ARG 1 pos
		ARG 2 filter
	METHOD configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;
		ARG 1 config
	METHOD isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z
		COMMENT @return true if any of the six adjacent blocks to the block at {@code pos} are air.
		ARG 0 adjacentStateAccessor
			COMMENT An accessor for the adjacent blocks. Essentially {@code level::getBlockState}.
		ARG 1 pos
	METHOD isAir (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z
		ARG 0 level
		ARG 1 pos
	METHOD isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 0 state
	METHOD isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z
		ARG 0 level
		ARG 1 pos
	METHOD isReplaceable (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Predicate;
		ARG 0 blockTag
	METHOD isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 0 state
	METHOD lambda$isReplaceable$2 (Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 0 state
	METHOD lambda$isReplaceable$3 (Lnet/minecraft/tags/Tag;Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 1 state
	METHOD lambda$new$0 (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;
		ARG 1 config
	METHOD lambda$new$1 (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;
		ARG 0 configuredFeature
	METHOD markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V
		COMMENT If the above two blocks are not air, marks them for post processing.
		COMMENT This is used to prevent floating grass during the generation of features that carve blocks out of the terrain, after other plant-like blocks have generated (such as lake features).
		ARG 1 level
		ARG 2 basePos
	METHOD place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z
		COMMENT Places the given feature at the given location.
		COMMENT During world generation, features are provided with a 3x3 region of chunks, centered on the chunk being generated, that they can safely generate into.
		ARG 1 context
			COMMENT A context object with a reference to the level and the position the feature is being placed at
	METHOD register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature;
		ARG 0 key
		ARG 1 value
	METHOD safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V
		ARG 1 level
		ARG 2 pos
		ARG 3 state
		ARG 4 oldState
	METHOD setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V
		ARG 1 level
		ARG 2 pos
		ARG 3 state
