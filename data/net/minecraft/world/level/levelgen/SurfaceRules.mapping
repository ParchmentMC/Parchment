CLASS net/minecraft/world/level/levelgen/SurfaceRules
	METHOD ifTrue (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;
		ARG 0 ifTrue
		ARG 1 thenRun
	METHOD isBiome (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource;
		ARG 0 biomes
	METHOD isBiome ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 biomes
	METHOD noiseCondition (Lnet/minecraft/resources/ResourceKey;D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 noise
		ARG 1 minThreshold
	METHOD noiseCondition (Lnet/minecraft/resources/ResourceKey;DD)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 noise
		ARG 1 minThreshold
		ARG 3 maxThreshold
	METHOD not (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 target
	METHOD register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec;
		ARG 0 registry
		ARG 1 name
		ARG 2 value
	METHOD sequence ([Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;
		ARG 0 rules
	METHOD state (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;
		ARG 0 resultState
	METHOD stoneDepthCheck (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 offset
		ARG 1 addSurfaceDepth
		ARG 2 secondaryDepthRange
		ARG 3 surfaceType
	METHOD stoneDepthCheck (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 offset
		ARG 1 addSurfaceDepth
		ARG 2 surfaceType
	METHOD verticalGradient (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 randomName
		ARG 1 trueAtAndBelow
		ARG 2 falseAtAndAbove
	METHOD waterBlockCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 offset
		ARG 1 surfaceDepthMultiplier
	METHOD waterStartCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 offset
		ARG 1 surfaceDepthMultiplier
	METHOD yBlockCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 anchor
		ARG 1 surfaceDepthMultiplier
	METHOD yStartCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;
		ARG 0 anchor
		ARG 1 surfaceDepthMultiplier
	CLASS Hole
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS Steep
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS Context
		METHOD <init> (Lnet/minecraft/world/level/levelgen/SurfaceSystem;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Ljava/util/function/Function;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)V
			ARG 1 system
			ARG 2 randomState
			ARG 3 chunk
			ARG 4 noiseChunk
			ARG 5 biomeGetter
			ARG 7 context
		METHOD blockCoordToSurfaceCell (I)I
			ARG 0 blockCoord
		METHOD surfaceCellToBlockCoord (I)I
			ARG 0 surfaceCell
		METHOD updateXZ (II)V
			ARG 1 blockX
			ARG 2 blockZ
		METHOD updateY (IIIIII)V
			ARG 1 stoneDepthAbove
			ARG 2 stoneDepthBelow
			ARG 3 waterHeight
			ARG 4 blockX
			ARG 5 blockY
			ARG 6 blockZ
	CLASS Bandlands
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule;
			ARG 1 context
	CLASS RuleSource
		METHOD bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec;
			ARG 0 registry
	CLASS SurfaceRule
		METHOD tryApply (III)Lnet/minecraft/world/level/block/state/BlockState;
			ARG 1 x
			ARG 2 y
			ARG 3 z
	CLASS Temperature
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS LazyCondition
		METHOD <init> (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)V
			ARG 1 context
	CLASS TestRuleSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule;
			ARG 1 context
	CLASS BlockRuleSource
		METHOD <init> (Lnet/minecraft/world/level/block/state/BlockState;)V
			ARG 1 resultState
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule;
			ARG 1 context
	CLASS ConditionSource
		METHOD bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec;
			ARG 0 registry
	CLASS StoneDepthCheck
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS YConditionSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS NotConditionSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS SequenceRuleSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule;
			ARG 1 context
	CLASS BiomeConditionSource
		METHOD <init> (Ljava/util/List;)V
			ARG 1 biomes
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
		METHOD equals (Ljava/lang/Object;)Z
			ARG 1 other
	CLASS WaterConditionSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS AbovePreliminarySurface
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS NoiseThresholdConditionSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
	CLASS VerticalGradientConditionSource
		METHOD apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition;
			ARG 1 context
