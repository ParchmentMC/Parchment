CLASS net/minecraft/world/level/lighting/SkyLightSectionStorage
	FIELD HORIZONTALS [Lnet/minecraft/core/Direction;
	FIELD columnsWithSkySources Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD hasSourceInconsistencies Z
	FIELD sectionsToAddSourcesTo Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD sectionsToRemoveSourcesFrom Lit/unimi/dsi/fastutil/longs/LongSet;
	FIELD sectionsWithSources Lit/unimi/dsi/fastutil/longs/LongSet;
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/level/chunk/LightChunkGetter;)V
	METHOD createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer;
		ARG 1 sectionPos
	METHOD enableLightSources (JZ)V
	METHOD getLightValue (J)I
		ARG 1 levelPos
	METHOD getLightValue (JZ)I
	METHOD hasInconsistencies ()Z
	METHOD hasSectionsBelow (I)Z
	METHOD isAboveData (J)Z
	METHOD lightOnInSection (J)Z
	METHOD markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V
		ARG 1 engine
		ARG 2 updateSkyLight
		ARG 3 updateBlockLight
	METHOD onNodeAdded (J)V
		ARG 1 sectionPos
	METHOD onNodeRemoved (J)V
	METHOD queueAddSource (J)V
	METHOD queueRemoveSource (J)V
	METHOD recheckInconsistencyFlag ()V
	CLASS 1
		FIELD $SwitchMap$net$minecraft$core$Direction [I
		METHOD <clinit> ()V
	CLASS SkyDataLayerStorageMap
		FIELD currentLowestY I
		FIELD topSections Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;
		METHOD <init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V
		METHOD copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap;
		METHOD copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap;
