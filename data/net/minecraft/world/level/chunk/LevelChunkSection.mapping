CLASS net/minecraft/world/level/chunk/LevelChunkSection
	METHOD <init> (ILnet/minecraft/core/Registry;)V
		ARG 1 sectionY
		ARG 2 biomeRegistry
	METHOD <init> (ILnet/minecraft/world/level/chunk/PalettedContainer;Lnet/minecraft/world/level/chunk/PalettedContainer;)V
		ARG 1 sectionY
		ARG 2 states
		ARG 3 biomes
	METHOD bottomBlockY ()I
		COMMENT @return The lowest y coordinate in this section.
	METHOD getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 x
		ARG 2 y
		ARG 3 z
	METHOD getBottomBlockY (I)I
		ARG 0 sectionY
	METHOD getFluidState (III)Lnet/minecraft/world/level/material/FluidState;
		ARG 1 x
		ARG 2 y
		ARG 3 z
	METHOD hasOnlyAir ()Z
		COMMENT @return {@code true} if this section consists only of air-like blocks.
	METHOD isRandomlyTickingBlocks ()Z
		COMMENT @return {@code true} if this section has any blocks that require random ticks.
	METHOD isRandomlyTickingFluids ()Z
		COMMENT @return {@code true} if this section has any fluids that require random ticks.
	METHOD maybeHas (Ljava/util/function/Predicate;)Z
		COMMENT @return {@code true} if this section has any states matching the given predicate. As the internal representation uses a {@link net.minecraft.world.level.chunk.Palette}, this is more efficient than looping through every position in the section, or indeed the chunk.
		ARG 1 predicate
	METHOD read (Lnet/minecraft/network/FriendlyByteBuf;)V
		ARG 1 buffer
	METHOD setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 x
		ARG 2 y
		ARG 3 z
		ARG 4 state
	METHOD setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 x
		ARG 2 y
		ARG 3 z
		ARG 4 state
		ARG 5 useLocks
	METHOD write (Lnet/minecraft/network/FriendlyByteBuf;)V
		ARG 1 buffer
