CLASS net/minecraft/world/level/block/TripWireBlock
	FIELD AABB Lnet/minecraft/world/phys/shapes/VoxelShape;
	FIELD ATTACHED Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD DISARMED Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD EAST Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD NORTH Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD NOT_ATTACHED_AABB Lnet/minecraft/world/phys/shapes/VoxelShape;
	FIELD POWERED Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD PROPERTY_BY_DIRECTION Ljava/util/Map;
	FIELD RECHECK_PERIOD I
	FIELD SOUTH Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD WEST Lnet/minecraft/world/level/block/state/properties/BooleanProperty;
	FIELD hook Lnet/minecraft/world/level/block/TripWireHookBlock;
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/level/block/TripWireHookBlock;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V
	METHOD checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V
		ARG 1 level
		ARG 2 pos
	METHOD createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V
		ARG 1 builder
	METHOD entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 entity
	METHOD getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 context
	METHOD getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 context
	METHOD mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Returns the blockstate with the given mirror of the passed blockstate. If inapplicable, returns the passed blockstate.
		COMMENT @deprecated call via {@link IBlockState#withMirror(Mirror)} whenever possible. Implementing/overriding is fine.
		ARG 1 state
		ARG 2 mirror
	METHOD onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 oldState
		ARG 5 isMoving
	METHOD onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 newState
		ARG 5 isMoving
	METHOD playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V
		COMMENT Called before the Block is set to air in the world. Called regardless of if the player's tool can actually collect this block
		ARG 1 level
		ARG 2 pos
		ARG 3 state
		ARG 4 player
	METHOD rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Returns the blockstate with the given rotation from the passed blockstate. If inapplicable, returns the passed blockstate.
		COMMENT @deprecated call via {@link IBlockState#withRotation(Rotation)} whenever possible. Implementing/overriding is fine.
		ARG 1 state
		ARG 2 rot
	METHOD shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z
		ARG 1 state
		ARG 2 direction
	METHOD tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 rand
	METHOD updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Update the provided state given the provided neighbor facing and neighbor state, returning a new state.
		COMMENT For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.
		COMMENT Note that this method should ideally consider only the specific face passed in.
		ARG 1 state
		ARG 2 facing
		ARG 3 facingState
		ARG 4 level
		ARG 5 currentPos
		ARG 6 facingPos
	METHOD updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V
		ARG 1 level
		ARG 2 pos
		ARG 3 state
	CLASS 1
		FIELD $SwitchMap$net$minecraft$world$level$block$Mirror [I
		FIELD $SwitchMap$net$minecraft$world$level$block$Rotation [I
		METHOD <clinit> ()V
