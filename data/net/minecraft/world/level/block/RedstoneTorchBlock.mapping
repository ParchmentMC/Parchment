CLASS net/minecraft/world/level/block/RedstoneTorchBlock
	METHOD createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V
		ARG 1 builder
	METHOD getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I
		ARG 1 blockState
		ARG 2 blockAccess
		ARG 3 pos
		ARG 4 side
	METHOD getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I
		ARG 1 blockState
		ARG 2 blockAccess
		ARG 3 pos
		ARG 4 side
	METHOD hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 1 level
		ARG 2 pos
		ARG 3 state
	METHOD isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 1 state
	METHOD isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z
		ARG 0 level
		ARG 1 levelConflicting
		ARG 2 addToggle
	METHOD lambda$isToggledTooFrequently$0 (Lnet/minecraft/world/level/BlockGetter;)Ljava/util/List;
		ARG 0 toggles
	METHOD neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 block
		ARG 5 fromPos
		ARG 6 isMoving
	METHOD onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 oldState
		ARG 5 isMoving
	METHOD onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 newState
		ARG 5 isMoving
	CLASS Toggle
		METHOD <init> (Lnet/minecraft/core/BlockPos;J)V
			ARG 1 pos
			ARG 2 when
