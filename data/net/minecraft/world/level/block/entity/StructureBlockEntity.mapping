CLASS net/minecraft/world/level/block/entity/StructureBlockEntity
	FIELD AUTHOR_TAG Ljava/lang/String;
	FIELD MAX_OFFSET_PER_AXIS I
	FIELD MAX_SIZE_PER_AXIS I
	FIELD SCAN_CORNER_BLOCKS_RANGE I
	FIELD author Ljava/lang/String;
	FIELD ignoreEntities Z
	FIELD integrity F
	FIELD metaData Ljava/lang/String;
	FIELD mirror Lnet/minecraft/world/level/block/Mirror;
	FIELD mode Lnet/minecraft/world/level/block/state/properties/StructureMode;
	FIELD powered Z
	FIELD rotation Lnet/minecraft/world/level/block/Rotation;
	FIELD seed J
	FIELD showAir Z
	FIELD showBoundingBox Z
	FIELD structureName Lnet/minecraft/resources/ResourceLocation;
	FIELD structurePos Lnet/minecraft/core/BlockPos;
	FIELD structureSize Lnet/minecraft/core/Vec3i;
	METHOD <init> (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V
	METHOD calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional;
	METHOD createRandom (J)Ljava/util/Random;
		ARG 0 seed
	METHOD createdBy (Lnet/minecraft/world/entity/LivingEntity;)V
		ARG 1 author
	METHOD detectSize ()Z
	METHOD getIntegrity ()F
	METHOD getMetaData ()Ljava/lang/String;
	METHOD getMirror ()Lnet/minecraft/world/level/block/Mirror;
	METHOD getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode;
	METHOD getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream;
	METHOD getRotation ()Lnet/minecraft/world/level/block/Rotation;
	METHOD getSeed ()J
	METHOD getShowAir ()Z
	METHOD getShowBoundingBox ()Z
	METHOD getStructureName ()Ljava/lang/String;
	METHOD getStructurePath ()Ljava/lang/String;
	METHOD getStructurePos ()Lnet/minecraft/core/BlockPos;
	METHOD getStructureSize ()Lnet/minecraft/core/Vec3i;
	METHOD getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;
		COMMENT Retrieves packet to send to the client whenever this Tile Entity is resynced via World.notifyBlockUpdate. For modded TE's, this packet comes back to you clientside in {@link #onDataPacket}
	METHOD getUpdateTag ()Lnet/minecraft/nbt/CompoundTag;
		COMMENT Get an NBT compound to sync to the client with SPacketChunkData, used for initial loading of the chunk or when many blocks change at once. This compound comes back to you clientside in {@link handleUpdateTag}
	METHOD hasStructureName ()Z
	METHOD isIgnoreEntities ()Z
	METHOD isPowered ()Z
	METHOD isStructureLoadable ()Z
	METHOD lambda$detectSize$0 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z
	METHOD lambda$getRelatedCorners$1 (Lnet/minecraft/core/BlockPos;)Z
	METHOD lambda$getRelatedCorners$2 (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z
	METHOD lambda$getRelatedCorners$3 (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/block/entity/StructureBlockEntity;
	METHOD lambda$getRelatedCorners$4 (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z
	METHOD lambda$loadStructure$5 (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V
	METHOD load (Lnet/minecraft/nbt/CompoundTag;)V
	METHOD loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z
	METHOD loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z
	METHOD loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z
	METHOD save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag;
		ARG 1 compound
	METHOD saveStructure ()Z
		COMMENT Saves the template, writing it to disk.
		COMMENT
		COMMENT @return true if the template was successfully saved.
	METHOD saveStructure (Z)Z
		COMMENT Saves the template, either updating the local version or writing it to disk.
		COMMENT
		COMMENT @return true if the template was successfully saved.
		ARG 1 writeToDisk
	METHOD setIgnoreEntities (Z)V
		ARG 1 ignoreEntities
	METHOD setIntegrity (F)V
		ARG 1 integrity
	METHOD setMetaData (Ljava/lang/String;)V
		ARG 1 metadata
	METHOD setMirror (Lnet/minecraft/world/level/block/Mirror;)V
		ARG 1 mirror
	METHOD setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V
		ARG 1 mode
	METHOD setPowered (Z)V
		ARG 1 powered
	METHOD setRotation (Lnet/minecraft/world/level/block/Rotation;)V
		ARG 1 rotation
	METHOD setSeed (J)V
		ARG 1 seed
	METHOD setShowAir (Z)V
		ARG 1 showAir
	METHOD setShowBoundingBox (Z)V
		ARG 1 showBoundingBox
	METHOD setStructureName (Ljava/lang/String;)V
		ARG 1 name
	METHOD setStructureName (Lnet/minecraft/resources/ResourceLocation;)V
		ARG 1 newName
	METHOD setStructurePos (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	METHOD setStructureSize (Lnet/minecraft/core/Vec3i;)V
	METHOD unloadStructure ()V
	METHOD updateBlockState ()V
	METHOD usedBy (Lnet/minecraft/world/entity/player/Player;)Z
		ARG 1 player
	CLASS UpdateType
		FIELD $VALUES [Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		FIELD LOAD_AREA Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		FIELD SAVE_AREA Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		FIELD SCAN_AREA Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		FIELD UPDATE_DATA Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		METHOD $values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		METHOD <clinit> ()V
		METHOD <init> (Ljava/lang/String;I)V
		METHOD valueOf (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
		METHOD values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;
