CLASS net/minecraft/world/level/block/ObserverBlock
	METHOD createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V
		ARG 1 builder
	METHOD getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I
		COMMENT @deprecated call via {@link IBlockState#getStrongPower(IBlockAccess,BlockPos,EnumFacing)} whenever possible. Implementing/overriding is fine.
		ARG 1 blockState
		ARG 2 blockAccess
		ARG 3 pos
		ARG 4 side
	METHOD getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I
		COMMENT @deprecated call via {@link IBlockState#getWeakPower(IBlockAccess,BlockPos,EnumFacing)} whenever possible. Implementing/overriding is fine.
		ARG 1 blockState
		ARG 2 blockAccess
		ARG 3 pos
		ARG 4 side
	METHOD getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 context
	METHOD isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z
		COMMENT Can this block provide power. Only wire currently seems to have this change based on its state.
		COMMENT @deprecated call via {@link IBlockState#canProvidePower()} whenever possible. Implementing/overriding is fine.
		ARG 1 state
	METHOD mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Returns the blockstate with the given mirror of the passed blockstate. If inapplicable, returns the passed blockstate.
		COMMENT @deprecated call via {@link IBlockState#withMirror(Mirror)} whenever possible. Implementing/overriding is fine.
		ARG 1 state
		ARG 2 mirror
	METHOD onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 oldState
		ARG 5 isMoving
	METHOD onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 newState
		ARG 5 isMoving
	METHOD rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Returns the blockstate with the given rotation from the passed blockstate. If inapplicable, returns the passed blockstate.
		COMMENT @deprecated call via {@link IBlockState#withRotation(Rotation)} whenever possible. Implementing/overriding is fine.
		ARG 1 state
		ARG 2 rot
	METHOD startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V
		ARG 1 level
		ARG 2 pos
	METHOD tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 rand
	METHOD updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V
		ARG 1 level
		ARG 2 pos
		ARG 3 state
	METHOD updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;
		COMMENT Update the provided state given the provided neighbor facing and neighbor state, returning a new state.
		COMMENT For example, fences make their connections to the passed in state if possible, and wet concrete powder immediately returns its solidified counterpart.
		COMMENT Note that this method should ideally consider only the specific face passed in.
		ARG 1 state
		ARG 2 facing
		ARG 3 facingState
		ARG 4 level
		ARG 5 currentPos
		ARG 6 facingPos
