CLASS net/minecraft/world/item/enchantment/Enchantment
	FIELD category Lnet/minecraft/world/item/enchantment/EnchantmentCategory;
		COMMENT The category of the enchantment. This often controls which items the enchantment can be applied to and which creative tabs the enchantment will be displayed under.
	FIELD descriptionId Ljava/lang/String;
		COMMENT The descriptionId for the enchantment. Commonly used to create localization keys.
	FIELD rarity Lnet/minecraft/world/item/enchantment/Enchantment$Rarity;
		COMMENT The rarity of the enchantment.
	FIELD slots [Lnet/minecraft/world/entity/EquipmentSlot;
		COMMENT The valid equipment slots for the enchantment.
	METHOD <init> (Lnet/minecraft/world/item/enchantment/Enchantment$Rarity;Lnet/minecraft/world/item/enchantment/EnchantmentCategory;[Lnet/minecraft/world/entity/EquipmentSlot;)V
		ARG 1 rarity
		ARG 2 category
		ARG 3 applicableSlots
	METHOD byId (I)Lnet/minecraft/world/item/enchantment/Enchantment;
		COMMENT Gets an enchantment from the registry using it's internal numeric Id.
		ARG 0 id
			COMMENT The internal numeric id of the enchantment.
	METHOD canEnchant (Lnet/minecraft/world/item/ItemStack;)Z
		COMMENT Checks if the enchantment can be applied to a given ItemStack.
		ARG 1 stack
			COMMENT The ItemStack to test.
	METHOD checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z
		COMMENT Checks if the enchantment can be applied with another enchantment. Being incompatible will prevent the two enchantments from being applied to the same item.
		COMMENT @return Whether or not the two enchantments are compatible.
		ARG 1 other
			COMMENT The other enchantment to test compatibility with.
	METHOD doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V
		COMMENT A hook that is called every time an entity with this enchantment attacks another entity.
		ARG 1 attacker
			COMMENT The user of the enchantment.
		ARG 2 target
			COMMENT The entity being attacked.
		ARG 3 level
			COMMENT The level of the enchantment.
	METHOD doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V
		COMMENT A hook that is called every time an entity with this enchantment is attacked by another entity.
		ARG 1 target
			COMMENT The user of the enchantment.
		ARG 2 attacker
			COMMENT The entity that attacked the user.
		ARG 3 level
			COMMENT The level of the enchantment.
	METHOD getDamageBonus (ILnet/minecraft/world/entity/MobType;)F
		COMMENT Calculates the amount of additional damage to deal when attacking with an item with the enchantment.
		ARG 1 level
			COMMENT The level of the enchantment being used.
		ARG 2 type
	METHOD getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I
		COMMENT Calculates the amount of additional damage protection to provide when a user is damaged.
		ARG 1 level
			COMMENT The level of the enchantment being used.
		ARG 2 source
			COMMENT The source of the damage.
	METHOD getDescriptionId ()Ljava/lang/String;
		COMMENT Gets the description Id of the enchantment. This is commonly used to create localization keys.
	METHOD getFullname (I)Lnet/minecraft/network/chat/Component;
		COMMENT Gets the name of the enchantment with the level appended to the end. The game will attempt to convert the letter to roman numerals.
		COMMENT @return The name of the enchantment with the level appened to the end.
		ARG 1 level
			COMMENT The level of the enchantment.
	METHOD getMaxCost (I)I
		ARG 1 level
	METHOD getMaxLevel ()I
		COMMENT Gets the maximum level of the enchantment under normal circumstances such as the enchanting table. This limit is not strictly enforced and may be ignored through custom item NBT or other customizations.
	METHOD getMinCost (I)I
		COMMENT Returns the minimal value of enchantability needed on the enchantment level passed.
		ARG 1 level
	METHOD getMinLevel ()I
		COMMENT Gets the minimum level of the enchantment under normal circumstances such as the enchanting table. This limit is not strictly enforced and may be ignored through custom item NBT or other customizations.
	METHOD getOrCreateDescriptionId ()Ljava/lang/String;
		COMMENT Lazily initializes a descriptionId for an enchantment using the enchantments registry name.
	METHOD getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity;
		COMMENT Gets the rarity of the enchantment. This determines how rare the enchantment will be in enchantment pools such as the enchanting table and loot tables.
	METHOD getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map;
		COMMENT Creates a new map containing all items equipped by an entity in {@linkplain #slots slots that the enchantment cares about}. These items are not tested for having the enchantment.
		ARG 1 entity
			COMMENT The entity to collect equipment for.
	METHOD isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z
		COMMENT Checks if the enchantment is compatible with another enchantment.
		COMMENT @return Whether or not both enchantments agree that they are compatible with eachother.
		ARG 1 other
			COMMENT The other enchantment to test compatibility with.
	METHOD isCurse ()Z
		COMMENT Checks if the enchantment is considered a curse. These enchantments are treated as debuffs and can not be removed from items under normal circumstances.
		COMMENT @return Whether or not the enchantment is a curse.
	METHOD isDiscoverable ()Z
		COMMENT Checks if the enchantment can be discovered by game mechanics which pull random enchanments from the enchantment registry.
		COMMENT @return Whether or not the enchantment can be discovered.
	METHOD isTradeable ()Z
		COMMENT Checks if the enchantment can be traded by NPCs like villagers.
		COMMENT @return Whether or not this enchantment can be traded.
	METHOD isTreasureOnly ()Z
		COMMENT Checks if the enchantment should be considered a treasure enchantment. These enchantments can not be obtained using the enchantment table. The mending enchantment is an example of a treasure enchantment.
		COMMENT @return Whether or not the enchantment is a treasure enchantment.
	CLASS Rarity
		METHOD <init> (Ljava/lang/String;II)V
			ARG 3 weight
		METHOD getWeight ()I
			COMMENT Retrieves the weight of Rarity.
