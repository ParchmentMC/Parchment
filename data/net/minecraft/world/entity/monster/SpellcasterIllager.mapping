CLASS net/minecraft/world/entity/monster/SpellcasterIllager
	FIELD DATA_SPELL_CASTING_ID Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD currentSpell Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
	FIELD spellCastingTickCount I
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V
	METHOD access$000 (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		ARG 1 compound
	METHOD customServerAiStep ()V
	METHOD defineSynchedData ()V
	METHOD getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose;
	METHOD getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
	METHOD getSpellCastingTime ()I
	METHOD isCastingSpell ()Z
	METHOD readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		COMMENT (abstract) Protected helper method to read subclass entity data from NBT.
		ARG 1 compound
	METHOD setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V
		ARG 1 spellType
	METHOD tick ()V
		COMMENT Called to update the entity's position/logic.
	CLASS IllagerSpell
		FIELD $VALUES [Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD BLINDNESS Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD DISAPPEAR Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD FANGS Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD NONE Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD SUMMON_VEX Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD WOLOLO Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		FIELD id I
		FIELD spellColor [D
		METHOD $values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		METHOD <clinit> ()V
		METHOD <init> (Ljava/lang/String;IIDDD)V
		METHOD byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
			ARG 0 id
		METHOD valueOf (Ljava/lang/String;)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		METHOD values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
	CLASS SpellcasterCastingSpellGoal
		FIELD this$0 Lnet/minecraft/world/entity/monster/SpellcasterIllager;
		METHOD <init> (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)V
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS SpellcasterUseSpellGoal
		FIELD attackWarmupDelay I
		FIELD nextAttackTickCount I
		FIELD this$0 Lnet/minecraft/world/entity/monster/SpellcasterIllager;
		METHOD <init> (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD getCastWarmupTime ()I
		METHOD getCastingInterval ()I
		METHOD getCastingTime ()I
		METHOD getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;
		METHOD getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent;
		METHOD performSpellCasting ()V
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
