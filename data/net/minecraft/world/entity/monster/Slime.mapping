CLASS net/minecraft/world/entity/monster/Slime
	FIELD ID_SIZE Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD MAX_SIZE I
	FIELD MIN_SIZE I
	FIELD oSquish F
	FIELD squish F
	FIELD targetSquish F
	FIELD wasOnGround Z
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V
	METHOD access$000 (Lnet/minecraft/world/entity/monster/Slime;)Z
	METHOD addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		ARG 1 compound
	METHOD checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z
	METHOD dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V
		ARG 1 entity
	METHOD decreaseSquish ()V
	METHOD defineSynchedData ()V
	METHOD doPlayJumpSound ()Z
		COMMENT Returns true if the slime makes a sound when it jumps (based upon the slime's size)
	METHOD finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData;
		ARG 1 level
		ARG 2 difficulty
		ARG 3 reason
		ARG 4 spawnData
		ARG 5 dataTag
	METHOD getAttackDamage ()F
	METHOD getDeathSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation;
	METHOD getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions;
		ARG 1 pose
	METHOD getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;
		ARG 1 damageSource
	METHOD getJumpDelay ()I
		COMMENT Gets the amount of time the slime needs to wait between jumps.
	METHOD getJumpSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getMaxHeadXRot ()I
		COMMENT The speed it takes to move the entityliving's rotationPitch through the faceEntity method. This is only currently use in wolves.
	METHOD getParticleType ()Lnet/minecraft/core/particles/ParticleOptions;
	METHOD getSize ()I
		COMMENT Returns the size of the slime.
	METHOD getSoundPitch ()F
	METHOD getSoundVolume ()F
		COMMENT Returns the volume for the sounds this mob makes.
	METHOD getSquishSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F
		ARG 1 pose
		ARG 2 size
	METHOD getType ()Lnet/minecraft/world/entity/EntityType;
	METHOD isDealsDamage ()Z
		COMMENT Indicates weather the slime is able to damage the player (based upon the slime's size)
	METHOD isTiny ()Z
	METHOD jumpFromGround ()V
		COMMENT Causes this entity to do an upwards motion (jumping).
	METHOD lambda$registerGoals$0 (Lnet/minecraft/world/entity/LivingEntity;)Z
	METHOD onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V
		ARG 1 key
	METHOD playerTouch (Lnet/minecraft/world/entity/player/Player;)V
		COMMENT Called by a player entity when they collide with an entity
		ARG 1 entity
	METHOD push (Lnet/minecraft/world/entity/Entity;)V
		COMMENT Applies a velocity to the entities, to push them away from eachother.
		ARG 1 entity
	METHOD readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		COMMENT (abstract) Protected helper method to read subclass entity data from NBT.
		ARG 1 compound
	METHOD refreshDimensions ()V
	METHOD registerGoals ()V
	METHOD remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V
	METHOD setSize (IZ)V
		ARG 1 size
		ARG 2 resetHealth
	METHOD shouldDespawnInPeaceful ()Z
	METHOD tick ()V
		COMMENT Called to update the entity's position/logic.
	CLASS SlimeAttackGoal
		FIELD growTiredTimer I
		FIELD slime Lnet/minecraft/world/entity/monster/Slime;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Slime;)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS SlimeFloatGoal
		FIELD slime Lnet/minecraft/world/entity/monster/Slime;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Slime;)V
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS SlimeKeepOnJumpingGoal
		FIELD slime Lnet/minecraft/world/entity/monster/Slime;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Slime;)V
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS SlimeMoveControl
		FIELD isAggressive Z
		FIELD jumpDelay I
		FIELD slime Lnet/minecraft/world/entity/monster/Slime;
		FIELD yRot F
		METHOD <init> (Lnet/minecraft/world/entity/monster/Slime;)V
		METHOD setDirection (FZ)V
			ARG 1 yRot
			ARG 2 aggressive
		METHOD setWantedMovement (D)V
			ARG 1 speed
		METHOD tick ()V
	CLASS SlimeRandomDirectionGoal
		FIELD chosenDegrees F
		FIELD nextRandomizeTime I
		FIELD slime Lnet/minecraft/world/entity/monster/Slime;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Slime;)V
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
