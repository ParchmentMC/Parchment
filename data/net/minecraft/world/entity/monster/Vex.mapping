CLASS net/minecraft/world/entity/monster/Vex
	FIELD DATA_FLAGS_ID Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD FLAG_IS_CHARGING I
	FIELD FLAP_DEGREES_PER_TICK F
	FIELD TICKS_PER_FLAP I
	FIELD boundOrigin Lnet/minecraft/core/BlockPos;
	FIELD hasLimitedLife Z
	FIELD limitedLifeTicks I
	FIELD owner Lnet/minecraft/world/entity/Mob;
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V
	METHOD access$000 (Lnet/minecraft/world/entity/monster/Vex;)Ljava/util/Random;
	METHOD access$100 (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/world/entity/ai/control/MoveControl;
	METHOD access$200 (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/world/entity/ai/control/MoveControl;
	METHOD access$300 (Lnet/minecraft/world/entity/monster/Vex;)Ljava/util/Random;
	METHOD access$400 (Lnet/minecraft/world/entity/monster/Vex;)Ljava/util/Random;
	METHOD access$500 (Lnet/minecraft/world/entity/monster/Vex;)Ljava/util/Random;
	METHOD access$600 (Lnet/minecraft/world/entity/monster/Vex;)Ljava/util/Random;
	METHOD access$700 (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/world/entity/ai/control/MoveControl;
	METHOD addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		ARG 1 compound
	METHOD createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder;
	METHOD defineSynchedData ()V
	METHOD finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData;
		ARG 1 level
		ARG 2 difficulty
		ARG 3 reason
		ARG 4 spawnData
		ARG 5 dataTag
	METHOD getAmbientSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getBoundOrigin ()Lnet/minecraft/core/BlockPos;
	METHOD getBrightness ()F
		COMMENT Gets how bright this entity is.
	METHOD getDeathSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;
		ARG 1 damageSource
	METHOD getOwner ()Lnet/minecraft/world/entity/Mob;
	METHOD getVexFlag (I)Z
		ARG 1 mask
	METHOD isCharging ()Z
	METHOD isFlapping ()Z
	METHOD move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V
		ARG 1 type
		ARG 2 pos
	METHOD populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V
		COMMENT Gives armor or weapon for entity based on given DifficultyInstance
		ARG 1 difficulty
	METHOD readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		COMMENT (abstract) Protected helper method to read subclass entity data from NBT.
		ARG 1 compound
	METHOD registerGoals ()V
	METHOD setBoundOrigin (Lnet/minecraft/core/BlockPos;)V
		ARG 1 boundOrigin
	METHOD setIsCharging (Z)V
		ARG 1 charging
	METHOD setLimitedLife (I)V
		ARG 1 limitedLifeTicks
	METHOD setOwner (Lnet/minecraft/world/entity/Mob;)V
		ARG 1 owner
	METHOD setVexFlag (IZ)V
		ARG 1 mask
		ARG 2 value
	METHOD tick ()V
		COMMENT Called to update the entity's position/logic.
	CLASS VexChargeAttackGoal
		FIELD this$0 Lnet/minecraft/world/entity/monster/Vex;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Vex;)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS VexCopyOwnerTargetGoal
		FIELD copyOwnerTargeting Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;
		FIELD this$0 Lnet/minecraft/world/entity/monster/Vex;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/world/entity/PathfinderMob;)V
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
	CLASS VexMoveControl
		FIELD this$0 Lnet/minecraft/world/entity/monster/Vex;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/world/entity/monster/Vex;)V
		METHOD tick ()V
	CLASS VexRandomMoveGoal
		FIELD this$0 Lnet/minecraft/world/entity/monster/Vex;
		METHOD <init> (Lnet/minecraft/world/entity/monster/Vex;)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
