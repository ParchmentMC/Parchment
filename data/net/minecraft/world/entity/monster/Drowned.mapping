CLASS net/minecraft/world/entity/monster/Drowned
	METHOD canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z
		ARG 1 candidate
		ARG 2 existing
	METHOD checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z
		ARG 0 drowned
		ARG 1 serverLevel
		ARG 2 mobSpawnType
		ARG 3 pos
		ARG 4 random
	METHOD checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z
		ARG 1 level
	METHOD getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;
		ARG 1 damageSource
	METHOD isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z
		ARG 0 level
		ARG 1 pos
	METHOD okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z
		ARG 1 target
	METHOD performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V
		COMMENT Attack the specified entity using a ranged attack.
		ARG 1 target
		ARG 2 distanceFactor
	METHOD setSearchingForLand (Z)V
		ARG 1 searchingForLand
	METHOD travel (Lnet/minecraft/world/phys/Vec3;)V
		ARG 1 travelVector
	CLASS DrownedAttackGoal
		METHOD <init> (Lnet/minecraft/world/entity/monster/Drowned;DZ)V
			ARG 1 drowned
			ARG 2 speedModifier
			ARG 4 followingTargetEvenIfNotSeen
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	CLASS DrownedSwimUpGoal
		METHOD <init> (Lnet/minecraft/world/entity/monster/Drowned;DI)V
			ARG 1 drowned
			ARG 2 speedModifier
			ARG 4 seaLevel
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS DrownedMoveControl
		METHOD <init> (Lnet/minecraft/world/entity/monster/Drowned;)V
			ARG 1 drowned
	CLASS DrownedGoToBeachGoal
		METHOD <init> (Lnet/minecraft/world/entity/monster/Drowned;D)V
			ARG 1 drowned
			ARG 2 speedModifier
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
			COMMENT Return {@code true} to set given position as destination
			ARG 1 level
			ARG 2 pos
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
	CLASS DrownedGoToWaterGoal
		METHOD <init> (Lnet/minecraft/world/entity/PathfinderMob;D)V
			ARG 1 mob
			ARG 2 speedModifier
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
	CLASS DrownedTridentAttackGoal
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
