CLASS net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	FIELD PATHFINDING_DELAY_RANGE Lnet/minecraft/util/valueproviders/UniformInt;
	FIELD attackDelay I
	FIELD attackRadiusSqr F
	FIELD crossbowState Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
	FIELD mob Lnet/minecraft/world/entity/monster/Monster;
	FIELD seeTime I
	FIELD speedModifier D
	FIELD updatePathDelay I
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/monster/Monster;DF)V
	METHOD canContinueToUse ()Z
		COMMENT Returns whether an in-progress EntityAIBase should continue executing
	METHOD canRun ()Z
	METHOD canUse ()Z
		COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	METHOD isHoldingCrossbow ()Z
	METHOD isValidTarget ()Z
	METHOD stop ()V
		COMMENT Reset the task's internal state. Called when this task is interrupted by another one
	METHOD tick ()V
		COMMENT Keep ticking a continuous task that has already been started
	CLASS CrossbowState
		FIELD $VALUES [Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		FIELD CHARGED Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		FIELD CHARGING Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		FIELD READY_TO_ATTACK Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		FIELD UNCHARGED Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		METHOD $values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		METHOD <clinit> ()V
		METHOD <init> (Ljava/lang/String;I)V
		METHOD valueOf (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
		METHOD values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState;
