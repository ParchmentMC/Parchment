CLASS net/minecraft/world/entity/ai/goal/GoalSelector
	FIELD lockedFlags Ljava/util/Map;
		COMMENT Goals currently using a particular flag
	METHOD <init> (Ljava/util/function/Supplier;)V
		ARG 1 profiler
	METHOD addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V
		COMMENT Add a goal to the GoalSelector with a certain priority. Lower numbers are higher priority.
		ARG 1 priority
		ARG 2 goal
	METHOD disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V
		ARG 1 flag
	METHOD enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V
		ARG 1 flag
	METHOD lambda$removeGoal$0 (Lnet/minecraft/world/entity/ai/goal/Goal;Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z
		ARG 1 wrappedGoal
	METHOD lambda$removeGoal$1 (Lnet/minecraft/world/entity/ai/goal/Goal;Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z
		ARG 1 wrappedGoal
	METHOD lambda$tick$2 (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z
		ARG 1 wrappedGoal
	METHOD lambda$tick$3 (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)V
		ARG 1 lockedFlag
		ARG 2 wrappedGoal
	METHOD lambda$tick$4 (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z
		ARG 0 wrappedGoal
	METHOD lambda$tick$5 (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z
		ARG 1 wrappedGoal
	METHOD lambda$tick$8 (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V
		ARG 2 lockedFlag
	METHOD lambda$tick$9 (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)V
		ARG 1 wrappedGoal
	METHOD removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V
		COMMENT Remove the goal from the GoalSelector. This must be the same object as the goal you are trying to remove, which may not always be accessible.
		ARG 1 goal
	METHOD setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V
		ARG 1 flag
		ARG 2 enabled
	METHOD setNewGoalRate (I)V
		ARG 1 newGoalRate
	METHOD tick ()V
		COMMENT Ticks every goal in the selector.
		COMMENT Attempts to start each goal based on if it can be used, or stop it if it can't.
	CLASS 1
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
