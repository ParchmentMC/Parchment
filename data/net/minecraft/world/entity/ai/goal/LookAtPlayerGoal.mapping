CLASS net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	FIELD DEFAULT_PROBABILITY F
	FIELD lookAt Lnet/minecraft/world/entity/Entity;
	FIELD lookAtContext Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;
	FIELD lookAtType Ljava/lang/Class;
	FIELD lookDistance F
	FIELD lookTime I
	FIELD mob Lnet/minecraft/world/entity/Mob;
	FIELD onlyHorizontal Z
	FIELD probability F
	METHOD <init> (Lnet/minecraft/world/entity/Mob;Ljava/lang/Class;F)V
	METHOD <init> (Lnet/minecraft/world/entity/Mob;Ljava/lang/Class;FF)V
	METHOD <init> (Lnet/minecraft/world/entity/Mob;Ljava/lang/Class;FFZ)V
	METHOD canContinueToUse ()Z
		COMMENT Returns whether an in-progress EntityAIBase should continue executing
	METHOD canUse ()Z
		COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	METHOD lambda$canUse$1 (Lnet/minecraft/world/entity/LivingEntity;)Z
	METHOD lambda$new$0 (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)Z
	METHOD start ()V
		COMMENT Execute a one shot task or start executing a continuous task
	METHOD stop ()V
		COMMENT Reset the task's internal state. Called when this task is interrupted by another one
	METHOD tick ()V
		COMMENT Keep ticking a continuous task that has already been started
