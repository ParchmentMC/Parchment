CLASS net/minecraft/world/entity/ai/goal/target/TargetGoal
	FIELD CANT_REACH_CACHE I
	FIELD CAN_REACH_CACHE I
	FIELD EMPTY_REACH_CACHE I
	FIELD mob Lnet/minecraft/world/entity/Mob;
		COMMENT The entity that this goal belongs to
	FIELD mustReach Z
	FIELD mustSee Z
	FIELD reachCache I
	FIELD reachCacheTime I
	FIELD targetMob Lnet/minecraft/world/entity/LivingEntity;
	FIELD unseenMemoryTicks I
	FIELD unseenTicks I
	METHOD <init> (Lnet/minecraft/world/entity/Mob;Z)V
	METHOD <init> (Lnet/minecraft/world/entity/Mob;ZZ)V
	METHOD canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z
		COMMENT checks if is is a suitable target
		ARG 1 potentialTarget
		ARG 2 targetPredicate
	METHOD canContinueToUse ()Z
		COMMENT Returns whether an in-progress EntityAIBase should continue executing
	METHOD canReach (Lnet/minecraft/world/entity/LivingEntity;)Z
		COMMENT Checks to see if this entity can find a short path to the given target.
		ARG 1 target
	METHOD getFollowDistance ()D
	METHOD setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal;
		ARG 1 unseenMemoryTicks
	METHOD start ()V
		COMMENT Execute a one shot task or start executing a continuous task
	METHOD stop ()V
		COMMENT Reset the task's internal state. Called when this task is interrupted by another one
