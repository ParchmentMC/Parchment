CLASS net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	FIELD TIME_OUT_DURATION I
	FIELD getCooldownOnFail Ljava/util/function/ToIntFunction;
	FIELD getPrepareRamSound Ljava/util/function/Function;
	FIELD maxRamDistance I
	FIELD minRamDistance I
	FIELD ramCandidate Ljava/util/Optional;
	FIELD ramPrepareTime I
	FIELD ramTargeting Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;
	FIELD reachedRamPositionTimestamp Ljava/util/Optional;
	FIELD walkSpeed F
	METHOD <init> (Ljava/util/function/ToIntFunction;IIFLnet/minecraft/world/entity/ai/targeting/TargetingConditions;ILjava/util/function/Function;)V
	METHOD calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional;
	METHOD canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z
	METHOD canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z
	METHOD chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V
	METHOD getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3;
	METHOD isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z
	METHOD lambda$calculateRammingStartPosition$3 (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z
	METHOD lambda$chooseRamPosition$4 (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate;
	METHOD lambda$start$0 (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Z
	METHOD lambda$start$1 (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/List;)Ljava/util/Optional;
	METHOD lambda$start$2 (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V
	METHOD start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V
	METHOD start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V
	METHOD stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V
	METHOD stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V
	METHOD tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V
	METHOD tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V
	CLASS RamCandidate
		FIELD startPosition Lnet/minecraft/core/BlockPos;
		FIELD target Lnet/minecraft/world/entity/LivingEntity;
		FIELD targetPosition Lnet/minecraft/core/BlockPos;
		METHOD <init> (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V
		METHOD getStartPosition ()Lnet/minecraft/core/BlockPos;
		METHOD getTarget ()Lnet/minecraft/world/entity/LivingEntity;
		METHOD getTargetPosition ()Lnet/minecraft/core/BlockPos;
