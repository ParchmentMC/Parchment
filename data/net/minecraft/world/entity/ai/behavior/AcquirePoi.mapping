CLASS net/minecraft/world/entity/ai/behavior/AcquirePoi
	METHOD <init> (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)V
		ARG 1 poiType
		ARG 2 memoryKey
		ARG 3 memoryToAcquire
		ARG 4 onlyIfAdult
		ARG 5 onPoiAcquisitionEvent
	METHOD <init> (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)V
		ARG 1 poiType
		ARG 2 memoryToAcquire
		ARG 3 onlyIfAdult
		ARG 4 onPoiAcquisitionEvent
	METHOD checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z
		ARG 1 level
		ARG 2 owner
	METHOD constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap;
		ARG 0 memoryKey
		ARG 1 memoryToAcquire
	METHOD lambda$start$0 (JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z
		ARG 2 jitter
	METHOD lambda$start$1 (JLnet/minecraft/core/BlockPos;)Z
		ARG 3 pos
	METHOD lambda$start$3 (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Ljava/lang/Byte;)V
		ARG 2 event
	METHOD lambda$start$5 (Lnet/minecraft/world/entity/PathfinderMob;JJ)Lnet/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry;
		ARG 3 key
	METHOD start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V
		ARG 1 level
		ARG 2 entity
		ARG 3 gameTime
	CLASS JitteredLinearRetry
		METHOD <init> (Lnet/minecraft/util/RandomSource;J)V
			ARG 1 random
			ARG 2 timestamp
		METHOD isStillValid (J)Z
			ARG 1 timestamp
		METHOD markAttempt (J)V
			ARG 1 timestamp
		METHOD shouldRetry (J)Z
			ARG 1 timestamp
