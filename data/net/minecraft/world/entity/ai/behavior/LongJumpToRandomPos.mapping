CLASS net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	FIELD FIND_JUMP_TRIES I
	FIELD MIN_PATHFIND_DISTANCE_TO_VALID_JUMP I
	FIELD PREPARE_JUMP_DURATION I
	FIELD TIME_OUT_DURATION I
	FIELD chosenJump Ljava/util/Optional;
	FIELD findJumpTries I
	FIELD getJumpSound Ljava/util/function/Function;
	FIELD initialPosition Ljava/util/Optional;
	FIELD jumpCandidates Ljava/util/List;
	FIELD maxJumpVelocity F
	FIELD maxLongJumpHeight I
	FIELD maxLongJumpWidth I
	FIELD prepareJumpStart J
	FIELD timeBetweenLongJumps Lnet/minecraft/util/valueproviders/UniformInt;
	METHOD <init> (Lnet/minecraft/util/valueproviders/UniformInt;IIFLjava/util/function/Function;)V
	METHOD calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;I)Ljava/util/Optional;
	METHOD calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional;
	METHOD canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z
	METHOD canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z
	METHOD checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z
	METHOD checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z
	METHOD isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z
	METHOD lambda$start$0 (Lnet/minecraft/core/BlockPos;DLnet/minecraft/world/phys/Vec3;)V
	METHOD start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V
	METHOD start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V
	METHOD tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V
	METHOD tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V
	CLASS PossibleJump
		FIELD jumpTarget Lnet/minecraft/core/BlockPos;
		FIELD jumpVector Lnet/minecraft/world/phys/Vec3;
		METHOD <init> (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;I)V
		METHOD getJumpTarget ()Lnet/minecraft/core/BlockPos;
		METHOD getJumpVector ()Lnet/minecraft/world/phys/Vec3;
