CLASS net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	METHOD <init> (Lnet/minecraft/util/valueproviders/UniformInt;IIFLjava/util/function/Function;)V
		ARG 1 timeBetweenLongJumps
		ARG 2 maxLongJumpHeight
		ARG 3 maxLongJumpWidth
		ARG 4 maxJumpVelocity
		ARG 5 getJumpSound
	METHOD <init> (Lnet/minecraft/util/valueproviders/UniformInt;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V
		ARG 1 timeBetweenLongJumps
		ARG 2 maxLongJumpHeight
		ARG 3 maxLongJumpWidth
		ARG 4 maxJumpVelocity
		ARG 5 getJumpSound
		ARG 6 acceptableLandingSpot
	METHOD calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3;
		ARG 1 mob
		ARG 2 target
	METHOD defaultAcceptableLandingSpot (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z
		ARG 0 mob
		ARG 1 pos
	METHOD getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional;
		ARG 1 level
	METHOD isAcceptableLandingPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z
		ARG 1 level
		ARG 2 entity
		ARG 3 pos
	METHOD pickCandidate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V
		ARG 1 level
		ARG 2 entity
		ARG 3 prepareJumpStart
	CLASS PossibleJump
		METHOD <init> (Lnet/minecraft/core/BlockPos;I)V
			ARG 1 jumpTarget
			ARG 2 weight
