CLASS net/minecraft/world/entity/animal/Squid
	METHOD aiStep ()V
		COMMENT Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn.
	METHOD checkSquidSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z
		ARG 0 squid
		ARG 1 level
		ARG 2 spawnType
		ARG 3 pos
		ARG 4 random
	METHOD getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;
		ARG 1 damageSource
	METHOD getSoundVolume ()F
		COMMENT Returns the volume for the sounds this mob makes.
	METHOD getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F
		ARG 1 pose
		ARG 2 size
	METHOD handleEntityEvent (B)V
		COMMENT Handler for {@link World#setEntityState}
		ARG 1 id
	METHOD hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z
		COMMENT Called when the entity is attacked.
		ARG 1 source
		ARG 2 amount
	METHOD rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3;
		ARG 1 vector
	METHOD setMovementVector (FFF)V
		ARG 1 tx
		ARG 2 ty
		ARG 3 tz
	METHOD travel (Lnet/minecraft/world/phys/Vec3;)V
		ARG 1 travelVector
	CLASS SquidFleeGoal
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS SquidRandomMovementGoal
		METHOD <init> (Lnet/minecraft/world/entity/animal/Squid;Lnet/minecraft/world/entity/animal/Squid;)V
			ARG 2 squid
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
