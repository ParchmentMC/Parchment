CLASS net/minecraft/world/entity/animal/Bee
	FIELD COOLDOWN_BEFORE_LOCATING_NEW_FLOWER I
	FIELD COOLDOWN_BEFORE_LOCATING_NEW_HIVE I
	FIELD DATA_FLAGS_ID Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_REMAINING_ANGER_TIME Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD FLAG_HAS_NECTAR I
	FIELD FLAG_HAS_STUNG I
	FIELD FLAG_ROLL I
	FIELD FLAP_DEGREES_PER_TICK F
	FIELD HIVE_CLOSE_ENOUGH_DISTANCE I
	FIELD HIVE_SEARCH_DISTANCE I
	FIELD MAX_CROPS_GROWABLE I
	FIELD MIN_ATTACK_DIST I
	FIELD PATHFIND_TO_HIVE_WHEN_CLOSER_THAN I
	FIELD PERSISTENT_ANGER_TIME Lnet/minecraft/util/valueproviders/UniformInt;
	FIELD POISON_SECONDS_HARD I
	FIELD POISON_SECONDS_NORMAL I
	FIELD STING_DEATH_COUNTDOWN I
	FIELD TAG_CANNOT_ENTER_HIVE_TICKS Ljava/lang/String;
	FIELD TAG_CROPS_GROWN_SINCE_POLLINATION Ljava/lang/String;
	FIELD TAG_FLOWER_POS Ljava/lang/String;
	FIELD TAG_HAS_NECTAR Ljava/lang/String;
	FIELD TAG_HAS_STUNG Ljava/lang/String;
	FIELD TAG_HIVE_POS Ljava/lang/String;
	FIELD TAG_TICKS_SINCE_POLLINATION Ljava/lang/String;
	FIELD TICKS_BEFORE_GOING_TO_KNOWN_FLOWER I
	FIELD TICKS_PER_FLAP I
	FIELD TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME I
	FIELD TOO_FAR_DISTANCE I
	FIELD beePollinateGoal Lnet/minecraft/world/entity/animal/Bee$BeePollinateGoal;
	FIELD goToHiveGoal Lnet/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal;
	FIELD goToKnownFlowerGoal Lnet/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal;
	FIELD hivePos Lnet/minecraft/core/BlockPos;
	FIELD numCropsGrownSincePollination I
	FIELD persistentAngerTarget Ljava/util/UUID;
	FIELD remainingCooldownBeforeLocatingNewFlower I
	FIELD remainingCooldownBeforeLocatingNewHive I
	FIELD rollAmount F
	FIELD rollAmountO F
	FIELD savedFlowerPos Lnet/minecraft/core/BlockPos;
	FIELD stayOutOfHiveCountdown I
	FIELD ticksWithoutNectarSinceExitingHive I
	FIELD timeSinceSting I
	FIELD underWaterTicks I
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V
	METHOD access$000 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$100 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$1000 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1100 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1200 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1300 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1400 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1500 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1600 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1700 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1800 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$1900 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$200 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$2000 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2100 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$2200 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2300 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$2400 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2500 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2600 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2700 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$2800 (Lnet/minecraft/world/entity/animal/Bee;)Ljava/util/Random;
	METHOD access$300 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$400 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$500 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$600 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$700 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$800 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD access$900 (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
	METHOD addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		ARG 1 compound
	METHOD aiStep ()V
		COMMENT Called frequently so the entity can update its state every tick as required. For example, zombies and skeletons use this to react to sunlight and start to burn.
	METHOD causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z
	METHOD checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V
		ARG 1 y
		ARG 3 onGround
		ARG 4 state
		ARG 5 pos
	METHOD closerThan (Lnet/minecraft/core/BlockPos;I)Z
		ARG 1 pos
		ARG 2 distance
	METHOD createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder;
	METHOD createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation;
		COMMENT Returns new PathNavigateGround instance
		ARG 1 level
	METHOD customServerAiStep ()V
	METHOD defineSynchedData ()V
	METHOD doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z
		ARG 1 entity
	METHOD doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z
		ARG 1 pos
	METHOD dropOffNectar ()V
	METHOD getAmbientSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getBlacklistedHives ()Ljava/util/List;
	METHOD getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob;
	METHOD getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee;
	METHOD getCropsGrownSincePollination ()I
	METHOD getDeathSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getFlag (I)Z
		ARG 1 flagId
	METHOD getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector;
	METHOD getHivePos ()Lnet/minecraft/core/BlockPos;
	METHOD getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent;
		ARG 1 damageSource
	METHOD getLeashOffset ()Lnet/minecraft/world/phys/Vec3;
	METHOD getMobType ()Lnet/minecraft/world/entity/MobType;
	METHOD getPersistentAngerTarget ()Ljava/util/UUID;
	METHOD getRemainingPersistentAngerTime ()I
	METHOD getRollAmount (F)F
	METHOD getSavedFlowerPos ()Lnet/minecraft/core/BlockPos;
	METHOD getSoundVolume ()F
		COMMENT Returns the volume for the sounds this mob makes.
	METHOD getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F
		ARG 1 pose
		ARG 2 size
	METHOD getTravellingTicks ()I
	METHOD getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F
		ARG 1 pos
		ARG 2 level
	METHOD hasHive ()Z
	METHOD hasNectar ()Z
	METHOD hasSavedFlowerPos ()Z
	METHOD hasStung ()Z
	METHOD hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z
		COMMENT Called when the entity is attacked.
		ARG 1 source
		ARG 2 amount
	METHOD incrementNumCropsGrownSincePollination ()V
	METHOD isFlapping ()Z
	METHOD isFlowerValid (Lnet/minecraft/core/BlockPos;)Z
		ARG 1 pos
	METHOD isFlying ()Z
	METHOD isFood (Lnet/minecraft/world/item/ItemStack;)Z
		COMMENT Checks if the parameter is an item which this animal can be fed to breed it (wheat, carrots or seeds depending on the animal type)
		ARG 1 stack
	METHOD isHiveNearFire ()Z
	METHOD isHiveValid ()Z
	METHOD isRolling ()Z
	METHOD isTiredOfLookingForNectar ()Z
	METHOD isTooFarAway (Lnet/minecraft/core/BlockPos;)Z
		ARG 1 pos
	METHOD jumpInLiquid (Lnet/minecraft/tags/Tag;)V
		ARG 1 fluidTag
	METHOD pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	METHOD playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V
		ARG 1 pos
		ARG 2 block
	METHOD readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		COMMENT (abstract) Protected helper method to read subclass entity data from NBT.
		ARG 1 compound
	METHOD registerGoals ()V
	METHOD resetNumCropsGrownSincePollination ()V
	METHOD resetTicksWithoutNectarSinceExitingHive ()V
	METHOD sendDebugPackets ()V
	METHOD setFlag (IZ)V
		ARG 1 flagId
	METHOD setHasNectar (Z)V
	METHOD setHasStung (Z)V
	METHOD setPersistentAngerTarget (Ljava/util/UUID;)V
		ARG 1 target
	METHOD setRemainingPersistentAngerTime (I)V
		ARG 1 time
	METHOD setRolling (Z)V
	METHOD setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	METHOD setStayOutOfHiveCountdown (I)V
	METHOD spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V
		ARG 1 level
		ARG 10 posY
		ARG 12 particleData
	METHOD startPersistentAngerTimer ()V
	METHOD tick ()V
		COMMENT Called to update the entity's position/logic.
	METHOD updateRollAmount ()V
	METHOD wantsToEnterHive ()Z
	CLASS 1
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/Level;)V
		METHOD isStableDestination (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
		METHOD tick ()V
	CLASS BaseBeeGoal
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	CLASS BeeAttackGoal
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;Lnet/minecraft/world/entity/PathfinderMob;DZ)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	CLASS BeeBecomeAngryTargetGoal
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD beeCanTarget ()Z
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
	CLASS BeeEnterHiveGoal
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
	CLASS BeeGoToHiveGoal
		FIELD MAX_BLACKLISTED_TARGETS I
		FIELD MAX_TRAVELLING_TICKS I
		FIELD TICKS_BEFORE_HIVE_DROP I
		FIELD blacklistedTargets Ljava/util/List;
		FIELD lastPath Lnet/minecraft/world/level/pathfinder/Path;
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		FIELD ticksStuck I
		FIELD travellingTicks I
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD blacklistTarget (Lnet/minecraft/core/BlockPos;)V
			ARG 1 pos
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD clearBlacklist ()V
		METHOD dropAndBlacklistHive ()V
		METHOD dropHive ()V
		METHOD hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
		METHOD isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
		METHOD pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z
			ARG 1 pos
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS BeeGoToKnownFlowerGoal
		FIELD MAX_TRAVELLING_TICKS I
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		FIELD travellingTicks I
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
		METHOD wantsToGoToKnownFlower ()Z
	CLASS BeeGrowCropGoal
		FIELD GROW_CHANCE I
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS BeeHurtByOtherGoal
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V
			ARG 1 mob
			ARG 2 target
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
	CLASS BeeLocateHiveGoal
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD findNearbyHivesWithSpace ()Ljava/util/List;
		METHOD lambda$findNearbyHivesWithSpace$0 (Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z
		METHOD lambda$findNearbyHivesWithSpace$1 (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)D
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
	CLASS BeeLookControl
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;Lnet/minecraft/world/entity/Mob;)V
		METHOD resetXRotOnTick ()Z
		METHOD tick ()V
			COMMENT Updates look
	CLASS BeePollinateGoal
		FIELD ARRIVAL_THRESHOLD D
		FIELD HOVER_HEIGHT_WITHIN_FLOWER F
		FIELD HOVER_POS_OFFSET F
		FIELD MAX_FIND_FLOWER_RETRY_COOLDOWN I
		FIELD MAX_POLLINATING_TICKS I
		FIELD MIN_FIND_FLOWER_RETRY_COOLDOWN I
		FIELD MIN_POLLINATION_TICKS I
		FIELD POSITION_CHANGE_CHANCE I
		FIELD SPEED_MODIFIER F
		FIELD VALID_POLLINATION_BLOCKS Ljava/util/function/Predicate;
		FIELD hoverPos Lnet/minecraft/world/phys/Vec3;
		FIELD lastSoundPlayedTick I
		FIELD pollinating Z
		FIELD pollinatingTicks I
		FIELD successfulPollinatingTicks I
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canBeeContinueToUse ()Z
		METHOD canBeeUse ()Z
		METHOD findNearbyFlower ()Ljava/util/Optional;
		METHOD findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional;
			ARG 2 distance
		METHOD getOffset ()F
		METHOD hasPollinatedLongEnough ()Z
		METHOD isPollinating ()Z
		METHOD lambda$new$0 (Lnet/minecraft/world/level/block/state/BlockState;)Z
		METHOD setWantedPos ()V
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
		METHOD stop ()V
			COMMENT Reset the task's internal state. Called when this task is interrupted by another one
		METHOD stopPollinating ()V
		METHOD tick ()V
			COMMENT Keep ticking a continuous task that has already been started
	CLASS BeeWanderGoal
		FIELD WANDER_THRESHOLD I
		FIELD this$0 Lnet/minecraft/world/entity/animal/Bee;
		METHOD <init> (Lnet/minecraft/world/entity/animal/Bee;)V
		METHOD canContinueToUse ()Z
			COMMENT Returns whether an in-progress EntityAIBase should continue executing
		METHOD canUse ()Z
			COMMENT Returns whether execution should begin. You can also read and cache any state necessary for execution in this method as well.
		METHOD findPos ()Lnet/minecraft/world/phys/Vec3;
		METHOD start ()V
			COMMENT Execute a one shot task or start executing a continuous task
