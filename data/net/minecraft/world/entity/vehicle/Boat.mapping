CLASS net/minecraft/world/entity/vehicle/Boat
	FIELD BUBBLE_TIME I
	FIELD DATA_ID_BUBBLE_TIME Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_DAMAGE Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_HURT Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_HURTDIR Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_PADDLE_LEFT Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_PADDLE_RIGHT Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD DATA_ID_TYPE Lnet/minecraft/network/syncher/EntityDataAccessor;
	FIELD PADDLE_LEFT I
	FIELD PADDLE_RIGHT I
	FIELD PADDLE_SOUND_TIME D
	FIELD PADDLE_SPEED D
	FIELD TIME_TO_EJECT I
	FIELD bubbleAngle F
	FIELD bubbleAngleO F
	FIELD bubbleColumnDirectionIsDown Z
	FIELD bubbleMultiplier F
	FIELD deltaRotation F
	FIELD inputDown Z
	FIELD inputLeft Z
	FIELD inputRight Z
	FIELD inputUp Z
	FIELD invFriction F
	FIELD isAboveBubbleColumn Z
	FIELD landFriction F
	FIELD lastYd D
	FIELD lerpSteps I
	FIELD lerpX D
	FIELD lerpXRot D
	FIELD lerpY D
	FIELD lerpYRot D
	FIELD lerpZ D
	FIELD oldStatus Lnet/minecraft/world/entity/vehicle/Boat$Status;
	FIELD outOfControlTicks F
	FIELD paddlePositions [F
	FIELD status Lnet/minecraft/world/entity/vehicle/Boat$Status;
	FIELD waterLevel D
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V
	METHOD <init> (Lnet/minecraft/world/level/Level;DDD)V
	METHOD addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		ARG 1 compound
	METHOD animateHurt ()V
		COMMENT Setups the entity to do the hurt animation. Only used by packets in multiplayer.
	METHOD canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z
		ARG 1 passenger
	METHOD canBeCollidedWith ()Z
	METHOD canCollideWith (Lnet/minecraft/world/entity/Entity;)Z
		ARG 1 entity
	METHOD canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z
	METHOD checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V
		ARG 1 y
		ARG 3 onGround
		ARG 4 state
		ARG 5 pos
	METHOD checkInWater ()Z
	METHOD clampRotation (Lnet/minecraft/world/entity/Entity;)V
		COMMENT Applies this boat's yaw to the given entity. Used to update the orientation of its passenger.
		ARG 1 entityToUpdate
	METHOD controlBoat ()V
	METHOD defineSynchedData ()V
	METHOD floatBoat ()V
		COMMENT Update the boat's speed, based on momentum.
	METHOD getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet;
	METHOD getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type;
	METHOD getBubbleAngle (F)F
		ARG 1 partialTicks
	METHOD getBubbleTime ()I
	METHOD getControllingPassenger ()Lnet/minecraft/world/entity/Entity;
		COMMENT For vehicles, the first passenger is generally considered the controller and "drives" the vehicle. For example, Pigs, Horses, and Boats are generally "steered" by the controlling passenger.
	METHOD getDamage ()F
		COMMENT Gets the damage taken from the last hit.
	METHOD getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3;
		ARG 1 livingEntity
	METHOD getDropItem ()Lnet/minecraft/world/item/Item;
	METHOD getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F
		ARG 1 pose
		ARG 2 size
	METHOD getGroundFriction ()F
		COMMENT Decides how much the boat should be gliding on the land (based on any slippery blocks)
	METHOD getHurtDir ()I
		COMMENT Gets the forward direction of the entity.
	METHOD getHurtTime ()I
		COMMENT Gets the time since the last hit.
	METHOD getMotionDirection ()Lnet/minecraft/core/Direction;
		COMMENT Gets the horizontal facing direction of this Entity, adjusted to take specially-treated entity types into account.
	METHOD getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission;
	METHOD getPaddleSound ()Lnet/minecraft/sounds/SoundEvent;
	METHOD getPaddleState (I)Z
		ARG 1 side
	METHOD getPassengersRidingOffset ()D
		COMMENT Returns the Y offset from the entity's position for any entity riding this one.
	METHOD getPickResult ()Lnet/minecraft/world/item/ItemStack;
	METHOD getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3;
	METHOD getRowingTime (IF)F
		ARG 1 side
		ARG 2 limbSwing
	METHOD getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status;
		COMMENT Determines whether the boat is in water, gliding on land, or in air
	METHOD getWaterLevelAbove ()F
	METHOD hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z
		COMMENT Called when the entity is attacked.
		ARG 1 source
		ARG 2 amount
	METHOD interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult;
		ARG 1 player
		ARG 2 hand
	METHOD isPickable ()Z
		COMMENT Returns true if other Entities should be prevented from moving through this Entity.
	METHOD isPushable ()Z
		COMMENT Returns true if this entity should push and be pushed by other entities when colliding.
	METHOD isUnderWater ()Z
	METHOD isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status;
		COMMENT Decides whether the boat is currently underwater.
	METHOD lambda$tickBubbleColumn$0 (Lnet/minecraft/world/entity/Entity;)Z
	METHOD lerpTo (DDDFFIZ)V
		COMMENT Sets a target for the client to interpolate towards over the next few ticks
		ARG 1 x
		ARG 3 y
		ARG 5 z
		ARG 7 yaw
		ARG 8 pitch
		ARG 9 posRotationIncrements
		ARG 10 teleport
	METHOD onAboveBubbleCol (Z)V
		ARG 1 downwards
	METHOD onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V
		COMMENT Applies this entity's orientation (pitch/yaw) to another entity. Used to update passenger orientation.
		ARG 1 entityToUpdate
	METHOD positionRider (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 passenger
	METHOD push (Lnet/minecraft/world/entity/Entity;)V
		COMMENT Applies a velocity to the entities, to push them away from eachother.
		ARG 1 entity
	METHOD readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V
		COMMENT (abstract) Protected helper method to read subclass entity data from NBT.
		ARG 1 compound
	METHOD setBubbleTime (I)V
		ARG 1 ticks
	METHOD setDamage (F)V
		COMMENT Sets the damage taken from the last hit.
		ARG 1 damageTaken
	METHOD setHurtDir (I)V
		COMMENT Sets the forward direction of the entity.
		ARG 1 forwardDirection
	METHOD setHurtTime (I)V
		COMMENT Sets the time to count down from since the last time entity was hit.
		ARG 1 timeSinceHit
	METHOD setInput (ZZZZ)V
		ARG 1 leftInputDown
		ARG 2 rightInputDown
		ARG 3 forwardInputDown
		ARG 4 backInputDown
	METHOD setPaddleState (ZZ)V
		ARG 1 left
		ARG 2 right
	METHOD setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V
		ARG 1 boatType
	METHOD tick ()V
		COMMENT Called to update the entity's position/logic.
	METHOD tickBubbleColumn ()V
	METHOD tickLerp ()V
	CLASS 1
		FIELD $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status [I
		FIELD $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type [I
		METHOD <clinit> ()V
	CLASS Status
		FIELD $VALUES [Lnet/minecraft/world/entity/vehicle/Boat$Status;
		FIELD IN_AIR Lnet/minecraft/world/entity/vehicle/Boat$Status;
		FIELD IN_WATER Lnet/minecraft/world/entity/vehicle/Boat$Status;
		FIELD ON_LAND Lnet/minecraft/world/entity/vehicle/Boat$Status;
		FIELD UNDER_FLOWING_WATER Lnet/minecraft/world/entity/vehicle/Boat$Status;
		FIELD UNDER_WATER Lnet/minecraft/world/entity/vehicle/Boat$Status;
		METHOD $values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status;
		METHOD <clinit> ()V
		METHOD <init> (Ljava/lang/String;I)V
		METHOD valueOf (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Status;
		METHOD values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status;
	CLASS Type
		FIELD $VALUES [Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD ACACIA Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD BIRCH Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD DARK_OAK Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD JUNGLE Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD OAK Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD SPRUCE Lnet/minecraft/world/entity/vehicle/Boat$Type;
		FIELD name Ljava/lang/String;
		FIELD planks Lnet/minecraft/world/level/block/Block;
		METHOD $values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type;
		METHOD <clinit> ()V
		METHOD <init> (Ljava/lang/String;ILnet/minecraft/world/level/block/Block;Ljava/lang/String;)V
		METHOD byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type;
			COMMENT Get a boat type by it's enum ordinal
			ARG 0 id
		METHOD byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type;
			ARG 0 name
		METHOD getName ()Ljava/lang/String;
		METHOD getPlanks ()Lnet/minecraft/world/level/block/Block;
		METHOD toString ()Ljava/lang/String;
		METHOD valueOf (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type;
		METHOD values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type;
