CLASS net/minecraft/world/inventory/AbstractContainerMenu
	METHOD <init> (Lnet/minecraft/world/inventory/MenuType;I)V
		ARG 1 menuType
		ARG 2 containerId
	METHOD addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot;
		ARG 1 intValue
	METHOD addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V
		ARG 1 array
	METHOD addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot;
		COMMENT Adds an item slot to this container
		ARG 1 slot
	METHOD addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V
		ARG 1 listener
	METHOD broadcastChanges ()V
		COMMENT Looks for changes made in the container, sends them to every listener.
	METHOD canDragTo (Lnet/minecraft/world/inventory/Slot;)Z
		COMMENT Returns {@code true} if the player can "drag-spilt" items into this slot. Returns {@code true} by default. Called to check if the slot can be added to a list of Slots to split the held ItemStack across.
		ARG 1 slot
	METHOD canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z
		COMMENT Checks if it's possible to add the given itemstack to the given slot.
		ARG 0 slot
		ARG 1 stack
		ARG 2 stackSizeMatters
	METHOD canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z
		COMMENT Called to determine if the current slot is valid for the stack merging (double-click) code. The stack passed in is null for the initial slot that was double-clicked.
		ARG 1 stack
		ARG 2 slot
	METHOD checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V
		ARG 0 intArray
		ARG 1 minSize
	METHOD checkContainerSize (Lnet/minecraft/world/Container;I)V
		ARG 0 container
		ARG 1 minSize
	METHOD clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V
		ARG 1 player
		ARG 2 container
	METHOD clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z
		COMMENT Handles the given Button-click on the server, currently only used by enchanting. Name is for legacy.
		ARG 1 player
		ARG 2 id
	METHOD clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V
		ARG 1 slotId
		ARG 2 button
		ARG 3 clickType
		ARG 4 player
	METHOD doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V
		ARG 1 slotId
		ARG 2 button
		ARG 3 clickType
		ARG 4 player
	METHOD findSlot (Lnet/minecraft/world/Container;I)Ljava/util/OptionalInt;
		ARG 1 container
		ARG 2 slotIndex
	METHOD getItems ()Lnet/minecraft/core/NonNullList;
		COMMENT Returns a list if {@code ItemStacks}, for each slot.
	METHOD getQuickCraftPlaceCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;)I
		ARG 0 slots
		ARG 1 type
		ARG 2 stack
	METHOD getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V
		COMMENT Compute the new stack size, Returns the stack with the new size. Args : dragSlots, dragMode, dragStack, slotStackSize
		ARG 0 dragSlots
		ARG 1 dragMode
		ARG 2 stack
		ARG 3 slotStackSize
	METHOD getQuickcraftHeader (I)I
		COMMENT Args : clickedButton, Returns (0 : start drag, 1 : add slot, 2 : end drag)
		ARG 0 clickedButton
	METHOD getQuickcraftMask (II)I
		ARG 0 quickCraftingHeader
		ARG 1 quickCraftingType
	METHOD getQuickcraftType (I)I
		COMMENT Extracts the drag mode. Args : eventButton. Return (0 : evenly split, 1 : one item by slot, 2 : not used ?)
		ARG 0 eventButton
	METHOD getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I
		COMMENT Like the version that takes an inventory. If the given BlockEntity is not an Inventory, 0 is returned instead.
		ARG 0 blockEntity
	METHOD getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I
		ARG 0 container
	METHOD getSlot (I)Lnet/minecraft/world/inventory/Slot;
		ARG 1 slotId
	METHOD initializeContents (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V
		ARG 1 stateId
		ARG 2 items
		ARG 3 carried
	METHOD isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z
		ARG 0 dragMode
		ARG 1 player
	METHOD isValidSlotIndex (I)Z
		ARG 1 slotIndex
	METHOD lambda$doClick$3 (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V
		ARG 3 stack
	METHOD lambda$doClick$4 (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V
		ARG 3 stack
	METHOD lambda$stillValid$0 (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/lang/Boolean;
		ARG 2 level
		ARG 3 blockPos
	METHOD moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z
		COMMENT Merges provided ItemStack with the first available one in the container/player inventor between minIndex (included) and maxIndex (excluded). Args : stack, minIndex, maxIndex, negativDirection. [!] the Container implementation do not check if the item is valid for the slot
		ARG 1 stack
		ARG 2 startIndex
		ARG 3 endIndex
		ARG 4 reverseDirection
	METHOD quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack;
		COMMENT Handle when the stack in slot {@code index} is shift-clicked. Normally this moves the stack between the player inventory and the other inventory(s).
		ARG 1 player
		ARG 2 index
	METHOD removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V
		COMMENT Remove the given Listener. Method name is for legacy.
		ARG 1 listener
	METHOD removed (Lnet/minecraft/world/entity/player/Player;)V
		COMMENT Called when the container is closed.
		ARG 1 player
	METHOD resetQuickCraft ()V
		COMMENT Reset the drag fields
	METHOD setCarried (Lnet/minecraft/world/item/ItemStack;)V
		ARG 1 stack
	METHOD setData (II)V
		ARG 1 id
		ARG 2 data
	METHOD setItem (IILnet/minecraft/world/item/ItemStack;)V
		COMMENT Puts an ItemStack in a slot.
		ARG 1 slotId
		ARG 2 stateId
		ARG 3 stack
	METHOD setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V
		ARG 1 remoteCarried
	METHOD setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V
		ARG 1 slot
		ARG 2 stack
	METHOD setRemoteSlotNoCopy (ILnet/minecraft/world/item/ItemStack;)V
		ARG 1 slot
		ARG 2 stack
	METHOD setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V
		ARG 1 synchronizer
	METHOD slotsChanged (Lnet/minecraft/world/Container;)V
		COMMENT Callback for when the crafting matrix is changed.
		ARG 1 container
	METHOD stillValid (Lnet/minecraft/world/entity/player/Player;)Z
		COMMENT Determines whether supplied player can use this container
		ARG 1 player
	METHOD stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z
		ARG 0 access
		ARG 1 player
		ARG 2 targetBlock
	METHOD synchronizeDataSlotToRemote (II)V
		ARG 1 slotIndex
		ARG 2 value
	METHOD synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V
		ARG 1 slotIndex
		ARG 2 stack
		ARG 3 supplier
	METHOD transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V
		ARG 1 menu
	METHOD triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V
		ARG 1 slotIndex
		ARG 2 stack
		ARG 3 supplier
	METHOD tryItemClickBehaviourOverride (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z
		ARG 1 player
		ARG 2 action
		ARG 3 slot
		ARG 4 clickedItem
		ARG 5 carriedItem
	METHOD updateDataSlotListeners (II)V
		ARG 1 slotIndex
		ARG 2 value
