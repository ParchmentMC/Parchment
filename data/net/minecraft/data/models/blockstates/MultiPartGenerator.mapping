CLASS net/minecraft/data/models/blockstates/MultiPartGenerator
	FIELD block Lnet/minecraft/world/level/block/Block;
	FIELD parts Ljava/util/List;
	METHOD <init> (Lnet/minecraft/world/level/block/Block;)V
	METHOD get ()Lcom/google/gson/JsonElement;
	METHOD get ()Ljava/lang/Object;
	METHOD getBlock ()Lnet/minecraft/world/level/block/Block;
	METHOD lambda$get$0 (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/data/models/blockstates/MultiPartGenerator$Entry;)V
	METHOD multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	METHOD with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	METHOD with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	METHOD with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	METHOD with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	METHOD with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator;
	CLASS ConditionalEntry
		FIELD condition Lnet/minecraft/data/models/blockstates/Condition;
		METHOD <init> (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)V
		METHOD decorate (Lcom/google/gson/JsonObject;)V
		METHOD validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V
	CLASS Entry
		FIELD variants Ljava/util/List;
		METHOD <init> (Ljava/util/List;)V
		METHOD decorate (Lcom/google/gson/JsonObject;)V
		METHOD get ()Lcom/google/gson/JsonElement;
		METHOD get ()Ljava/lang/Object;
		METHOD validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V
