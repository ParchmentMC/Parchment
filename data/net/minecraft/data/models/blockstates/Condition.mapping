CLASS net/minecraft/data/models/blockstates/Condition
	METHOD and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition;
		ARG 0 conditions
	METHOD or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition;
		ARG 0 conditions
	METHOD validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V
		ARG 1 stateDefinition
	CLASS Operation
		METHOD <init> (Ljava/lang/String;ILjava/lang/String;)V
			ARG 3 id
	CLASS TerminalCondition
		METHOD getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;
			ARG 0 property
			ARG 1 firstValue
			ARG 2 additionalValues
		METHOD joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String;
			ARG 0 property
			ARG 1 valueStream
		METHOD negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;
			ARG 1 property
			ARG 2 value
		METHOD negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;
			ARG 1 property
			ARG 2 firstValue
			ARG 3 additionalValues
		METHOD putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V
			ARG 1 property
			ARG 2 value
		METHOD term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;
			ARG 1 property
			ARG 2 value
		METHOD term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;
			ARG 1 property
			ARG 2 firstValue
			ARG 3 additionalValues
	CLASS CompositeCondition
		METHOD <init> (Lnet/minecraft/data/models/blockstates/Condition$Operation;Ljava/util/List;)V
			ARG 1 operation
			ARG 2 subconditions
