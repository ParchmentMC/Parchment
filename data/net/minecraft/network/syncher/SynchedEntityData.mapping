CLASS net/minecraft/network/syncher/SynchedEntityData
	COMMENT Keeps data in sync from server to client for an entity.
	COMMENT A maximum of 254 parameters per entity class can be registered. The system then ensures that these values are updated on the client whenever they change on the server.
	COMMENT
	COMMENT Use {@link #defineId} to register a piece of data for your entity class.
	COMMENT Use {@link #define} during {@link Entity#defineSynchedData} to set the default value for a given parameter.
	METHOD <init> (Lnet/minecraft/world/entity/Entity;)V
		ARG 1 entity
	METHOD assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;)V
		ARG 1 target
		ARG 2 entry
	METHOD assignValues (Ljava/util/List;)V
		COMMENT Updates the data using the given entries. Used on the client when the update packet is received.
		ARG 1 entries
	METHOD createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V
		ARG 1 key
		ARG 2 value
	METHOD define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V
		COMMENT Set the default value for a data parameter. Call this during {@link Entity#defineSynchedData}.
		ARG 1 key
		ARG 2 value
	METHOD defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor;
		COMMENT Register a piece of data to be kept in sync for an entity class.
		COMMENT This method must be called during a static initializer of an entity class and the first parameter of this method must be that entity class.
		ARG 0 clazz
		ARG 1 serializer
	METHOD get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object;
		COMMENT Get the value of the given key for this entity.
		ARG 1 key
	METHOD getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;
		ARG 1 key
	METHOD hasItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Z
		ARG 1 key
	METHOD isDirty ()Z
		COMMENT Whether any keys have changed since the last synchronization packet to the client.
	METHOD packDirty ()Ljava/util/List;
		COMMENT Gets all data entries which have changed since the last check and clears their dirty flag.
	METHOD set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V
		COMMENT Set the value of the given key for this entity.
		ARG 1 key
		ARG 2 value
	METHOD set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;Z)V
		ARG 1 key
		ARG 2 value
		ARG 3 force
	CLASS DataItem
		METHOD <init> (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V
			ARG 1 accessor
			ARG 2 value
		METHOD setDirty (Z)V
			ARG 1 dirty
		METHOD setValue (Ljava/lang/Object;)V
			ARG 1 value
	CLASS DataValue
		METHOD create (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;
			ARG 0 dataAccessor
			ARG 1 value
		METHOD read (Lnet/minecraft/network/FriendlyByteBuf;I)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;
			ARG 0 buffer
			ARG 1 id
		METHOD read (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;
			ARG 0 buffer
			ARG 1 id
			ARG 2 serializer
		METHOD write (Lnet/minecraft/network/FriendlyByteBuf;)V
			ARG 1 buffer
