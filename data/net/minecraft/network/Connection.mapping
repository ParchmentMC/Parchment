CLASS net/minecraft/network/Connection
	FIELD ATTRIBUTE_PROTOCOL Lio/netty/util/AttributeKey;
	FIELD AVERAGE_PACKETS_SMOOTHING F
	FIELD LOCAL_WORKER_GROUP Lnet/minecraft/util/LazyLoadedValue;
	FIELD LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD NETWORK_EPOLL_WORKER_GROUP Lnet/minecraft/util/LazyLoadedValue;
	FIELD NETWORK_WORKER_GROUP Lnet/minecraft/util/LazyLoadedValue;
	FIELD PACKET_MARKER Lorg/apache/logging/log4j/Marker;
	FIELD ROOT_MARKER Lorg/apache/logging/log4j/Marker;
	FIELD address Ljava/net/SocketAddress;
		COMMENT The address of the remote party
	FIELD averageReceivedPackets F
	FIELD averageSentPackets F
	FIELD channel Lio/netty/channel/Channel;
		COMMENT The active channel
	FIELD disconnectedReason Lnet/minecraft/network/chat/Component;
		COMMENT A String indicating why the network has shutdown.
	FIELD disconnectionHandled Z
	FIELD encrypted Z
	FIELD handlingFault Z
	FIELD packetListener Lnet/minecraft/network/PacketListener;
		COMMENT The INetHandler instance responsible for processing received packets
	FIELD queue Ljava/util/Queue;
		COMMENT The queue for packets that require transmission
	FIELD receivedPackets I
	FIELD receiving Lnet/minecraft/network/protocol/PacketFlow;
	FIELD sentPackets I
	FIELD tickCount I
	METHOD <clinit> ()V
	METHOD <init> (Lnet/minecraft/network/protocol/PacketFlow;)V
	METHOD channelActive (Lio/netty/channel/ChannelHandlerContext;)V
	METHOD channelInactive (Lio/netty/channel/ChannelHandlerContext;)V
	METHOD channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
	METHOD channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V
	METHOD connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection;
		COMMENT Prepares a clientside NetworkManager: establishes a connection to the socket supplied and configures the channel pipeline. Returns the newly created instance.
		ARG 0 address
	METHOD connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection;
	METHOD disconnect (Lnet/minecraft/network/chat/Component;)V
		COMMENT Closes the channel, the parameter can be used for an exit message (not certain how it gets sent)
		ARG 1 message
	METHOD doSendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V
	METHOD exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
	METHOD flushQueue ()V
		COMMENT Will iterate through the outboundPacketQueue and dispatch all Packets
	METHOD genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V
	METHOD getAverageReceivedPackets ()F
	METHOD getAverageSentPackets ()F
	METHOD getCurrentProtocol ()Lnet/minecraft/network/ConnectionProtocol;
	METHOD getDisconnectedReason ()Lnet/minecraft/network/chat/Component;
		COMMENT If this channel is closed, returns the exit message, null otherwise.
	METHOD getPacketListener ()Lnet/minecraft/network/PacketListener;
		COMMENT Gets the current handler for processing packets
	METHOD getReceiving ()Lnet/minecraft/network/protocol/PacketFlow;
	METHOD getRemoteAddress ()Ljava/net/SocketAddress;
		COMMENT Returns the socket address of the remote side. Server-only.
	METHOD getSending ()Lnet/minecraft/network/protocol/PacketFlow;
	METHOD handleDisconnection ()V
	METHOD isConnected ()Z
		COMMENT Returns true if this NetworkManager has an active channel, false otherwise
	METHOD isConnecting ()Z
	METHOD isEncrypted ()Z
	METHOD isMemoryConnection ()Z
		COMMENT True if this NetworkManager uses a memory connection (single player game). False may imply both an active TCP connection or simply no active connection at all
	METHOD lambda$exceptionCaught$3 (Lnet/minecraft/network/chat/Component;Lio/netty/util/concurrent/Future;)V
	METHOD lambda$sendPacket$4 (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V
	METHOD lambda$static$0 ()Lio/netty/channel/nio/NioEventLoopGroup;
	METHOD lambda$static$1 ()Lio/netty/channel/epoll/EpollEventLoopGroup;
	METHOD lambda$static$2 ()Lio/netty/channel/DefaultEventLoopGroup;
	METHOD send (Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 packet
	METHOD send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V
		ARG 1 packet
	METHOD sendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V
		COMMENT Will commit the packet to the channel. If the current thread 'owns' the channel it will write and flush the packet, otherwise it will add a task for the channel eventloop thread to do that.
		ARG 1 inPacket
		ARG 2 futureListeners
	METHOD setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V
	METHOD setListener (Lnet/minecraft/network/PacketListener;)V
		COMMENT Sets the NetHandler for this NetworkManager, no checks are made if this handler is suitable for the particular connection state (protocol)
		ARG 1 handler
	METHOD setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V
		COMMENT Sets the new connection state and registers which packets this channel may send and receive
		ARG 1 newState
	METHOD setReadOnly ()V
		COMMENT Switches the channel to manual reading modus
	METHOD setupCompression (I)V
		ARG 1 threshold
	METHOD tick ()V
		COMMENT Checks timeouts and processes all packets received
	METHOD tickSecond ()V
	CLASS 1
		FIELD val$connection Lnet/minecraft/network/Connection;
		METHOD <init> (Lnet/minecraft/network/Connection;)V
		METHOD initChannel (Lio/netty/channel/Channel;)V
	CLASS 2
		FIELD val$connection Lnet/minecraft/network/Connection;
		METHOD <init> (Lnet/minecraft/network/Connection;)V
		METHOD initChannel (Lio/netty/channel/Channel;)V
	CLASS PacketHolder
		FIELD listener Lio/netty/util/concurrent/GenericFutureListener;
		FIELD packet Lnet/minecraft/network/protocol/Packet;
		METHOD <init> (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V
