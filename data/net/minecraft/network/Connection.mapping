CLASS net/minecraft/network/Connection
	FIELD address Ljava/net/SocketAddress;
		COMMENT The address of the remote party
	FIELD channel Lio/netty/channel/Channel;
		COMMENT The active channel
	FIELD disconnectedReason Lnet/minecraft/network/chat/Component;
		COMMENT A Component indicating why the network has shutdown.
	FIELD packetListener Lnet/minecraft/network/PacketListener;
		COMMENT The PacketListener instance responsible for processing received packets
	FIELD queue Ljava/util/Queue;
		COMMENT The queue for packets that get sent before the channel is connected.
		COMMENT Every tick or whenever a new packet is sent the connection will try to flush this queue, if the channel has since finished connecting.
	METHOD <init> (Lnet/minecraft/network/protocol/PacketFlow;)V
		ARG 1 receiving
	METHOD channelActive (Lio/netty/channel/ChannelHandlerContext;)V
		ARG 1 context
	METHOD channelInactive (Lio/netty/channel/ChannelHandlerContext;)V
		ARG 1 context
	METHOD channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 context
		ARG 2 packet
	METHOD connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection;
		COMMENT Prepares a clientside Connection for a local in-memory connection ("single player").
		COMMENT Establishes a connection to the socket supplied and configures the channel pipeline (only the packet handler is necessary,
		COMMENT since this is for an in-memory connection). Returns the newly created instance.
		ARG 0 address
	METHOD connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection;
		COMMENT Prepares a clientside Connection for a network connection to a remote server.
		COMMENT Establishes a connection to the socket supplied and configures the channel pipeline. Returns the newly created instance.
		ARG 0 address
		ARG 1 useEpollIfAvailable
			COMMENT whether to use an Epoll channel if it is available
	METHOD disconnect (Lnet/minecraft/network/chat/Component;)V
		COMMENT Closes the channel with a given reason. The reason is stored for later and will be used for informational purposes (info log on server,
		COMMENT disconnection screen on the client). This method is also called on the client when the server requests disconnection via
		COMMENT {@code ClientboundDisconnectPacket}.
		COMMENT
		COMMENT Closing the channel this way does not send any disconnection packets, it simply terminates the underlying netty channel.
		ARG 1 message
	METHOD doSendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V
		ARG 1 packet
		ARG 2 sendListener
		ARG 3 newProtocol
		ARG 4 currentProtocol
	METHOD exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
		ARG 1 context
		ARG 2 exception
	METHOD flushQueue ()V
		COMMENT Will iterate through the outboundPacketQueue and dispatch all Packets
	METHOD genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V
		ARG 0 packet
		ARG 1 listener
	METHOD getDisconnectedReason ()Lnet/minecraft/network/chat/Component;
		COMMENT If this channel is closed, returns the exit message, null otherwise.
	METHOD getPacketListener ()Lnet/minecraft/network/PacketListener;
		COMMENT Gets the current handler for processing packets
	METHOD getReceiving ()Lnet/minecraft/network/protocol/PacketFlow;
		COMMENT The receiving packet direction (i.e. SERVERBOUND on the server and CLIENTBOUND on the client).
	METHOD getRemoteAddress ()Ljava/net/SocketAddress;
		COMMENT Returns the socket address of the remote side. Server-only.
	METHOD getSending ()Lnet/minecraft/network/protocol/PacketFlow;
		COMMENT The sending packet direction (i.e. SERVERBOUND on the client and CLIENTBOUND on the server)
	METHOD handleDisconnection ()V
		COMMENT Checks if the channel is no longer active and if so, processes the disconnection
		COMMENT by notifying the current packet listener, which will handle things like removing the player from the world (serverside) or
		COMMENT showing the disconnection screen (clientside).
	METHOD isConnected ()Z
		COMMENT Returns {@code true} if this NetworkManager has an active channel, false otherwise
	METHOD isConnecting ()Z
		COMMENT Returns {@code true} while this connection is still connecting, i.e. {@link #channelActive} has not fired yet.
	METHOD isMemoryConnection ()Z
		COMMENT True if this NetworkManager uses a memory connection (single player game). False may imply both an active TCP connection or simply no active connection at all
	METHOD send (Lnet/minecraft/network/protocol/Packet;)V
		ARG 1 packet
	METHOD send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V
		ARG 1 packet
		ARG 2 sendListener
	METHOD sendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V
		COMMENT Will commit the packet to the channel. If the current thread 'owns' the channel it will write and flush the packet, otherwise it will add a task for the channel eventloop thread to do that.
		ARG 1 packet
		ARG 2 sendListener
	METHOD setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V
		COMMENT Enables encryption for this connection using the given decrypting and encrypting ciphers.
		COMMENT This adds new handlers to this connection's pipeline which handle the decrypting and encrypting.
		COMMENT This happens as part of the normal network handshake.
		COMMENT
		COMMENT @see net.minecraft.network.protocol.login.ClientboundHelloPacket
		COMMENT @see net.minecraft.network.protocol.login.ServerboundKeyPacket
		ARG 1 decryptingCipher
		ARG 2 encryptingCipher
	METHOD setListener (Lnet/minecraft/network/PacketListener;)V
		COMMENT Sets the NetHandler for this NetworkManager, no checks are made if this handler is suitable for the particular connection state (protocol)
		ARG 1 handler
	METHOD setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V
		COMMENT Sets the new connection state and registers which packets this channel may send and receive
		ARG 1 newState
	METHOD setReadOnly ()V
		COMMENT Switches the channel to manual reading modus
	METHOD setupCompression (IZ)V
		COMMENT Enables or disables compression for this connection. If {@code threshold} is >= 0 then a {@link CompressionDecoder} and {@link CompressionEncoder}
		COMMENT are installed in the pipeline or updated if they already exist. If {@code threshold} is < 0 then any such codec are removed.
		COMMENT
		COMMENT Compression is enabled as part of the connection handshake when the server sends {@link net.minecraft.network.protocol.login.ClientboundLoginCompressionPacket}.
		ARG 1 threshold
		ARG 2 validateDecompressed
	METHOD tick ()V
		COMMENT Checks timeouts and processes all packets received
	CLASS 1
		METHOD initChannel (Lio/netty/channel/Channel;)V
			ARG 1 channel
	CLASS 2
		METHOD initChannel (Lio/netty/channel/Channel;)V
			ARG 1 channel
	CLASS PacketHolder
		METHOD <init> (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V
			ARG 1 packet
			ARG 2 listener
