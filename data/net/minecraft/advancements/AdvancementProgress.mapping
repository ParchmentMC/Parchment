CLASS net/minecraft/advancements/AdvancementProgress
	METHOD <init> (Ljava/util/Map;)V
		ARG 1 criteria
	METHOD compareTo (Ljava/lang/Object;)I
		ARG 1 otherProgress
	METHOD compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I
		ARG 1 other
	METHOD fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress;
		ARG 0 buffer
	METHOD getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress;
		ARG 1 criterionName
	METHOD grantProgress (Ljava/lang/String;)Z
		ARG 1 criterionName
	METHOD isCriterionDone (Ljava/lang/String;)Z
		ARG 1 criterionName
	METHOD lambda$serializeToNetwork$10 (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/advancements/CriterionProgress;)V
		ARG 0 buffer
		ARG 1 criterionProgress
	METHOD lambda$static$0 (Ljava/time/Instant;)Ljava/time/temporal/TemporalAccessor;
		ARG 0 instant
	METHOD lambda$static$1 (Ljava/util/Map$Entry;)Lnet/minecraft/advancements/CriterionProgress;
		ARG 0 entry
	METHOD lambda$static$2 (Ljava/util/Map;)Ljava/util/Map;
		ARG 0 achievements
	METHOD lambda$static$3 (Ljava/util/Map$Entry;)Z
		ARG 0 criteria
	METHOD lambda$static$4 (Ljava/util/Map$Entry;)Ljava/time/Instant;
		ARG 0 entry
	METHOD lambda$static$5 (Ljava/util/Map;)Ljava/util/Map;
		ARG 0 achievements
	METHOD lambda$static$6 (Lnet/minecraft/advancements/AdvancementProgress;)Ljava/util/Map;
		ARG 0 progress
	METHOD lambda$static$7 (Ljava/util/Map;Ljava/lang/Boolean;)Lnet/minecraft/advancements/AdvancementProgress;
		ARG 0 criteria
		ARG 1 done
	METHOD lambda$static$8 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
		ARG 0 instance
	METHOD lambda$update$9 (Ljava/util/Set;Ljava/util/Map$Entry;)Z
		ARG 1 criteria
	METHOD revokeProgress (Ljava/lang/String;)Z
		ARG 1 criterionName
	METHOD serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V
		ARG 1 buffer
	METHOD update (Lnet/minecraft/advancements/AdvancementRequirements;)V
		ARG 1 requirements
